// Write your answer to Problem 2 (b) here

Write an assembly program to demonstrate forwarding in a pipelined processor implementation.


sub $2,   $1, $3  # Register $2 set by sub
and $12,  $2, $5  # 1st operand($2) set by sub  (condition 1a)
or  $13,  $6, $2  # 2nd operand($2) set by sub (condition 2b)
add $14,  $2, $2  # 1st($2) & 2nd($2) set by sub
sw  $15,  100($2) # Index($2) set by sub

condition 1a: forwarding from EX/MEM reg to oprants into mux for next instruction in EX stage. 
condition 2b: forwarding from MEM/WB reg to oprants into mux for second next instruction OR in EX stage. 

