$date
	Thu Apr 21 10:35:35 2016
$end
$version
	ModelSim Version 5.8b
$end
$timescale
	1ns
$end
$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end
$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end
$scope task end_simulation $end
$upscope $end
$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end
$scope module m0 $end
$var parameter 32 $! mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 %! cache_err $end
$var wire 1 &! mem_err $end
$var wire 1 '! tag_in [4] $end
$var wire 1 (! tag_in [3] $end
$var wire 1 )! tag_in [2] $end
$var wire 1 *! tag_in [1] $end
$var wire 1 +! tag_in [0] $end
$var wire 1 ,! index [7] $end
$var wire 1 -! index [6] $end
$var wire 1 .! index [5] $end
$var wire 1 /! index [4] $end
$var wire 1 0! index [3] $end
$var wire 1 1! index [2] $end
$var wire 1 2! index [1] $end
$var wire 1 3! index [0] $end
$var wire 1 4! offset [2] $end
$var wire 1 5! offset [1] $end
$var wire 1 6! offset [0] $end
$var wire 1 7! data_in_cache [15] $end
$var wire 1 8! data_in_cache [14] $end
$var wire 1 9! data_in_cache [13] $end
$var wire 1 :! data_in_cache [12] $end
$var wire 1 ;! data_in_cache [11] $end
$var wire 1 <! data_in_cache [10] $end
$var wire 1 =! data_in_cache [9] $end
$var wire 1 >! data_in_cache [8] $end
$var wire 1 ?! data_in_cache [7] $end
$var wire 1 @! data_in_cache [6] $end
$var wire 1 A! data_in_cache [5] $end
$var wire 1 B! data_in_cache [4] $end
$var wire 1 C! data_in_cache [3] $end
$var wire 1 D! data_in_cache [2] $end
$var wire 1 E! data_in_cache [1] $end
$var wire 1 F! data_in_cache [0] $end
$var wire 1 G! nxt_state [3] $end
$var wire 1 H! nxt_state [2] $end
$var wire 1 I! nxt_state [1] $end
$var wire 1 J! nxt_state [0] $end
$var wire 1 K! curr_state [3] $end
$var wire 1 L! curr_state [2] $end
$var wire 1 M! curr_state [1] $end
$var wire 1 N! curr_state [0] $end
$var wire 1 O! stall $end
$var wire 1 P! mem_addr [15] $end
$var wire 1 Q! mem_addr [14] $end
$var wire 1 R! mem_addr [13] $end
$var wire 1 S! mem_addr [12] $end
$var wire 1 T! mem_addr [11] $end
$var wire 1 U! mem_addr [10] $end
$var wire 1 V! mem_addr [9] $end
$var wire 1 W! mem_addr [8] $end
$var wire 1 X! mem_addr [7] $end
$var wire 1 Y! mem_addr [6] $end
$var wire 1 Z! mem_addr [5] $end
$var wire 1 [! mem_addr [4] $end
$var wire 1 \! mem_addr [3] $end
$var wire 1 ]! mem_addr [2] $end
$var wire 1 ^! mem_addr [1] $end
$var wire 1 _! mem_addr [0] $end
$var wire 1 `! data_out_mem [15] $end
$var wire 1 a! data_out_mem [14] $end
$var wire 1 b! data_out_mem [13] $end
$var wire 1 c! data_out_mem [12] $end
$var wire 1 d! data_out_mem [11] $end
$var wire 1 e! data_out_mem [10] $end
$var wire 1 f! data_out_mem [9] $end
$var wire 1 g! data_out_mem [8] $end
$var wire 1 h! data_out_mem [7] $end
$var wire 1 i! data_out_mem [6] $end
$var wire 1 j! data_out_mem [5] $end
$var wire 1 k! data_out_mem [4] $end
$var wire 1 l! data_out_mem [3] $end
$var wire 1 m! data_out_mem [2] $end
$var wire 1 n! data_out_mem [1] $end
$var wire 1 o! data_out_mem [0] $end
$var wire 1 p! busy_mem_out [3] $end
$var wire 1 q! busy_mem_out [2] $end
$var wire 1 r! busy_mem_out [1] $end
$var wire 1 s! busy_mem_out [0] $end
$var wire 1 t! mem_offset [1] $end
$var wire 1 u! mem_offset [0] $end
$var wire 1 v! busy $end
$var wire 1 w! cache_offset [1] $end
$var wire 1 x! cache_offset [0] $end
$var wire 1 y! cache_addr [15] $end
$var wire 1 z! cache_addr [14] $end
$var wire 1 {! cache_addr [13] $end
$var wire 1 |! cache_addr [12] $end
$var wire 1 }! cache_addr [11] $end
$var wire 1 ~! cache_addr [10] $end
$var wire 1 !" cache_addr [9] $end
$var wire 1 "" cache_addr [8] $end
$var wire 1 #" cache_addr [7] $end
$var wire 1 $" cache_addr [6] $end
$var wire 1 %" cache_addr [5] $end
$var wire 1 &" cache_addr [4] $end
$var wire 1 '" cache_addr [3] $end
$var wire 1 (" cache_addr [2] $end
$var wire 1 )" cache_addr [1] $end
$var wire 1 *" cache_addr [0] $end
$var wire 1 +" write $end
$var wire 1 ," comp $end
$var wire 1 -" enable $end
$var wire 1 ." wr $end
$var wire 1 /" rd $end
$var wire 1 0" cache_stall $end
$var wire 1 1" potentialHit $end
$var wire 1 2" cache_dataout [15] $end
$var wire 1 3" cache_dataout [14] $end
$var wire 1 4" cache_dataout [13] $end
$var wire 1 5" cache_dataout [12] $end
$var wire 1 6" cache_dataout [11] $end
$var wire 1 7" cache_dataout [10] $end
$var wire 1 8" cache_dataout [9] $end
$var wire 1 9" cache_dataout [8] $end
$var wire 1 :" cache_dataout [7] $end
$var wire 1 ;" cache_dataout [6] $end
$var wire 1 <" cache_dataout [5] $end
$var wire 1 =" cache_dataout [4] $end
$var wire 1 >" cache_dataout [3] $end
$var wire 1 ?" cache_dataout [2] $end
$var wire 1 @" cache_dataout [1] $end
$var wire 1 A" cache_dataout [0] $end
$var wire 1 B" cache2_dataout [15] $end
$var wire 1 C" cache2_dataout [14] $end
$var wire 1 D" cache2_dataout [13] $end
$var wire 1 E" cache2_dataout [12] $end
$var wire 1 F" cache2_dataout [11] $end
$var wire 1 G" cache2_dataout [10] $end
$var wire 1 H" cache2_dataout [9] $end
$var wire 1 I" cache2_dataout [8] $end
$var wire 1 J" cache2_dataout [7] $end
$var wire 1 K" cache2_dataout [6] $end
$var wire 1 L" cache2_dataout [5] $end
$var wire 1 M" cache2_dataout [4] $end
$var wire 1 N" cache2_dataout [3] $end
$var wire 1 O" cache2_dataout [2] $end
$var wire 1 P" cache2_dataout [1] $end
$var wire 1 Q" cache2_dataout [0] $end
$var wire 1 R" cache1_dataout [15] $end
$var wire 1 S" cache1_dataout [14] $end
$var wire 1 T" cache1_dataout [13] $end
$var wire 1 U" cache1_dataout [12] $end
$var wire 1 V" cache1_dataout [11] $end
$var wire 1 W" cache1_dataout [10] $end
$var wire 1 X" cache1_dataout [9] $end
$var wire 1 Y" cache1_dataout [8] $end
$var wire 1 Z" cache1_dataout [7] $end
$var wire 1 [" cache1_dataout [6] $end
$var wire 1 \" cache1_dataout [5] $end
$var wire 1 ]" cache1_dataout [4] $end
$var wire 1 ^" cache1_dataout [3] $end
$var wire 1 _" cache1_dataout [2] $end
$var wire 1 `" cache1_dataout [1] $end
$var wire 1 a" cache1_dataout [0] $end
$var wire 1 b" cache_tagout [4] $end
$var wire 1 c" cache_tagout [3] $end
$var wire 1 d" cache_tagout [2] $end
$var wire 1 e" cache_tagout [1] $end
$var wire 1 f" cache_tagout [0] $end
$var wire 1 g" cache2_tagout [4] $end
$var wire 1 h" cache2_tagout [3] $end
$var wire 1 i" cache2_tagout [2] $end
$var wire 1 j" cache2_tagout [1] $end
$var wire 1 k" cache2_tagout [0] $end
$var wire 1 l" cache1_tagout [4] $end
$var wire 1 m" cache1_tagout [3] $end
$var wire 1 n" cache1_tagout [2] $end
$var wire 1 o" cache1_tagout [1] $end
$var wire 1 p" cache1_tagout [0] $end
$var wire 1 q" cache_hit $end
$var wire 1 r" cache_valid $end
$var wire 1 s" cache_dirty $end
$var wire 1 t" cache2_dirty $end
$var wire 1 u" cache1_dirty $end
$var wire 1 v" cache1_hit $end
$var wire 1 w" cache2_hit $end
$var wire 1 x" cache1_valid $end
$var wire 1 y" cache2_valid $end
$var wire 1 z" cache1hit $end
$var wire 1 {" cache2hit $end
$var wire 1 |" cache_en [1] $end
$var wire 1 }" cache_en [0] $end
$var wire 1 ~" cache1_en $end
$var wire 1 !# cache2_en $end
$var wire 1 "# data_sel $end
$var wire 1 ## w1 $end
$var wire 1 $# w2 $end
$var wire 1 %# cache1_err $end
$var wire 1 &# cache2_err $end
$var wire 1 '# random [1] $end
$var wire 1 (# random [0] $end
$scope module victimway $end
$var wire 1 ## q $end
$var wire 1 $# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )# state $end
$upscope $end
$scope module c0 $end
$var parameter 32 *# cache_id $end
$var wire 1 ~" enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 '! tag_in [4] $end
$var wire 1 (! tag_in [3] $end
$var wire 1 )! tag_in [2] $end
$var wire 1 *! tag_in [1] $end
$var wire 1 +! tag_in [0] $end
$var wire 1 ,! index [7] $end
$var wire 1 -! index [6] $end
$var wire 1 .! index [5] $end
$var wire 1 /! index [4] $end
$var wire 1 0! index [3] $end
$var wire 1 1! index [2] $end
$var wire 1 2! index [1] $end
$var wire 1 3! index [0] $end
$var wire 1 4! offset [2] $end
$var wire 1 5! offset [1] $end
$var wire 1 6! offset [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 ," comp $end
$var wire 1 +" write $end
$var wire 1 +# valid_in $end
$var wire 1 l" tag_out [4] $end
$var wire 1 m" tag_out [3] $end
$var wire 1 n" tag_out [2] $end
$var wire 1 o" tag_out [1] $end
$var wire 1 p" tag_out [0] $end
$var wire 1 R" data_out [15] $end
$var wire 1 S" data_out [14] $end
$var wire 1 T" data_out [13] $end
$var wire 1 U" data_out [12] $end
$var wire 1 V" data_out [11] $end
$var wire 1 W" data_out [10] $end
$var wire 1 X" data_out [9] $end
$var wire 1 Y" data_out [8] $end
$var wire 1 Z" data_out [7] $end
$var wire 1 [" data_out [6] $end
$var wire 1 \" data_out [5] $end
$var wire 1 ]" data_out [4] $end
$var wire 1 ^" data_out [3] $end
$var wire 1 _" data_out [2] $end
$var wire 1 `" data_out [1] $end
$var wire 1 a" data_out [0] $end
$var wire 1 v" hit $end
$var wire 1 u" dirty $end
$var wire 1 x" valid $end
$var wire 1 %# err $end
$var wire 1 ,# ram0_id [4] $end
$var wire 1 -# ram0_id [3] $end
$var wire 1 .# ram0_id [2] $end
$var wire 1 /# ram0_id [1] $end
$var wire 1 0# ram0_id [0] $end
$var wire 1 1# ram1_id [4] $end
$var wire 1 2# ram1_id [3] $end
$var wire 1 3# ram1_id [2] $end
$var wire 1 4# ram1_id [1] $end
$var wire 1 5# ram1_id [0] $end
$var wire 1 6# ram2_id [4] $end
$var wire 1 7# ram2_id [3] $end
$var wire 1 8# ram2_id [2] $end
$var wire 1 9# ram2_id [1] $end
$var wire 1 :# ram2_id [0] $end
$var wire 1 ;# ram3_id [4] $end
$var wire 1 <# ram3_id [3] $end
$var wire 1 =# ram3_id [2] $end
$var wire 1 ># ram3_id [1] $end
$var wire 1 ?# ram3_id [0] $end
$var wire 1 @# ram4_id [4] $end
$var wire 1 A# ram4_id [3] $end
$var wire 1 B# ram4_id [2] $end
$var wire 1 C# ram4_id [1] $end
$var wire 1 D# ram4_id [0] $end
$var wire 1 E# ram5_id [4] $end
$var wire 1 F# ram5_id [3] $end
$var wire 1 G# ram5_id [2] $end
$var wire 1 H# ram5_id [1] $end
$var wire 1 I# ram5_id [0] $end
$var wire 1 J# w0 [15] $end
$var wire 1 K# w0 [14] $end
$var wire 1 L# w0 [13] $end
$var wire 1 M# w0 [12] $end
$var wire 1 N# w0 [11] $end
$var wire 1 O# w0 [10] $end
$var wire 1 P# w0 [9] $end
$var wire 1 Q# w0 [8] $end
$var wire 1 R# w0 [7] $end
$var wire 1 S# w0 [6] $end
$var wire 1 T# w0 [5] $end
$var wire 1 U# w0 [4] $end
$var wire 1 V# w0 [3] $end
$var wire 1 W# w0 [2] $end
$var wire 1 X# w0 [1] $end
$var wire 1 Y# w0 [0] $end
$var wire 1 Z# w1 [15] $end
$var wire 1 [# w1 [14] $end
$var wire 1 \# w1 [13] $end
$var wire 1 ]# w1 [12] $end
$var wire 1 ^# w1 [11] $end
$var wire 1 _# w1 [10] $end
$var wire 1 `# w1 [9] $end
$var wire 1 a# w1 [8] $end
$var wire 1 b# w1 [7] $end
$var wire 1 c# w1 [6] $end
$var wire 1 d# w1 [5] $end
$var wire 1 e# w1 [4] $end
$var wire 1 f# w1 [3] $end
$var wire 1 g# w1 [2] $end
$var wire 1 h# w1 [1] $end
$var wire 1 i# w1 [0] $end
$var wire 1 j# w2 [15] $end
$var wire 1 k# w2 [14] $end
$var wire 1 l# w2 [13] $end
$var wire 1 m# w2 [12] $end
$var wire 1 n# w2 [11] $end
$var wire 1 o# w2 [10] $end
$var wire 1 p# w2 [9] $end
$var wire 1 q# w2 [8] $end
$var wire 1 r# w2 [7] $end
$var wire 1 s# w2 [6] $end
$var wire 1 t# w2 [5] $end
$var wire 1 u# w2 [4] $end
$var wire 1 v# w2 [3] $end
$var wire 1 w# w2 [2] $end
$var wire 1 x# w2 [1] $end
$var wire 1 y# w2 [0] $end
$var wire 1 z# w3 [15] $end
$var wire 1 {# w3 [14] $end
$var wire 1 |# w3 [13] $end
$var wire 1 }# w3 [12] $end
$var wire 1 ~# w3 [11] $end
$var wire 1 !$ w3 [10] $end
$var wire 1 "$ w3 [9] $end
$var wire 1 #$ w3 [8] $end
$var wire 1 $$ w3 [7] $end
$var wire 1 %$ w3 [6] $end
$var wire 1 &$ w3 [5] $end
$var wire 1 '$ w3 [4] $end
$var wire 1 ($ w3 [3] $end
$var wire 1 )$ w3 [2] $end
$var wire 1 *$ w3 [1] $end
$var wire 1 +$ w3 [0] $end
$var wire 1 ,$ go $end
$var wire 1 -$ match $end
$var wire 1 .$ wr_word0 $end
$var wire 1 /$ wr_word1 $end
$var wire 1 0$ wr_word2 $end
$var wire 1 1$ wr_word3 $end
$var wire 1 2$ wr_dirty $end
$var wire 1 3$ wr_tag $end
$var wire 1 4$ wr_valid $end
$var wire 1 5$ dirty_in $end
$var wire 1 6$ dirtybit $end
$var wire 1 7$ validbit $end
$scope module mem_w0 $end
$var parameter 32 8$ Size $end
$var wire 1 J# data_out [15] $end
$var wire 1 K# data_out [14] $end
$var wire 1 L# data_out [13] $end
$var wire 1 M# data_out [12] $end
$var wire 1 N# data_out [11] $end
$var wire 1 O# data_out [10] $end
$var wire 1 P# data_out [9] $end
$var wire 1 Q# data_out [8] $end
$var wire 1 R# data_out [7] $end
$var wire 1 S# data_out [6] $end
$var wire 1 T# data_out [5] $end
$var wire 1 U# data_out [4] $end
$var wire 1 V# data_out [3] $end
$var wire 1 W# data_out [2] $end
$var wire 1 X# data_out [1] $end
$var wire 1 Y# data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 .$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ,# file_id [4] $end
$var wire 1 -# file_id [3] $end
$var wire 1 .# file_id [2] $end
$var wire 1 /# file_id [1] $end
$var wire 1 0# file_id [0] $end
$var integer 32 9$ mcd $end
$var integer 32 :$ i $end
$upscope $end
$scope module mem_w1 $end
$var parameter 32 ;$ Size $end
$var wire 1 Z# data_out [15] $end
$var wire 1 [# data_out [14] $end
$var wire 1 \# data_out [13] $end
$var wire 1 ]# data_out [12] $end
$var wire 1 ^# data_out [11] $end
$var wire 1 _# data_out [10] $end
$var wire 1 `# data_out [9] $end
$var wire 1 a# data_out [8] $end
$var wire 1 b# data_out [7] $end
$var wire 1 c# data_out [6] $end
$var wire 1 d# data_out [5] $end
$var wire 1 e# data_out [4] $end
$var wire 1 f# data_out [3] $end
$var wire 1 g# data_out [2] $end
$var wire 1 h# data_out [1] $end
$var wire 1 i# data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 /$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 1# file_id [4] $end
$var wire 1 2# file_id [3] $end
$var wire 1 3# file_id [2] $end
$var wire 1 4# file_id [1] $end
$var wire 1 5# file_id [0] $end
$var integer 32 <$ mcd $end
$var integer 32 =$ i $end
$upscope $end
$scope module mem_w2 $end
$var parameter 32 >$ Size $end
$var wire 1 j# data_out [15] $end
$var wire 1 k# data_out [14] $end
$var wire 1 l# data_out [13] $end
$var wire 1 m# data_out [12] $end
$var wire 1 n# data_out [11] $end
$var wire 1 o# data_out [10] $end
$var wire 1 p# data_out [9] $end
$var wire 1 q# data_out [8] $end
$var wire 1 r# data_out [7] $end
$var wire 1 s# data_out [6] $end
$var wire 1 t# data_out [5] $end
$var wire 1 u# data_out [4] $end
$var wire 1 v# data_out [3] $end
$var wire 1 w# data_out [2] $end
$var wire 1 x# data_out [1] $end
$var wire 1 y# data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 0$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 6# file_id [4] $end
$var wire 1 7# file_id [3] $end
$var wire 1 8# file_id [2] $end
$var wire 1 9# file_id [1] $end
$var wire 1 :# file_id [0] $end
$var integer 32 ?$ mcd $end
$var integer 32 @$ i $end
$upscope $end
$scope module mem_w3 $end
$var parameter 32 A$ Size $end
$var wire 1 z# data_out [15] $end
$var wire 1 {# data_out [14] $end
$var wire 1 |# data_out [13] $end
$var wire 1 }# data_out [12] $end
$var wire 1 ~# data_out [11] $end
$var wire 1 !$ data_out [10] $end
$var wire 1 "$ data_out [9] $end
$var wire 1 #$ data_out [8] $end
$var wire 1 $$ data_out [7] $end
$var wire 1 %$ data_out [6] $end
$var wire 1 &$ data_out [5] $end
$var wire 1 '$ data_out [4] $end
$var wire 1 ($ data_out [3] $end
$var wire 1 )$ data_out [2] $end
$var wire 1 *$ data_out [1] $end
$var wire 1 +$ data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 1$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ;# file_id [4] $end
$var wire 1 <# file_id [3] $end
$var wire 1 =# file_id [2] $end
$var wire 1 ># file_id [1] $end
$var wire 1 ?# file_id [0] $end
$var integer 32 B$ mcd $end
$var integer 32 C$ i $end
$upscope $end
$scope module mem_tg $end
$var parameter 32 D$ Size $end
$var wire 1 l" data_out [4] $end
$var wire 1 m" data_out [3] $end
$var wire 1 n" data_out [2] $end
$var wire 1 o" data_out [1] $end
$var wire 1 p" data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 '! data_in [4] $end
$var wire 1 (! data_in [3] $end
$var wire 1 )! data_in [2] $end
$var wire 1 *! data_in [1] $end
$var wire 1 +! data_in [0] $end
$var wire 1 3$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 @# file_id [4] $end
$var wire 1 A# file_id [3] $end
$var wire 1 B# file_id [2] $end
$var wire 1 C# file_id [1] $end
$var wire 1 D# file_id [0] $end
$var integer 32 E$ mcd $end
$var integer 32 F$ i $end
$upscope $end
$scope module mem_dr $end
$var parameter 32 G$ Size $end
$var wire 1 6$ data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 5$ data_in [0] $end
$var wire 1 2$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 E# file_id [4] $end
$var wire 1 F# file_id [3] $end
$var wire 1 G# file_id [2] $end
$var wire 1 H# file_id [1] $end
$var wire 1 I# file_id [0] $end
$var integer 32 H$ mcd $end
$var integer 32 I$ i $end
$upscope $end
$scope module mem_vl $end
$var wire 1 7$ data_out $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 +# data_in $end
$var wire 1 4$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ,# file_id [4] $end
$var wire 1 -# file_id [3] $end
$var wire 1 .# file_id [2] $end
$var wire 1 /# file_id [1] $end
$var wire 1 0# file_id [0] $end
$var integer 32 J$ mcd $end
$var integer 32 K$ i $end
$upscope $end
$upscope $end
$scope module c1 $end
$var parameter 32 L$ cache_id $end
$var wire 1 !# enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 '! tag_in [4] $end
$var wire 1 (! tag_in [3] $end
$var wire 1 )! tag_in [2] $end
$var wire 1 *! tag_in [1] $end
$var wire 1 +! tag_in [0] $end
$var wire 1 ,! index [7] $end
$var wire 1 -! index [6] $end
$var wire 1 .! index [5] $end
$var wire 1 /! index [4] $end
$var wire 1 0! index [3] $end
$var wire 1 1! index [2] $end
$var wire 1 2! index [1] $end
$var wire 1 3! index [0] $end
$var wire 1 4! offset [2] $end
$var wire 1 5! offset [1] $end
$var wire 1 6! offset [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 ," comp $end
$var wire 1 +" write $end
$var wire 1 M$ valid_in $end
$var wire 1 g" tag_out [4] $end
$var wire 1 h" tag_out [3] $end
$var wire 1 i" tag_out [2] $end
$var wire 1 j" tag_out [1] $end
$var wire 1 k" tag_out [0] $end
$var wire 1 B" data_out [15] $end
$var wire 1 C" data_out [14] $end
$var wire 1 D" data_out [13] $end
$var wire 1 E" data_out [12] $end
$var wire 1 F" data_out [11] $end
$var wire 1 G" data_out [10] $end
$var wire 1 H" data_out [9] $end
$var wire 1 I" data_out [8] $end
$var wire 1 J" data_out [7] $end
$var wire 1 K" data_out [6] $end
$var wire 1 L" data_out [5] $end
$var wire 1 M" data_out [4] $end
$var wire 1 N" data_out [3] $end
$var wire 1 O" data_out [2] $end
$var wire 1 P" data_out [1] $end
$var wire 1 Q" data_out [0] $end
$var wire 1 w" hit $end
$var wire 1 t" dirty $end
$var wire 1 y" valid $end
$var wire 1 &# err $end
$var wire 1 N$ ram0_id [4] $end
$var wire 1 O$ ram0_id [3] $end
$var wire 1 P$ ram0_id [2] $end
$var wire 1 Q$ ram0_id [1] $end
$var wire 1 R$ ram0_id [0] $end
$var wire 1 S$ ram1_id [4] $end
$var wire 1 T$ ram1_id [3] $end
$var wire 1 U$ ram1_id [2] $end
$var wire 1 V$ ram1_id [1] $end
$var wire 1 W$ ram1_id [0] $end
$var wire 1 X$ ram2_id [4] $end
$var wire 1 Y$ ram2_id [3] $end
$var wire 1 Z$ ram2_id [2] $end
$var wire 1 [$ ram2_id [1] $end
$var wire 1 \$ ram2_id [0] $end
$var wire 1 ]$ ram3_id [4] $end
$var wire 1 ^$ ram3_id [3] $end
$var wire 1 _$ ram3_id [2] $end
$var wire 1 `$ ram3_id [1] $end
$var wire 1 a$ ram3_id [0] $end
$var wire 1 b$ ram4_id [4] $end
$var wire 1 c$ ram4_id [3] $end
$var wire 1 d$ ram4_id [2] $end
$var wire 1 e$ ram4_id [1] $end
$var wire 1 f$ ram4_id [0] $end
$var wire 1 g$ ram5_id [4] $end
$var wire 1 h$ ram5_id [3] $end
$var wire 1 i$ ram5_id [2] $end
$var wire 1 j$ ram5_id [1] $end
$var wire 1 k$ ram5_id [0] $end
$var wire 1 l$ w0 [15] $end
$var wire 1 m$ w0 [14] $end
$var wire 1 n$ w0 [13] $end
$var wire 1 o$ w0 [12] $end
$var wire 1 p$ w0 [11] $end
$var wire 1 q$ w0 [10] $end
$var wire 1 r$ w0 [9] $end
$var wire 1 s$ w0 [8] $end
$var wire 1 t$ w0 [7] $end
$var wire 1 u$ w0 [6] $end
$var wire 1 v$ w0 [5] $end
$var wire 1 w$ w0 [4] $end
$var wire 1 x$ w0 [3] $end
$var wire 1 y$ w0 [2] $end
$var wire 1 z$ w0 [1] $end
$var wire 1 {$ w0 [0] $end
$var wire 1 |$ w1 [15] $end
$var wire 1 }$ w1 [14] $end
$var wire 1 ~$ w1 [13] $end
$var wire 1 !% w1 [12] $end
$var wire 1 "% w1 [11] $end
$var wire 1 #% w1 [10] $end
$var wire 1 $% w1 [9] $end
$var wire 1 %% w1 [8] $end
$var wire 1 &% w1 [7] $end
$var wire 1 '% w1 [6] $end
$var wire 1 (% w1 [5] $end
$var wire 1 )% w1 [4] $end
$var wire 1 *% w1 [3] $end
$var wire 1 +% w1 [2] $end
$var wire 1 ,% w1 [1] $end
$var wire 1 -% w1 [0] $end
$var wire 1 .% w2 [15] $end
$var wire 1 /% w2 [14] $end
$var wire 1 0% w2 [13] $end
$var wire 1 1% w2 [12] $end
$var wire 1 2% w2 [11] $end
$var wire 1 3% w2 [10] $end
$var wire 1 4% w2 [9] $end
$var wire 1 5% w2 [8] $end
$var wire 1 6% w2 [7] $end
$var wire 1 7% w2 [6] $end
$var wire 1 8% w2 [5] $end
$var wire 1 9% w2 [4] $end
$var wire 1 :% w2 [3] $end
$var wire 1 ;% w2 [2] $end
$var wire 1 <% w2 [1] $end
$var wire 1 =% w2 [0] $end
$var wire 1 >% w3 [15] $end
$var wire 1 ?% w3 [14] $end
$var wire 1 @% w3 [13] $end
$var wire 1 A% w3 [12] $end
$var wire 1 B% w3 [11] $end
$var wire 1 C% w3 [10] $end
$var wire 1 D% w3 [9] $end
$var wire 1 E% w3 [8] $end
$var wire 1 F% w3 [7] $end
$var wire 1 G% w3 [6] $end
$var wire 1 H% w3 [5] $end
$var wire 1 I% w3 [4] $end
$var wire 1 J% w3 [3] $end
$var wire 1 K% w3 [2] $end
$var wire 1 L% w3 [1] $end
$var wire 1 M% w3 [0] $end
$var wire 1 N% go $end
$var wire 1 O% match $end
$var wire 1 P% wr_word0 $end
$var wire 1 Q% wr_word1 $end
$var wire 1 R% wr_word2 $end
$var wire 1 S% wr_word3 $end
$var wire 1 T% wr_dirty $end
$var wire 1 U% wr_tag $end
$var wire 1 V% wr_valid $end
$var wire 1 W% dirty_in $end
$var wire 1 X% dirtybit $end
$var wire 1 Y% validbit $end
$scope module mem_w0 $end
$var parameter 32 Z% Size $end
$var wire 1 l$ data_out [15] $end
$var wire 1 m$ data_out [14] $end
$var wire 1 n$ data_out [13] $end
$var wire 1 o$ data_out [12] $end
$var wire 1 p$ data_out [11] $end
$var wire 1 q$ data_out [10] $end
$var wire 1 r$ data_out [9] $end
$var wire 1 s$ data_out [8] $end
$var wire 1 t$ data_out [7] $end
$var wire 1 u$ data_out [6] $end
$var wire 1 v$ data_out [5] $end
$var wire 1 w$ data_out [4] $end
$var wire 1 x$ data_out [3] $end
$var wire 1 y$ data_out [2] $end
$var wire 1 z$ data_out [1] $end
$var wire 1 {$ data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 P% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 N$ file_id [4] $end
$var wire 1 O$ file_id [3] $end
$var wire 1 P$ file_id [2] $end
$var wire 1 Q$ file_id [1] $end
$var wire 1 R$ file_id [0] $end
$var integer 32 [% mcd $end
$var integer 32 \% i $end
$upscope $end
$scope module mem_w1 $end
$var parameter 32 ]% Size $end
$var wire 1 |$ data_out [15] $end
$var wire 1 }$ data_out [14] $end
$var wire 1 ~$ data_out [13] $end
$var wire 1 !% data_out [12] $end
$var wire 1 "% data_out [11] $end
$var wire 1 #% data_out [10] $end
$var wire 1 $% data_out [9] $end
$var wire 1 %% data_out [8] $end
$var wire 1 &% data_out [7] $end
$var wire 1 '% data_out [6] $end
$var wire 1 (% data_out [5] $end
$var wire 1 )% data_out [4] $end
$var wire 1 *% data_out [3] $end
$var wire 1 +% data_out [2] $end
$var wire 1 ,% data_out [1] $end
$var wire 1 -% data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 Q% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 S$ file_id [4] $end
$var wire 1 T$ file_id [3] $end
$var wire 1 U$ file_id [2] $end
$var wire 1 V$ file_id [1] $end
$var wire 1 W$ file_id [0] $end
$var integer 32 ^% mcd $end
$var integer 32 _% i $end
$upscope $end
$scope module mem_w2 $end
$var parameter 32 `% Size $end
$var wire 1 .% data_out [15] $end
$var wire 1 /% data_out [14] $end
$var wire 1 0% data_out [13] $end
$var wire 1 1% data_out [12] $end
$var wire 1 2% data_out [11] $end
$var wire 1 3% data_out [10] $end
$var wire 1 4% data_out [9] $end
$var wire 1 5% data_out [8] $end
$var wire 1 6% data_out [7] $end
$var wire 1 7% data_out [6] $end
$var wire 1 8% data_out [5] $end
$var wire 1 9% data_out [4] $end
$var wire 1 :% data_out [3] $end
$var wire 1 ;% data_out [2] $end
$var wire 1 <% data_out [1] $end
$var wire 1 =% data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 R% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 X$ file_id [4] $end
$var wire 1 Y$ file_id [3] $end
$var wire 1 Z$ file_id [2] $end
$var wire 1 [$ file_id [1] $end
$var wire 1 \$ file_id [0] $end
$var integer 32 a% mcd $end
$var integer 32 b% i $end
$upscope $end
$scope module mem_w3 $end
$var parameter 32 c% Size $end
$var wire 1 >% data_out [15] $end
$var wire 1 ?% data_out [14] $end
$var wire 1 @% data_out [13] $end
$var wire 1 A% data_out [12] $end
$var wire 1 B% data_out [11] $end
$var wire 1 C% data_out [10] $end
$var wire 1 D% data_out [9] $end
$var wire 1 E% data_out [8] $end
$var wire 1 F% data_out [7] $end
$var wire 1 G% data_out [6] $end
$var wire 1 H% data_out [5] $end
$var wire 1 I% data_out [4] $end
$var wire 1 J% data_out [3] $end
$var wire 1 K% data_out [2] $end
$var wire 1 L% data_out [1] $end
$var wire 1 M% data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 7! data_in [15] $end
$var wire 1 8! data_in [14] $end
$var wire 1 9! data_in [13] $end
$var wire 1 :! data_in [12] $end
$var wire 1 ;! data_in [11] $end
$var wire 1 <! data_in [10] $end
$var wire 1 =! data_in [9] $end
$var wire 1 >! data_in [8] $end
$var wire 1 ?! data_in [7] $end
$var wire 1 @! data_in [6] $end
$var wire 1 A! data_in [5] $end
$var wire 1 B! data_in [4] $end
$var wire 1 C! data_in [3] $end
$var wire 1 D! data_in [2] $end
$var wire 1 E! data_in [1] $end
$var wire 1 F! data_in [0] $end
$var wire 1 S% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ]$ file_id [4] $end
$var wire 1 ^$ file_id [3] $end
$var wire 1 _$ file_id [2] $end
$var wire 1 `$ file_id [1] $end
$var wire 1 a$ file_id [0] $end
$var integer 32 d% mcd $end
$var integer 32 e% i $end
$upscope $end
$scope module mem_tg $end
$var parameter 32 f% Size $end
$var wire 1 g" data_out [4] $end
$var wire 1 h" data_out [3] $end
$var wire 1 i" data_out [2] $end
$var wire 1 j" data_out [1] $end
$var wire 1 k" data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 '! data_in [4] $end
$var wire 1 (! data_in [3] $end
$var wire 1 )! data_in [2] $end
$var wire 1 *! data_in [1] $end
$var wire 1 +! data_in [0] $end
$var wire 1 U% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 b$ file_id [4] $end
$var wire 1 c$ file_id [3] $end
$var wire 1 d$ file_id [2] $end
$var wire 1 e$ file_id [1] $end
$var wire 1 f$ file_id [0] $end
$var integer 32 g% mcd $end
$var integer 32 h% i $end
$upscope $end
$scope module mem_dr $end
$var parameter 32 i% Size $end
$var wire 1 X% data_out [0] $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 W% data_in [0] $end
$var wire 1 T% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 g$ file_id [4] $end
$var wire 1 h$ file_id [3] $end
$var wire 1 i$ file_id [2] $end
$var wire 1 j$ file_id [1] $end
$var wire 1 k$ file_id [0] $end
$var integer 32 j% mcd $end
$var integer 32 k% i $end
$upscope $end
$scope module mem_vl $end
$var wire 1 Y% data_out $end
$var wire 1 ,! addr [7] $end
$var wire 1 -! addr [6] $end
$var wire 1 .! addr [5] $end
$var wire 1 /! addr [4] $end
$var wire 1 0! addr [3] $end
$var wire 1 1! addr [2] $end
$var wire 1 2! addr [1] $end
$var wire 1 3! addr [0] $end
$var wire 1 M$ data_in $end
$var wire 1 V% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 N$ file_id [4] $end
$var wire 1 O$ file_id [3] $end
$var wire 1 P$ file_id [2] $end
$var wire 1 Q$ file_id [1] $end
$var wire 1 R$ file_id [0] $end
$var integer 32 l% mcd $end
$var integer 32 m% i $end
$upscope $end
$upscope $end
$scope module mem $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 P! addr [15] $end
$var wire 1 Q! addr [14] $end
$var wire 1 R! addr [13] $end
$var wire 1 S! addr [12] $end
$var wire 1 T! addr [11] $end
$var wire 1 U! addr [10] $end
$var wire 1 V! addr [9] $end
$var wire 1 W! addr [8] $end
$var wire 1 X! addr [7] $end
$var wire 1 Y! addr [6] $end
$var wire 1 Z! addr [5] $end
$var wire 1 [! addr [4] $end
$var wire 1 \! addr [3] $end
$var wire 1 ]! addr [2] $end
$var wire 1 ^! addr [1] $end
$var wire 1 _! addr [0] $end
$var wire 1 2" data_in [15] $end
$var wire 1 3" data_in [14] $end
$var wire 1 4" data_in [13] $end
$var wire 1 5" data_in [12] $end
$var wire 1 6" data_in [11] $end
$var wire 1 7" data_in [10] $end
$var wire 1 8" data_in [9] $end
$var wire 1 9" data_in [8] $end
$var wire 1 :" data_in [7] $end
$var wire 1 ;" data_in [6] $end
$var wire 1 <" data_in [5] $end
$var wire 1 =" data_in [4] $end
$var wire 1 >" data_in [3] $end
$var wire 1 ?" data_in [2] $end
$var wire 1 @" data_in [1] $end
$var wire 1 A" data_in [0] $end
$var wire 1 ." wr $end
$var wire 1 /" rd $end
$var wire 1 `! data_out [15] $end
$var wire 1 a! data_out [14] $end
$var wire 1 b! data_out [13] $end
$var wire 1 c! data_out [12] $end
$var wire 1 d! data_out [11] $end
$var wire 1 e! data_out [10] $end
$var wire 1 f! data_out [9] $end
$var wire 1 g! data_out [8] $end
$var wire 1 h! data_out [7] $end
$var wire 1 i! data_out [6] $end
$var wire 1 j! data_out [5] $end
$var wire 1 k! data_out [4] $end
$var wire 1 l! data_out [3] $end
$var wire 1 m! data_out [2] $end
$var wire 1 n! data_out [1] $end
$var wire 1 o! data_out [0] $end
$var wire 1 O! stall $end
$var wire 1 p! busy [3] $end
$var wire 1 q! busy [2] $end
$var wire 1 r! busy [1] $end
$var wire 1 s! busy [0] $end
$var wire 1 &! err $end
$var wire 1 n% data0_out [15] $end
$var wire 1 o% data0_out [14] $end
$var wire 1 p% data0_out [13] $end
$var wire 1 q% data0_out [12] $end
$var wire 1 r% data0_out [11] $end
$var wire 1 s% data0_out [10] $end
$var wire 1 t% data0_out [9] $end
$var wire 1 u% data0_out [8] $end
$var wire 1 v% data0_out [7] $end
$var wire 1 w% data0_out [6] $end
$var wire 1 x% data0_out [5] $end
$var wire 1 y% data0_out [4] $end
$var wire 1 z% data0_out [3] $end
$var wire 1 {% data0_out [2] $end
$var wire 1 |% data0_out [1] $end
$var wire 1 }% data0_out [0] $end
$var wire 1 ~% data1_out [15] $end
$var wire 1 !& data1_out [14] $end
$var wire 1 "& data1_out [13] $end
$var wire 1 #& data1_out [12] $end
$var wire 1 $& data1_out [11] $end
$var wire 1 %& data1_out [10] $end
$var wire 1 && data1_out [9] $end
$var wire 1 '& data1_out [8] $end
$var wire 1 (& data1_out [7] $end
$var wire 1 )& data1_out [6] $end
$var wire 1 *& data1_out [5] $end
$var wire 1 +& data1_out [4] $end
$var wire 1 ,& data1_out [3] $end
$var wire 1 -& data1_out [2] $end
$var wire 1 .& data1_out [1] $end
$var wire 1 /& data1_out [0] $end
$var wire 1 0& data2_out [15] $end
$var wire 1 1& data2_out [14] $end
$var wire 1 2& data2_out [13] $end
$var wire 1 3& data2_out [12] $end
$var wire 1 4& data2_out [11] $end
$var wire 1 5& data2_out [10] $end
$var wire 1 6& data2_out [9] $end
$var wire 1 7& data2_out [8] $end
$var wire 1 8& data2_out [7] $end
$var wire 1 9& data2_out [6] $end
$var wire 1 :& data2_out [5] $end
$var wire 1 ;& data2_out [4] $end
$var wire 1 <& data2_out [3] $end
$var wire 1 =& data2_out [2] $end
$var wire 1 >& data2_out [1] $end
$var wire 1 ?& data2_out [0] $end
$var wire 1 @& data3_out [15] $end
$var wire 1 A& data3_out [14] $end
$var wire 1 B& data3_out [13] $end
$var wire 1 C& data3_out [12] $end
$var wire 1 D& data3_out [11] $end
$var wire 1 E& data3_out [10] $end
$var wire 1 F& data3_out [9] $end
$var wire 1 G& data3_out [8] $end
$var wire 1 H& data3_out [7] $end
$var wire 1 I& data3_out [6] $end
$var wire 1 J& data3_out [5] $end
$var wire 1 K& data3_out [4] $end
$var wire 1 L& data3_out [3] $end
$var wire 1 M& data3_out [2] $end
$var wire 1 N& data3_out [1] $end
$var wire 1 O& data3_out [0] $end
$var wire 1 P& sel0 $end
$var wire 1 Q& sel1 $end
$var wire 1 R& sel2 $end
$var wire 1 S& sel3 $end
$var wire 1 T& en [3] $end
$var wire 1 U& en [2] $end
$var wire 1 V& en [1] $end
$var wire 1 W& en [0] $end
$var wire 1 X& err0 $end
$var wire 1 Y& err1 $end
$var wire 1 Z& err2 $end
$var wire 1 [& err3 $end
$var wire 1 \& bsy0 [3] $end
$var wire 1 ]& bsy0 [2] $end
$var wire 1 ^& bsy0 [1] $end
$var wire 1 _& bsy0 [0] $end
$var wire 1 `& bsy1 [3] $end
$var wire 1 a& bsy1 [2] $end
$var wire 1 b& bsy1 [1] $end
$var wire 1 c& bsy1 [0] $end
$var wire 1 d& bsy2 [3] $end
$var wire 1 e& bsy2 [2] $end
$var wire 1 f& bsy2 [1] $end
$var wire 1 g& bsy2 [0] $end
$scope module m0 $end
$var wire 1 n% data_out [15] $end
$var wire 1 o% data_out [14] $end
$var wire 1 p% data_out [13] $end
$var wire 1 q% data_out [12] $end
$var wire 1 r% data_out [11] $end
$var wire 1 s% data_out [10] $end
$var wire 1 t% data_out [9] $end
$var wire 1 u% data_out [8] $end
$var wire 1 v% data_out [7] $end
$var wire 1 w% data_out [6] $end
$var wire 1 x% data_out [5] $end
$var wire 1 y% data_out [4] $end
$var wire 1 z% data_out [3] $end
$var wire 1 {% data_out [2] $end
$var wire 1 |% data_out [1] $end
$var wire 1 }% data_out [0] $end
$var wire 1 X& err $end
$var wire 1 2" data_in [15] $end
$var wire 1 3" data_in [14] $end
$var wire 1 4" data_in [13] $end
$var wire 1 5" data_in [12] $end
$var wire 1 6" data_in [11] $end
$var wire 1 7" data_in [10] $end
$var wire 1 8" data_in [9] $end
$var wire 1 9" data_in [8] $end
$var wire 1 :" data_in [7] $end
$var wire 1 ;" data_in [6] $end
$var wire 1 <" data_in [5] $end
$var wire 1 =" data_in [4] $end
$var wire 1 >" data_in [3] $end
$var wire 1 ?" data_in [2] $end
$var wire 1 @" data_in [1] $end
$var wire 1 A" data_in [0] $end
$var wire 1 P! addr [12] $end
$var wire 1 Q! addr [11] $end
$var wire 1 R! addr [10] $end
$var wire 1 S! addr [9] $end
$var wire 1 T! addr [8] $end
$var wire 1 U! addr [7] $end
$var wire 1 V! addr [6] $end
$var wire 1 W! addr [5] $end
$var wire 1 X! addr [4] $end
$var wire 1 Y! addr [3] $end
$var wire 1 Z! addr [2] $end
$var wire 1 [! addr [1] $end
$var wire 1 \! addr [0] $end
$var wire 1 ." wr $end
$var wire 1 /" rd $end
$var wire 1 W& enable $end
$var wire 1 { create_dump $end
$var wire 1 h& bank_id [1] $end
$var wire 1 i& bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j& loaded $end
$var reg 16 k& largest [15:0] $end
$var wire 1 l& addr_1c [13] $end
$var wire 1 m& addr_1c [12] $end
$var wire 1 n& addr_1c [11] $end
$var wire 1 o& addr_1c [10] $end
$var wire 1 p& addr_1c [9] $end
$var wire 1 q& addr_1c [8] $end
$var wire 1 r& addr_1c [7] $end
$var wire 1 s& addr_1c [6] $end
$var wire 1 t& addr_1c [5] $end
$var wire 1 u& addr_1c [4] $end
$var wire 1 v& addr_1c [3] $end
$var wire 1 w& addr_1c [2] $end
$var wire 1 x& addr_1c [1] $end
$var wire 1 y& addr_1c [0] $end
$var wire 1 z& data_in_1c [15] $end
$var wire 1 {& data_in_1c [14] $end
$var wire 1 |& data_in_1c [13] $end
$var wire 1 }& data_in_1c [12] $end
$var wire 1 ~& data_in_1c [11] $end
$var wire 1 !' data_in_1c [10] $end
$var wire 1 "' data_in_1c [9] $end
$var wire 1 #' data_in_1c [8] $end
$var wire 1 $' data_in_1c [7] $end
$var wire 1 %' data_in_1c [6] $end
$var wire 1 &' data_in_1c [5] $end
$var wire 1 '' data_in_1c [4] $end
$var wire 1 (' data_in_1c [3] $end
$var wire 1 )' data_in_1c [2] $end
$var wire 1 *' data_in_1c [1] $end
$var wire 1 +' data_in_1c [0] $end
$var integer 32 ,' mcd $end
$var integer 32 -' largeout $end
$var integer 32 .' i $end
$var wire 1 /' rd0 $end
$var wire 1 0' wr0 $end
$var wire 1 1' rd1 $end
$var wire 1 2' wr1 $end
$var wire 1 3' data_out_1c [15] $end
$var wire 1 4' data_out_1c [14] $end
$var wire 1 5' data_out_1c [13] $end
$var wire 1 6' data_out_1c [12] $end
$var wire 1 7' data_out_1c [11] $end
$var wire 1 8' data_out_1c [10] $end
$var wire 1 9' data_out_1c [9] $end
$var wire 1 :' data_out_1c [8] $end
$var wire 1 ;' data_out_1c [7] $end
$var wire 1 <' data_out_1c [6] $end
$var wire 1 =' data_out_1c [5] $end
$var wire 1 >' data_out_1c [4] $end
$var wire 1 ?' data_out_1c [3] $end
$var wire 1 @' data_out_1c [2] $end
$var wire 1 A' data_out_1c [1] $end
$var wire 1 B' data_out_1c [0] $end
$var wire 1 C' rd2 $end
$var wire 1 D' wr2 $end
$var wire 1 E' rd3 $end
$var wire 1 F' wr3 $end
$var wire 1 G' busy $end
$scope module ff0 $end
$var wire 1 1' q $end
$var wire 1 /' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H' state $end
$upscope $end
$scope module ff1 $end
$var wire 1 2' q $end
$var wire 1 0' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I' state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 m& q $end
$var wire 1 P! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J' state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 n& q $end
$var wire 1 Q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K' state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 o& q $end
$var wire 1 R! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L' state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 p& q $end
$var wire 1 S! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M' state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 q& q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N' state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 r& q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O' state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 s& q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P' state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 t& q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q' state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 u& q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R' state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 v& q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S' state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 w& q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T' state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 x& q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U' state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 y& q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V' state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 z& q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W' state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 {& q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X' state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 |& q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y' state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 }& q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z' state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 ~& q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [' state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 !' q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \' state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 "' q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]' state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 #' q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^' state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 $' q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _' state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 %' q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `' state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 &' q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a' state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 '' q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b' state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 (' q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c' state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 )' q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d' state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 *' q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e' state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 +' q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f' state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 n% q $end
$var wire 1 3' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g' state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 o% q $end
$var wire 1 4' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h' state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 p% q $end
$var wire 1 5' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i' state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 q% q $end
$var wire 1 6' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j' state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 r% q $end
$var wire 1 7' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k' state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 s% q $end
$var wire 1 8' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l' state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 t% q $end
$var wire 1 9' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m' state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 u% q $end
$var wire 1 :' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n' state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 v% q $end
$var wire 1 ;' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o' state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 w% q $end
$var wire 1 <' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p' state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 x% q $end
$var wire 1 =' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q' state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 y% q $end
$var wire 1 >' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r' state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 z% q $end
$var wire 1 ?' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s' state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 {% q $end
$var wire 1 @' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t' state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 |% q $end
$var wire 1 A' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u' state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 }% q $end
$var wire 1 B' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v' state $end
$upscope $end
$scope module ff2 $end
$var wire 1 C' q $end
$var wire 1 1' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w' state $end
$upscope $end
$scope module ff3 $end
$var wire 1 D' q $end
$var wire 1 2' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x' state $end
$upscope $end
$scope module ff4 $end
$var wire 1 E' q $end
$var wire 1 C' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y' state $end
$upscope $end
$scope module ff5 $end
$var wire 1 F' q $end
$var wire 1 D' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z' state $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 ~% data_out [15] $end
$var wire 1 !& data_out [14] $end
$var wire 1 "& data_out [13] $end
$var wire 1 #& data_out [12] $end
$var wire 1 $& data_out [11] $end
$var wire 1 %& data_out [10] $end
$var wire 1 && data_out [9] $end
$var wire 1 '& data_out [8] $end
$var wire 1 (& data_out [7] $end
$var wire 1 )& data_out [6] $end
$var wire 1 *& data_out [5] $end
$var wire 1 +& data_out [4] $end
$var wire 1 ,& data_out [3] $end
$var wire 1 -& data_out [2] $end
$var wire 1 .& data_out [1] $end
$var wire 1 /& data_out [0] $end
$var wire 1 Y& err $end
$var wire 1 2" data_in [15] $end
$var wire 1 3" data_in [14] $end
$var wire 1 4" data_in [13] $end
$var wire 1 5" data_in [12] $end
$var wire 1 6" data_in [11] $end
$var wire 1 7" data_in [10] $end
$var wire 1 8" data_in [9] $end
$var wire 1 9" data_in [8] $end
$var wire 1 :" data_in [7] $end
$var wire 1 ;" data_in [6] $end
$var wire 1 <" data_in [5] $end
$var wire 1 =" data_in [4] $end
$var wire 1 >" data_in [3] $end
$var wire 1 ?" data_in [2] $end
$var wire 1 @" data_in [1] $end
$var wire 1 A" data_in [0] $end
$var wire 1 P! addr [12] $end
$var wire 1 Q! addr [11] $end
$var wire 1 R! addr [10] $end
$var wire 1 S! addr [9] $end
$var wire 1 T! addr [8] $end
$var wire 1 U! addr [7] $end
$var wire 1 V! addr [6] $end
$var wire 1 W! addr [5] $end
$var wire 1 X! addr [4] $end
$var wire 1 Y! addr [3] $end
$var wire 1 Z! addr [2] $end
$var wire 1 [! addr [1] $end
$var wire 1 \! addr [0] $end
$var wire 1 ." wr $end
$var wire 1 /" rd $end
$var wire 1 V& enable $end
$var wire 1 { create_dump $end
$var wire 1 {' bank_id [1] $end
$var wire 1 |' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }' loaded $end
$var reg 16 ~' largest [15:0] $end
$var wire 1 !( addr_1c [13] $end
$var wire 1 "( addr_1c [12] $end
$var wire 1 #( addr_1c [11] $end
$var wire 1 $( addr_1c [10] $end
$var wire 1 %( addr_1c [9] $end
$var wire 1 &( addr_1c [8] $end
$var wire 1 '( addr_1c [7] $end
$var wire 1 (( addr_1c [6] $end
$var wire 1 )( addr_1c [5] $end
$var wire 1 *( addr_1c [4] $end
$var wire 1 +( addr_1c [3] $end
$var wire 1 ,( addr_1c [2] $end
$var wire 1 -( addr_1c [1] $end
$var wire 1 .( addr_1c [0] $end
$var wire 1 /( data_in_1c [15] $end
$var wire 1 0( data_in_1c [14] $end
$var wire 1 1( data_in_1c [13] $end
$var wire 1 2( data_in_1c [12] $end
$var wire 1 3( data_in_1c [11] $end
$var wire 1 4( data_in_1c [10] $end
$var wire 1 5( data_in_1c [9] $end
$var wire 1 6( data_in_1c [8] $end
$var wire 1 7( data_in_1c [7] $end
$var wire 1 8( data_in_1c [6] $end
$var wire 1 9( data_in_1c [5] $end
$var wire 1 :( data_in_1c [4] $end
$var wire 1 ;( data_in_1c [3] $end
$var wire 1 <( data_in_1c [2] $end
$var wire 1 =( data_in_1c [1] $end
$var wire 1 >( data_in_1c [0] $end
$var integer 32 ?( mcd $end
$var integer 32 @( largeout $end
$var integer 32 A( i $end
$var wire 1 B( rd0 $end
$var wire 1 C( wr0 $end
$var wire 1 D( rd1 $end
$var wire 1 E( wr1 $end
$var wire 1 F( data_out_1c [15] $end
$var wire 1 G( data_out_1c [14] $end
$var wire 1 H( data_out_1c [13] $end
$var wire 1 I( data_out_1c [12] $end
$var wire 1 J( data_out_1c [11] $end
$var wire 1 K( data_out_1c [10] $end
$var wire 1 L( data_out_1c [9] $end
$var wire 1 M( data_out_1c [8] $end
$var wire 1 N( data_out_1c [7] $end
$var wire 1 O( data_out_1c [6] $end
$var wire 1 P( data_out_1c [5] $end
$var wire 1 Q( data_out_1c [4] $end
$var wire 1 R( data_out_1c [3] $end
$var wire 1 S( data_out_1c [2] $end
$var wire 1 T( data_out_1c [1] $end
$var wire 1 U( data_out_1c [0] $end
$var wire 1 V( rd2 $end
$var wire 1 W( wr2 $end
$var wire 1 X( rd3 $end
$var wire 1 Y( wr3 $end
$var wire 1 Z( busy $end
$scope module ff0 $end
$var wire 1 D( q $end
$var wire 1 B( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [( state $end
$upscope $end
$scope module ff1 $end
$var wire 1 E( q $end
$var wire 1 C( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \( state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 "( q $end
$var wire 1 P! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]( state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 #( q $end
$var wire 1 Q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^( state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 $( q $end
$var wire 1 R! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _( state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 %( q $end
$var wire 1 S! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `( state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 &( q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a( state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 '( q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b( state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 (( q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c( state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 )( q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d( state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 *( q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e( state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 +( q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f( state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 ,( q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g( state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 -( q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h( state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 .( q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i( state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 /( q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j( state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 0( q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k( state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 1( q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l( state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 2( q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m( state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 3( q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n( state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 4( q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o( state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 5( q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p( state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 6( q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q( state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 7( q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r( state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 8( q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s( state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 9( q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t( state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 :( q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u( state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 ;( q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v( state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 <( q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w( state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 =( q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x( state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 >( q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y( state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 ~% q $end
$var wire 1 F( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z( state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 !& q $end
$var wire 1 G( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {( state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 "& q $end
$var wire 1 H( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |( state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 #& q $end
$var wire 1 I( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }( state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 $& q $end
$var wire 1 J( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~( state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 %& q $end
$var wire 1 K( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !) state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 && q $end
$var wire 1 L( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ") state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 '& q $end
$var wire 1 M( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #) state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 (& q $end
$var wire 1 N( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $) state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 )& q $end
$var wire 1 O( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %) state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 *& q $end
$var wire 1 P( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &) state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 +& q $end
$var wire 1 Q( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ') state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 ,& q $end
$var wire 1 R( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 () state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 -& q $end
$var wire 1 S( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )) state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 .& q $end
$var wire 1 T( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *) state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 /& q $end
$var wire 1 U( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +) state $end
$upscope $end
$scope module ff2 $end
$var wire 1 V( q $end
$var wire 1 D( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,) state $end
$upscope $end
$scope module ff3 $end
$var wire 1 W( q $end
$var wire 1 E( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -) state $end
$upscope $end
$scope module ff4 $end
$var wire 1 X( q $end
$var wire 1 V( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .) state $end
$upscope $end
$scope module ff5 $end
$var wire 1 Y( q $end
$var wire 1 W( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /) state $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 1 0& data_out [15] $end
$var wire 1 1& data_out [14] $end
$var wire 1 2& data_out [13] $end
$var wire 1 3& data_out [12] $end
$var wire 1 4& data_out [11] $end
$var wire 1 5& data_out [10] $end
$var wire 1 6& data_out [9] $end
$var wire 1 7& data_out [8] $end
$var wire 1 8& data_out [7] $end
$var wire 1 9& data_out [6] $end
$var wire 1 :& data_out [5] $end
$var wire 1 ;& data_out [4] $end
$var wire 1 <& data_out [3] $end
$var wire 1 =& data_out [2] $end
$var wire 1 >& data_out [1] $end
$var wire 1 ?& data_out [0] $end
$var wire 1 Z& err $end
$var wire 1 2" data_in [15] $end
$var wire 1 3" data_in [14] $end
$var wire 1 4" data_in [13] $end
$var wire 1 5" data_in [12] $end
$var wire 1 6" data_in [11] $end
$var wire 1 7" data_in [10] $end
$var wire 1 8" data_in [9] $end
$var wire 1 9" data_in [8] $end
$var wire 1 :" data_in [7] $end
$var wire 1 ;" data_in [6] $end
$var wire 1 <" data_in [5] $end
$var wire 1 =" data_in [4] $end
$var wire 1 >" data_in [3] $end
$var wire 1 ?" data_in [2] $end
$var wire 1 @" data_in [1] $end
$var wire 1 A" data_in [0] $end
$var wire 1 P! addr [12] $end
$var wire 1 Q! addr [11] $end
$var wire 1 R! addr [10] $end
$var wire 1 S! addr [9] $end
$var wire 1 T! addr [8] $end
$var wire 1 U! addr [7] $end
$var wire 1 V! addr [6] $end
$var wire 1 W! addr [5] $end
$var wire 1 X! addr [4] $end
$var wire 1 Y! addr [3] $end
$var wire 1 Z! addr [2] $end
$var wire 1 [! addr [1] $end
$var wire 1 \! addr [0] $end
$var wire 1 ." wr $end
$var wire 1 /" rd $end
$var wire 1 U& enable $end
$var wire 1 { create_dump $end
$var wire 1 0) bank_id [1] $end
$var wire 1 1) bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2) loaded $end
$var reg 16 3) largest [15:0] $end
$var wire 1 4) addr_1c [13] $end
$var wire 1 5) addr_1c [12] $end
$var wire 1 6) addr_1c [11] $end
$var wire 1 7) addr_1c [10] $end
$var wire 1 8) addr_1c [9] $end
$var wire 1 9) addr_1c [8] $end
$var wire 1 :) addr_1c [7] $end
$var wire 1 ;) addr_1c [6] $end
$var wire 1 <) addr_1c [5] $end
$var wire 1 =) addr_1c [4] $end
$var wire 1 >) addr_1c [3] $end
$var wire 1 ?) addr_1c [2] $end
$var wire 1 @) addr_1c [1] $end
$var wire 1 A) addr_1c [0] $end
$var wire 1 B) data_in_1c [15] $end
$var wire 1 C) data_in_1c [14] $end
$var wire 1 D) data_in_1c [13] $end
$var wire 1 E) data_in_1c [12] $end
$var wire 1 F) data_in_1c [11] $end
$var wire 1 G) data_in_1c [10] $end
$var wire 1 H) data_in_1c [9] $end
$var wire 1 I) data_in_1c [8] $end
$var wire 1 J) data_in_1c [7] $end
$var wire 1 K) data_in_1c [6] $end
$var wire 1 L) data_in_1c [5] $end
$var wire 1 M) data_in_1c [4] $end
$var wire 1 N) data_in_1c [3] $end
$var wire 1 O) data_in_1c [2] $end
$var wire 1 P) data_in_1c [1] $end
$var wire 1 Q) data_in_1c [0] $end
$var integer 32 R) mcd $end
$var integer 32 S) largeout $end
$var integer 32 T) i $end
$var wire 1 U) rd0 $end
$var wire 1 V) wr0 $end
$var wire 1 W) rd1 $end
$var wire 1 X) wr1 $end
$var wire 1 Y) data_out_1c [15] $end
$var wire 1 Z) data_out_1c [14] $end
$var wire 1 [) data_out_1c [13] $end
$var wire 1 \) data_out_1c [12] $end
$var wire 1 ]) data_out_1c [11] $end
$var wire 1 ^) data_out_1c [10] $end
$var wire 1 _) data_out_1c [9] $end
$var wire 1 `) data_out_1c [8] $end
$var wire 1 a) data_out_1c [7] $end
$var wire 1 b) data_out_1c [6] $end
$var wire 1 c) data_out_1c [5] $end
$var wire 1 d) data_out_1c [4] $end
$var wire 1 e) data_out_1c [3] $end
$var wire 1 f) data_out_1c [2] $end
$var wire 1 g) data_out_1c [1] $end
$var wire 1 h) data_out_1c [0] $end
$var wire 1 i) rd2 $end
$var wire 1 j) wr2 $end
$var wire 1 k) rd3 $end
$var wire 1 l) wr3 $end
$var wire 1 m) busy $end
$scope module ff0 $end
$var wire 1 W) q $end
$var wire 1 U) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n) state $end
$upscope $end
$scope module ff1 $end
$var wire 1 X) q $end
$var wire 1 V) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o) state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 5) q $end
$var wire 1 P! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p) state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 6) q $end
$var wire 1 Q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q) state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 7) q $end
$var wire 1 R! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r) state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 8) q $end
$var wire 1 S! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s) state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 9) q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t) state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 :) q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u) state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 ;) q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v) state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 <) q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w) state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 =) q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x) state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 >) q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y) state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 ?) q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z) state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 @) q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {) state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 A) q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |) state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 B) q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }) state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 C) q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~) state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 D) q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !* state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 E) q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "* state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 F) q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #* state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 G) q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $* state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 H) q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %* state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 I) q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &* state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 J) q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '* state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 K) q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (* state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 L) q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )* state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 M) q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ** state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 N) q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +* state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 O) q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,* state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 P) q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -* state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 Q) q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .* state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 0& q $end
$var wire 1 Y) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /* state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 1& q $end
$var wire 1 Z) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0* state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 2& q $end
$var wire 1 [) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1* state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 3& q $end
$var wire 1 \) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2* state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 4& q $end
$var wire 1 ]) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3* state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 5& q $end
$var wire 1 ^) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4* state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 6& q $end
$var wire 1 _) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5* state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 7& q $end
$var wire 1 `) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6* state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 8& q $end
$var wire 1 a) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7* state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 9& q $end
$var wire 1 b) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8* state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 :& q $end
$var wire 1 c) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9* state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 ;& q $end
$var wire 1 d) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :* state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 <& q $end
$var wire 1 e) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;* state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 =& q $end
$var wire 1 f) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <* state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 >& q $end
$var wire 1 g) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =* state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 ?& q $end
$var wire 1 h) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >* state $end
$upscope $end
$scope module ff2 $end
$var wire 1 i) q $end
$var wire 1 W) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?* state $end
$upscope $end
$scope module ff3 $end
$var wire 1 j) q $end
$var wire 1 X) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @* state $end
$upscope $end
$scope module ff4 $end
$var wire 1 k) q $end
$var wire 1 i) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A* state $end
$upscope $end
$scope module ff5 $end
$var wire 1 l) q $end
$var wire 1 j) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B* state $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 1 @& data_out [15] $end
$var wire 1 A& data_out [14] $end
$var wire 1 B& data_out [13] $end
$var wire 1 C& data_out [12] $end
$var wire 1 D& data_out [11] $end
$var wire 1 E& data_out [10] $end
$var wire 1 F& data_out [9] $end
$var wire 1 G& data_out [8] $end
$var wire 1 H& data_out [7] $end
$var wire 1 I& data_out [6] $end
$var wire 1 J& data_out [5] $end
$var wire 1 K& data_out [4] $end
$var wire 1 L& data_out [3] $end
$var wire 1 M& data_out [2] $end
$var wire 1 N& data_out [1] $end
$var wire 1 O& data_out [0] $end
$var wire 1 [& err $end
$var wire 1 2" data_in [15] $end
$var wire 1 3" data_in [14] $end
$var wire 1 4" data_in [13] $end
$var wire 1 5" data_in [12] $end
$var wire 1 6" data_in [11] $end
$var wire 1 7" data_in [10] $end
$var wire 1 8" data_in [9] $end
$var wire 1 9" data_in [8] $end
$var wire 1 :" data_in [7] $end
$var wire 1 ;" data_in [6] $end
$var wire 1 <" data_in [5] $end
$var wire 1 =" data_in [4] $end
$var wire 1 >" data_in [3] $end
$var wire 1 ?" data_in [2] $end
$var wire 1 @" data_in [1] $end
$var wire 1 A" data_in [0] $end
$var wire 1 P! addr [12] $end
$var wire 1 Q! addr [11] $end
$var wire 1 R! addr [10] $end
$var wire 1 S! addr [9] $end
$var wire 1 T! addr [8] $end
$var wire 1 U! addr [7] $end
$var wire 1 V! addr [6] $end
$var wire 1 W! addr [5] $end
$var wire 1 X! addr [4] $end
$var wire 1 Y! addr [3] $end
$var wire 1 Z! addr [2] $end
$var wire 1 [! addr [1] $end
$var wire 1 \! addr [0] $end
$var wire 1 ." wr $end
$var wire 1 /" rd $end
$var wire 1 T& enable $end
$var wire 1 { create_dump $end
$var wire 1 C* bank_id [1] $end
$var wire 1 D* bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E* loaded $end
$var reg 16 F* largest [15:0] $end
$var wire 1 G* addr_1c [13] $end
$var wire 1 H* addr_1c [12] $end
$var wire 1 I* addr_1c [11] $end
$var wire 1 J* addr_1c [10] $end
$var wire 1 K* addr_1c [9] $end
$var wire 1 L* addr_1c [8] $end
$var wire 1 M* addr_1c [7] $end
$var wire 1 N* addr_1c [6] $end
$var wire 1 O* addr_1c [5] $end
$var wire 1 P* addr_1c [4] $end
$var wire 1 Q* addr_1c [3] $end
$var wire 1 R* addr_1c [2] $end
$var wire 1 S* addr_1c [1] $end
$var wire 1 T* addr_1c [0] $end
$var wire 1 U* data_in_1c [15] $end
$var wire 1 V* data_in_1c [14] $end
$var wire 1 W* data_in_1c [13] $end
$var wire 1 X* data_in_1c [12] $end
$var wire 1 Y* data_in_1c [11] $end
$var wire 1 Z* data_in_1c [10] $end
$var wire 1 [* data_in_1c [9] $end
$var wire 1 \* data_in_1c [8] $end
$var wire 1 ]* data_in_1c [7] $end
$var wire 1 ^* data_in_1c [6] $end
$var wire 1 _* data_in_1c [5] $end
$var wire 1 `* data_in_1c [4] $end
$var wire 1 a* data_in_1c [3] $end
$var wire 1 b* data_in_1c [2] $end
$var wire 1 c* data_in_1c [1] $end
$var wire 1 d* data_in_1c [0] $end
$var integer 32 e* mcd $end
$var integer 32 f* largeout $end
$var integer 32 g* i $end
$var wire 1 h* rd0 $end
$var wire 1 i* wr0 $end
$var wire 1 j* rd1 $end
$var wire 1 k* wr1 $end
$var wire 1 l* data_out_1c [15] $end
$var wire 1 m* data_out_1c [14] $end
$var wire 1 n* data_out_1c [13] $end
$var wire 1 o* data_out_1c [12] $end
$var wire 1 p* data_out_1c [11] $end
$var wire 1 q* data_out_1c [10] $end
$var wire 1 r* data_out_1c [9] $end
$var wire 1 s* data_out_1c [8] $end
$var wire 1 t* data_out_1c [7] $end
$var wire 1 u* data_out_1c [6] $end
$var wire 1 v* data_out_1c [5] $end
$var wire 1 w* data_out_1c [4] $end
$var wire 1 x* data_out_1c [3] $end
$var wire 1 y* data_out_1c [2] $end
$var wire 1 z* data_out_1c [1] $end
$var wire 1 {* data_out_1c [0] $end
$var wire 1 |* rd2 $end
$var wire 1 }* wr2 $end
$var wire 1 ~* rd3 $end
$var wire 1 !+ wr3 $end
$var wire 1 "+ busy $end
$scope module ff0 $end
$var wire 1 j* q $end
$var wire 1 h* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end
$scope module ff1 $end
$var wire 1 k* q $end
$var wire 1 i* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 H* q $end
$var wire 1 P! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 I* q $end
$var wire 1 Q! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 J* q $end
$var wire 1 R! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 K* q $end
$var wire 1 S! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 L* q $end
$var wire 1 T! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 M* q $end
$var wire 1 U! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 N* q $end
$var wire 1 V! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 O* q $end
$var wire 1 W! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 P* q $end
$var wire 1 X! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 Q* q $end
$var wire 1 Y! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 R* q $end
$var wire 1 Z! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /+ state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 S* q $end
$var wire 1 [! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0+ state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 T* q $end
$var wire 1 \! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1+ state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 U* q $end
$var wire 1 2" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2+ state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 V* q $end
$var wire 1 3" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3+ state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 W* q $end
$var wire 1 4" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4+ state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 X* q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5+ state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 Y* q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6+ state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 Z* q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7+ state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 [* q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8+ state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 \* q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9+ state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 ]* q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :+ state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 ^* q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;+ state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 _* q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <+ state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 `* q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =+ state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 a* q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >+ state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 b* q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?+ state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 c* q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @+ state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 d* q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A+ state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 @& q $end
$var wire 1 l* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B+ state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 A& q $end
$var wire 1 m* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C+ state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 B& q $end
$var wire 1 n* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D+ state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 C& q $end
$var wire 1 o* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E+ state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 D& q $end
$var wire 1 p* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F+ state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 E& q $end
$var wire 1 q* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G+ state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 F& q $end
$var wire 1 r* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H+ state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 G& q $end
$var wire 1 s* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I+ state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 H& q $end
$var wire 1 t* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J+ state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 I& q $end
$var wire 1 u* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K+ state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 J& q $end
$var wire 1 v* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L+ state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 K& q $end
$var wire 1 w* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M+ state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 L& q $end
$var wire 1 x* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N+ state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 M& q $end
$var wire 1 y* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O+ state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 N& q $end
$var wire 1 z* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P+ state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 O& q $end
$var wire 1 {* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q+ state $end
$upscope $end
$scope module ff2 $end
$var wire 1 |* q $end
$var wire 1 j* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R+ state $end
$upscope $end
$scope module ff3 $end
$var wire 1 }* q $end
$var wire 1 k* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S+ state $end
$upscope $end
$scope module ff4 $end
$var wire 1 ~* q $end
$var wire 1 |* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T+ state $end
$upscope $end
$scope module ff5 $end
$var wire 1 !+ q $end
$var wire 1 }* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U+ state $end
$upscope $end
$upscope $end
$scope module b0[3] $end
$var wire 1 \& q $end
$var wire 1 T& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V+ state $end
$upscope $end
$scope module b0[2] $end
$var wire 1 ]& q $end
$var wire 1 U& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W+ state $end
$upscope $end
$scope module b0[1] $end
$var wire 1 ^& q $end
$var wire 1 V& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X+ state $end
$upscope $end
$scope module b0[0] $end
$var wire 1 _& q $end
$var wire 1 W& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y+ state $end
$upscope $end
$scope module b1[3] $end
$var wire 1 `& q $end
$var wire 1 \& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z+ state $end
$upscope $end
$scope module b1[2] $end
$var wire 1 a& q $end
$var wire 1 ]& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [+ state $end
$upscope $end
$scope module b1[1] $end
$var wire 1 b& q $end
$var wire 1 ^& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \+ state $end
$upscope $end
$scope module b1[0] $end
$var wire 1 c& q $end
$var wire 1 _& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]+ state $end
$upscope $end
$scope module b2[3] $end
$var wire 1 d& q $end
$var wire 1 `& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^+ state $end
$upscope $end
$scope module b2[2] $end
$var wire 1 e& q $end
$var wire 1 a& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _+ state $end
$upscope $end
$scope module b2[1] $end
$var wire 1 f& q $end
$var wire 1 b& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `+ state $end
$upscope $end
$scope module b2[0] $end
$var wire 1 g& q $end
$var wire 1 c& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a+ state $end
$upscope $end
$upscope $end
$scope module fsm_logic $end
$var wire 1 K! state [3] $end
$var wire 1 L! state [2] $end
$var wire 1 M! state [1] $end
$var wire 1 N! state [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 O! stall $end
$var wire 1 r" valid $end
$var wire 1 s" dirty $end
$var wire 1 q" hit $end
$var reg 4 b+ next_state [3:0] $end
$var reg 2 c+ mem_offset [1:0] $end
$var reg 1 d+ wr $end
$var reg 1 e+ rd $end
$var reg 2 f+ cache_offset [1:0] $end
$var reg 1 g+ write $end
$var reg 1 h+ comp $end
$var reg 1 i+ enable $end
$var reg 1 j+ cache_stall $end
$var reg 1 k+ potentialHit $end
$upscope $end
$scope module state_reg $end
$var wire 1 G! next_state [3] $end
$var wire 1 H! next_state [2] $end
$var wire 1 I! next_state [1] $end
$var wire 1 J! next_state [0] $end
$var wire 1 K! state [3] $end
$var wire 1 L! state [2] $end
$var wire 1 M! state [1] $end
$var wire 1 N! state [0] $end
$var wire 1 } Clk $end
$var wire 1 ~ Reset $end
$scope module state_flops[3] $end
$var wire 1 K! q $end
$var wire 1 G! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l+ state $end
$upscope $end
$scope module state_flops[2] $end
$var wire 1 L! q $end
$var wire 1 H! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m+ state $end
$upscope $end
$scope module state_flops[1] $end
$var wire 1 M! q $end
$var wire 1 I! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n+ state $end
$upscope $end
$scope module state_flops[0] $end
$var wire 1 N! q $end
$var wire 1 J! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o+ state $end
$upscope $end
$upscope $end
$scope module mux0 $end
$var wire 1 `! in0 [15] $end
$var wire 1 a! in0 [14] $end
$var wire 1 b! in0 [13] $end
$var wire 1 c! in0 [12] $end
$var wire 1 d! in0 [11] $end
$var wire 1 e! in0 [10] $end
$var wire 1 f! in0 [9] $end
$var wire 1 g! in0 [8] $end
$var wire 1 h! in0 [7] $end
$var wire 1 i! in0 [6] $end
$var wire 1 j! in0 [5] $end
$var wire 1 k! in0 [4] $end
$var wire 1 l! in0 [3] $end
$var wire 1 m! in0 [2] $end
$var wire 1 n! in0 [1] $end
$var wire 1 o! in0 [0] $end
$var wire 1 i in1 [15] $end
$var wire 1 j in1 [14] $end
$var wire 1 k in1 [13] $end
$var wire 1 l in1 [12] $end
$var wire 1 m in1 [11] $end
$var wire 1 n in1 [10] $end
$var wire 1 o in1 [9] $end
$var wire 1 p in1 [8] $end
$var wire 1 q in1 [7] $end
$var wire 1 r in1 [6] $end
$var wire 1 s in1 [5] $end
$var wire 1 t in1 [4] $end
$var wire 1 u in1 [3] $end
$var wire 1 v in1 [2] $end
$var wire 1 w in1 [1] $end
$var wire 1 x in1 [0] $end
$var wire 1 ," sel $end
$var wire 1 7! out [15] $end
$var wire 1 8! out [14] $end
$var wire 1 9! out [13] $end
$var wire 1 :! out [12] $end
$var wire 1 ;! out [11] $end
$var wire 1 <! out [10] $end
$var wire 1 =! out [9] $end
$var wire 1 >! out [8] $end
$var wire 1 ?! out [7] $end
$var wire 1 @! out [6] $end
$var wire 1 A! out [5] $end
$var wire 1 B! out [4] $end
$var wire 1 C! out [3] $end
$var wire 1 D! out [2] $end
$var wire 1 E! out [1] $end
$var wire 1 F! out [0] $end
$scope module mux0 $end
$var wire 1 o! InA $end
$var wire 1 x InB $end
$var wire 1 ," S $end
$var wire 1 F! Out $end
$var wire 1 p+ S_n $end
$var wire 1 q+ w1 $end
$var wire 1 r+ w2 $end
$var wire 1 s+ w3 $end
$var wire 1 t+ w4 $end
$var wire 1 u+ w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 p+ out $end
$upscope $end
$scope module mod2 $end
$var wire 1 p+ in1 $end
$var wire 1 o! in2 $end
$var wire 1 q+ out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 x in2 $end
$var wire 1 r+ out $end
$upscope $end
$scope module mod4 $end
$var wire 1 q+ in1 $end
$var wire 1 s+ out $end
$upscope $end
$scope module mod5 $end
$var wire 1 r+ in1 $end
$var wire 1 t+ out $end
$upscope $end
$scope module mod6 $end
$var wire 1 s+ in1 $end
$var wire 1 t+ in2 $end
$var wire 1 u+ out $end
$upscope $end
$scope module mod7 $end
$var wire 1 u+ in1 $end
$var wire 1 F! out $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var wire 1 n! InA $end
$var wire 1 w InB $end
$var wire 1 ," S $end
$var wire 1 E! Out $end
$var wire 1 v+ S_n $end
$var wire 1 w+ w1 $end
$var wire 1 x+ w2 $end
$var wire 1 y+ w3 $end
$var wire 1 z+ w4 $end
$var wire 1 {+ w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 v+ out $end
$upscope $end
$scope module mod2 $end
$var wire 1 v+ in1 $end
$var wire 1 n! in2 $end
$var wire 1 w+ out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 w in2 $end
$var wire 1 x+ out $end
$upscope $end
$scope module mod4 $end
$var wire 1 w+ in1 $end
$var wire 1 y+ out $end
$upscope $end
$scope module mod5 $end
$var wire 1 x+ in1 $end
$var wire 1 z+ out $end
$upscope $end
$scope module mod6 $end
$var wire 1 y+ in1 $end
$var wire 1 z+ in2 $end
$var wire 1 {+ out $end
$upscope $end
$scope module mod7 $end
$var wire 1 {+ in1 $end
$var wire 1 E! out $end
$upscope $end
$upscope $end
$scope module mux2 $end
$var wire 1 m! InA $end
$var wire 1 v InB $end
$var wire 1 ," S $end
$var wire 1 D! Out $end
$var wire 1 |+ S_n $end
$var wire 1 }+ w1 $end
$var wire 1 ~+ w2 $end
$var wire 1 !, w3 $end
$var wire 1 ", w4 $end
$var wire 1 #, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 |+ out $end
$upscope $end
$scope module mod2 $end
$var wire 1 |+ in1 $end
$var wire 1 m! in2 $end
$var wire 1 }+ out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 v in2 $end
$var wire 1 ~+ out $end
$upscope $end
$scope module mod4 $end
$var wire 1 }+ in1 $end
$var wire 1 !, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 ~+ in1 $end
$var wire 1 ", out $end
$upscope $end
$scope module mod6 $end
$var wire 1 !, in1 $end
$var wire 1 ", in2 $end
$var wire 1 #, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 #, in1 $end
$var wire 1 D! out $end
$upscope $end
$upscope $end
$scope module mux3 $end
$var wire 1 l! InA $end
$var wire 1 u InB $end
$var wire 1 ," S $end
$var wire 1 C! Out $end
$var wire 1 $, S_n $end
$var wire 1 %, w1 $end
$var wire 1 &, w2 $end
$var wire 1 ', w3 $end
$var wire 1 (, w4 $end
$var wire 1 ), w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 $, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 $, in1 $end
$var wire 1 l! in2 $end
$var wire 1 %, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 u in2 $end
$var wire 1 &, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 %, in1 $end
$var wire 1 ', out $end
$upscope $end
$scope module mod5 $end
$var wire 1 &, in1 $end
$var wire 1 (, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 ', in1 $end
$var wire 1 (, in2 $end
$var wire 1 ), out $end
$upscope $end
$scope module mod7 $end
$var wire 1 ), in1 $end
$var wire 1 C! out $end
$upscope $end
$upscope $end
$scope module mux4 $end
$var wire 1 k! InA $end
$var wire 1 t InB $end
$var wire 1 ," S $end
$var wire 1 B! Out $end
$var wire 1 *, S_n $end
$var wire 1 +, w1 $end
$var wire 1 ,, w2 $end
$var wire 1 -, w3 $end
$var wire 1 ., w4 $end
$var wire 1 /, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 *, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 *, in1 $end
$var wire 1 k! in2 $end
$var wire 1 +, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 t in2 $end
$var wire 1 ,, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 +, in1 $end
$var wire 1 -, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 ,, in1 $end
$var wire 1 ., out $end
$upscope $end
$scope module mod6 $end
$var wire 1 -, in1 $end
$var wire 1 ., in2 $end
$var wire 1 /, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 /, in1 $end
$var wire 1 B! out $end
$upscope $end
$upscope $end
$scope module mux5 $end
$var wire 1 j! InA $end
$var wire 1 s InB $end
$var wire 1 ," S $end
$var wire 1 A! Out $end
$var wire 1 0, S_n $end
$var wire 1 1, w1 $end
$var wire 1 2, w2 $end
$var wire 1 3, w3 $end
$var wire 1 4, w4 $end
$var wire 1 5, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 0, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 0, in1 $end
$var wire 1 j! in2 $end
$var wire 1 1, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 s in2 $end
$var wire 1 2, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 1, in1 $end
$var wire 1 3, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 2, in1 $end
$var wire 1 4, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 3, in1 $end
$var wire 1 4, in2 $end
$var wire 1 5, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 5, in1 $end
$var wire 1 A! out $end
$upscope $end
$upscope $end
$scope module mux6 $end
$var wire 1 i! InA $end
$var wire 1 r InB $end
$var wire 1 ," S $end
$var wire 1 @! Out $end
$var wire 1 6, S_n $end
$var wire 1 7, w1 $end
$var wire 1 8, w2 $end
$var wire 1 9, w3 $end
$var wire 1 :, w4 $end
$var wire 1 ;, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 6, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 6, in1 $end
$var wire 1 i! in2 $end
$var wire 1 7, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 r in2 $end
$var wire 1 8, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 7, in1 $end
$var wire 1 9, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 8, in1 $end
$var wire 1 :, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 9, in1 $end
$var wire 1 :, in2 $end
$var wire 1 ;, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 ;, in1 $end
$var wire 1 @! out $end
$upscope $end
$upscope $end
$scope module mux7 $end
$var wire 1 h! InA $end
$var wire 1 q InB $end
$var wire 1 ," S $end
$var wire 1 ?! Out $end
$var wire 1 <, S_n $end
$var wire 1 =, w1 $end
$var wire 1 >, w2 $end
$var wire 1 ?, w3 $end
$var wire 1 @, w4 $end
$var wire 1 A, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 <, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 <, in1 $end
$var wire 1 h! in2 $end
$var wire 1 =, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 q in2 $end
$var wire 1 >, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 =, in1 $end
$var wire 1 ?, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 >, in1 $end
$var wire 1 @, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 ?, in1 $end
$var wire 1 @, in2 $end
$var wire 1 A, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 A, in1 $end
$var wire 1 ?! out $end
$upscope $end
$upscope $end
$scope module mux8 $end
$var wire 1 g! InA $end
$var wire 1 p InB $end
$var wire 1 ," S $end
$var wire 1 >! Out $end
$var wire 1 B, S_n $end
$var wire 1 C, w1 $end
$var wire 1 D, w2 $end
$var wire 1 E, w3 $end
$var wire 1 F, w4 $end
$var wire 1 G, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 B, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 B, in1 $end
$var wire 1 g! in2 $end
$var wire 1 C, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 p in2 $end
$var wire 1 D, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 C, in1 $end
$var wire 1 E, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 D, in1 $end
$var wire 1 F, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 E, in1 $end
$var wire 1 F, in2 $end
$var wire 1 G, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 G, in1 $end
$var wire 1 >! out $end
$upscope $end
$upscope $end
$scope module mux9 $end
$var wire 1 f! InA $end
$var wire 1 o InB $end
$var wire 1 ," S $end
$var wire 1 =! Out $end
$var wire 1 H, S_n $end
$var wire 1 I, w1 $end
$var wire 1 J, w2 $end
$var wire 1 K, w3 $end
$var wire 1 L, w4 $end
$var wire 1 M, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 H, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 H, in1 $end
$var wire 1 f! in2 $end
$var wire 1 I, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 o in2 $end
$var wire 1 J, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 I, in1 $end
$var wire 1 K, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 J, in1 $end
$var wire 1 L, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 K, in1 $end
$var wire 1 L, in2 $end
$var wire 1 M, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 M, in1 $end
$var wire 1 =! out $end
$upscope $end
$upscope $end
$scope module mux10 $end
$var wire 1 e! InA $end
$var wire 1 n InB $end
$var wire 1 ," S $end
$var wire 1 <! Out $end
$var wire 1 N, S_n $end
$var wire 1 O, w1 $end
$var wire 1 P, w2 $end
$var wire 1 Q, w3 $end
$var wire 1 R, w4 $end
$var wire 1 S, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 N, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 N, in1 $end
$var wire 1 e! in2 $end
$var wire 1 O, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 n in2 $end
$var wire 1 P, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 O, in1 $end
$var wire 1 Q, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 P, in1 $end
$var wire 1 R, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 Q, in1 $end
$var wire 1 R, in2 $end
$var wire 1 S, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 S, in1 $end
$var wire 1 <! out $end
$upscope $end
$upscope $end
$scope module mux11 $end
$var wire 1 d! InA $end
$var wire 1 m InB $end
$var wire 1 ," S $end
$var wire 1 ;! Out $end
$var wire 1 T, S_n $end
$var wire 1 U, w1 $end
$var wire 1 V, w2 $end
$var wire 1 W, w3 $end
$var wire 1 X, w4 $end
$var wire 1 Y, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 T, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 T, in1 $end
$var wire 1 d! in2 $end
$var wire 1 U, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 m in2 $end
$var wire 1 V, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 U, in1 $end
$var wire 1 W, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 V, in1 $end
$var wire 1 X, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 W, in1 $end
$var wire 1 X, in2 $end
$var wire 1 Y, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 Y, in1 $end
$var wire 1 ;! out $end
$upscope $end
$upscope $end
$scope module mux12 $end
$var wire 1 c! InA $end
$var wire 1 l InB $end
$var wire 1 ," S $end
$var wire 1 :! Out $end
$var wire 1 Z, S_n $end
$var wire 1 [, w1 $end
$var wire 1 \, w2 $end
$var wire 1 ], w3 $end
$var wire 1 ^, w4 $end
$var wire 1 _, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 Z, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 Z, in1 $end
$var wire 1 c! in2 $end
$var wire 1 [, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 l in2 $end
$var wire 1 \, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 [, in1 $end
$var wire 1 ], out $end
$upscope $end
$scope module mod5 $end
$var wire 1 \, in1 $end
$var wire 1 ^, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 ], in1 $end
$var wire 1 ^, in2 $end
$var wire 1 _, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 _, in1 $end
$var wire 1 :! out $end
$upscope $end
$upscope $end
$scope module mux13 $end
$var wire 1 b! InA $end
$var wire 1 k InB $end
$var wire 1 ," S $end
$var wire 1 9! Out $end
$var wire 1 `, S_n $end
$var wire 1 a, w1 $end
$var wire 1 b, w2 $end
$var wire 1 c, w3 $end
$var wire 1 d, w4 $end
$var wire 1 e, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 `, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 `, in1 $end
$var wire 1 b! in2 $end
$var wire 1 a, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 k in2 $end
$var wire 1 b, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 a, in1 $end
$var wire 1 c, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 b, in1 $end
$var wire 1 d, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 c, in1 $end
$var wire 1 d, in2 $end
$var wire 1 e, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 e, in1 $end
$var wire 1 9! out $end
$upscope $end
$upscope $end
$scope module mux14 $end
$var wire 1 a! InA $end
$var wire 1 j InB $end
$var wire 1 ," S $end
$var wire 1 8! Out $end
$var wire 1 f, S_n $end
$var wire 1 g, w1 $end
$var wire 1 h, w2 $end
$var wire 1 i, w3 $end
$var wire 1 j, w4 $end
$var wire 1 k, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 f, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 f, in1 $end
$var wire 1 a! in2 $end
$var wire 1 g, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 j in2 $end
$var wire 1 h, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 g, in1 $end
$var wire 1 i, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 h, in1 $end
$var wire 1 j, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 i, in1 $end
$var wire 1 j, in2 $end
$var wire 1 k, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 k, in1 $end
$var wire 1 8! out $end
$upscope $end
$upscope $end
$scope module mux15 $end
$var wire 1 `! InA $end
$var wire 1 i InB $end
$var wire 1 ," S $end
$var wire 1 7! Out $end
$var wire 1 l, S_n $end
$var wire 1 m, w1 $end
$var wire 1 n, w2 $end
$var wire 1 o, w3 $end
$var wire 1 p, w4 $end
$var wire 1 q, w5 $end
$scope module mod1 $end
$var wire 1 ," in1 $end
$var wire 1 l, out $end
$upscope $end
$scope module mod2 $end
$var wire 1 l, in1 $end
$var wire 1 `! in2 $end
$var wire 1 m, out $end
$upscope $end
$scope module mod3 $end
$var wire 1 ," in1 $end
$var wire 1 i in2 $end
$var wire 1 n, out $end
$upscope $end
$scope module mod4 $end
$var wire 1 m, in1 $end
$var wire 1 o, out $end
$upscope $end
$scope module mod5 $end
$var wire 1 n, in1 $end
$var wire 1 p, out $end
$upscope $end
$scope module mod6 $end
$var wire 1 o, in1 $end
$var wire 1 p, in2 $end
$var wire 1 q, out $end
$upscope $end
$scope module mod7 $end
$var wire 1 q, in1 $end
$var wire 1 7! out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ref $end
$var wire 1 r, Addr [15] $end
$var wire 1 s, Addr [14] $end
$var wire 1 t, Addr [13] $end
$var wire 1 u, Addr [12] $end
$var wire 1 v, Addr [11] $end
$var wire 1 w, Addr [10] $end
$var wire 1 x, Addr [9] $end
$var wire 1 y, Addr [8] $end
$var wire 1 z, Addr [7] $end
$var wire 1 {, Addr [6] $end
$var wire 1 |, Addr [5] $end
$var wire 1 }, Addr [4] $end
$var wire 1 ~, Addr [3] $end
$var wire 1 !- Addr [2] $end
$var wire 1 "- Addr [1] $end
$var wire 1 #- Addr [0] $end
$var wire 1 $- DataIn [15] $end
$var wire 1 %- DataIn [14] $end
$var wire 1 &- DataIn [13] $end
$var wire 1 '- DataIn [12] $end
$var wire 1 (- DataIn [11] $end
$var wire 1 )- DataIn [10] $end
$var wire 1 *- DataIn [9] $end
$var wire 1 +- DataIn [8] $end
$var wire 1 ,- DataIn [7] $end
$var wire 1 -- DataIn [6] $end
$var wire 1 .- DataIn [5] $end
$var wire 1 /- DataIn [4] $end
$var wire 1 0- DataIn [3] $end
$var wire 1 1- DataIn [2] $end
$var wire 1 2- DataIn [1] $end
$var wire 1 3- DataIn [0] $end
$var wire 1 4- Rd $end
$var wire 1 5- Wr $end
$var wire 1 6- clk $end
$var wire 1 7- rst $end
$var reg 16 8- DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 9- loaded $end
$var integer 32 :- i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 X
b1 $!
b1 *#
b10000 8$
b10000 ;$
b10000 >$
b10000 A$
b101 D$
b1 G$
b11 L$
b10000 Z%
b10000 ]%
b10000 `%
b10000 c%
b101 f%
b1 i%
b0 3
b0 4
05
06
b11011010110010101101101001011100110000101100100011001000111001000110010 7
0N
b0 O
b0 P
b0 Q
1R
b0 S
b10000000000000000000000000000110 T
bx U
bx V
bx W
bx 8-
19-
b10000000000000000 :-
0o+
0n+
0m+
0l+
b0 b+
bx c+
0d+
0e+
bx f+
0g+
0h+
0i+
0j+
0k+
0a+
0`+
0_+
0^+
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
1E*
b1 F*
bx e*
bx f*
b100000000000001 g*
0U+
0T+
0S+
0R+
0Q+
0P+
0O+
0N+
0M+
0L+
0K+
0J+
0I+
0H+
0G+
0F+
0E+
0D+
0C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
06+
05+
04+
03+
02+
01+
00+
0/+
0.+
0-+
0,+
0++
0*+
0)+
0(+
0'+
0&+
0%+
0$+
0#+
12)
b1 3)
bx R)
bx S)
b100000000000001 T)
0B*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
08*
07*
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
1}'
b1 ~'
bx ?(
bx @(
b100000000000001 A(
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
0%)
0$)
0#)
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
1j&
b1 k&
bx ,'
bx -'
b100000000000001 .'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
bx l%
b100000000 m%
bx j%
b100000000 k%
bx g%
b100000000 h%
bx d%
b100000000 e%
bx a%
b100000000 b%
bx ^%
b100000000 _%
bx [%
b100000000 \%
bx J$
b100000000 K$
bx H$
b100000000 I$
bx E$
b100000000 F$
bx B$
b100000000 C$
bx ?$
b100000000 @$
bx <$
b100000000 =$
bx 9$
b100000000 :$
0)#
1!!
1"!
b1 #!
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
01
02
18
19
0:
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
0|
1}
1~
0%!
0&!
0+!
0*!
0)!
0(!
0'!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
06!
x5!
x4!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
0J!
0I!
0H!
0G!
xN!
xM!
xL!
xK!
0O!
0_!
x^!
x]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
xs!
xr!
xq!
xp!
xu!
xt!
xv!
xx!
xw!
0*"
x)"
x("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0+"
0,"
0-"
0."
0/"
00"
01"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0f"
0e"
0d"
0c"
0b"
0k"
0j"
0i"
0h"
0g"
0p"
0o"
0n"
0m"
0l"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0}"
0|"
0~"
0!#
0"#
x##
x$#
0%#
0&#
x(#
x'#
1l,
xm,
1n,
xo,
0p,
xq,
1f,
xg,
1h,
xi,
0j,
xk,
1`,
xa,
1b,
xc,
0d,
xe,
1Z,
x[,
1\,
x],
0^,
x_,
1T,
xU,
1V,
xW,
0X,
xY,
1N,
xO,
1P,
xQ,
0R,
xS,
1H,
xI,
1J,
xK,
0L,
xM,
1B,
xC,
1D,
xE,
0F,
xG,
1<,
x=,
1>,
x?,
0@,
xA,
16,
x7,
18,
x9,
0:,
x;,
10,
x1,
12,
x3,
04,
x5,
1*,
x+,
1,,
x-,
0.,
x/,
1$,
x%,
1&,
x',
0(,
x),
1|+
x}+
1~+
x!,
0",
x#,
1v+
xw+
1x+
xy+
0z+
x{+
1p+
xq+
1r+
xs+
0t+
xu+
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
xP&
xQ&
xR&
xS&
0W&
0V&
0U&
0T&
0X&
0Y&
0Z&
0[&
x_&
x^&
x]&
x\&
xc&
xb&
xa&
x`&
xg&
xf&
xe&
xd&
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
0G*
xd*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
0h*
0i*
xj*
xk*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
xm*
xl*
x|*
x}*
x~*
x!+
x"+
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
04)
xQ)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
0U)
0V)
xW)
xX)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xi)
xj)
xk)
xl)
xm)
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
0!(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
0B(
0C(
xD(
xE(
xU(
xT(
xS(
xR(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xV(
xW(
xX(
xY(
xZ(
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
0l&
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
0/'
00'
x1'
x2'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
xC'
xD'
xE'
xF'
xG'
0R$
0Q$
0P$
1O$
1N$
1W$
0V$
0U$
1T$
1S$
0\$
1[$
0Z$
1Y$
1X$
1a$
1`$
0_$
1^$
1]$
0f$
0e$
1d$
1c$
1b$
1k$
0j$
1i$
1h$
1g$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0N%
1O%
0P%
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
0X%
0Y%
00#
0/#
0.#
1-#
0,#
15#
04#
03#
12#
01#
0:#
19#
08#
17#
06#
1?#
1>#
0=#
1<#
0;#
0D#
0C#
1B#
1A#
0@#
1I#
0H#
1G#
1F#
0E#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0,$
1-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
05-
04-
03-
02-
01-
00-
0/-
0.-
0--
0,-
0+-
0*-
0)-
0(-
0'-
0&-
0%-
0$-
0#-
0"-
0!-
0~,
0},
0|,
0{,
0z,
0y,
0x,
0w,
0v,
0u,
0t,
0s,
0r,
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
1M$
1+#
1D*
1C*
01)
10)
1|'
0{'
0i&
0h&
16-
17-
$end
#1
0K!
0L!
0M!
0N!
0d&
0e&
0f&
0g&
0`&
0a&
0b&
0c&
0\&
0]&
0^&
0_&
0!+
0~*
0}*
0|*
0@&
0A&
0B&
0C&
0D&
0E&
0F&
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0U*
0V*
0W*
0X*
0Y*
0Z*
0[*
0\*
0]*
0^*
0_*
0`*
0a*
0b*
0c*
0d*
0H*
0I*
0J*
0K*
0L*
0M*
0N*
0O*
0P*
0Q*
0R*
0S*
0T*
0k*
0j*
0"+
0l)
0k)
0j)
0i)
00&
01&
02&
03&
04&
05&
06&
07&
08&
09&
0:&
0;&
0<&
0=&
0>&
0?&
0B)
0C)
0D)
0E)
0F)
0G)
0H)
0I)
0J)
0K)
0L)
0M)
0N)
0O)
0P)
0Q)
05)
06)
07)
08)
09)
0:)
0;)
0<)
0=)
0>)
0?)
0@)
0A)
0X)
0W)
0m)
0Y(
0X(
0W(
0V(
0~%
0!&
0"&
0#&
0$&
0%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
0/(
00(
01(
02(
03(
04(
05(
06(
07(
08(
09(
0:(
0;(
0<(
0=(
0>(
0"(
0#(
0$(
0%(
0&(
0'(
0((
0)(
0*(
0+(
0,(
0-(
0.(
0E(
0D(
0Z(
0F'
0E'
0D'
0C'
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0z&
0{&
0|&
0}&
0~&
0!'
0"'
0#'
0$'
0%'
0&'
0''
0('
0)'
0*'
0+'
0m&
0n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
0y&
02'
01'
0G'
0##
0$#
0(#
1'#
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0{*
0z*
0y*
0x*
0w*
0v*
0u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0l*
0o!
1q+
0s+
1u+
0F!
0n!
1w+
0y+
1{+
0E!
0m!
1}+
0!,
1#,
0D!
0l!
1%,
0',
1),
0C!
0k!
1+,
0-,
1/,
0B!
0j!
11,
03,
15,
0A!
0i!
17,
09,
1;,
0@!
0h!
1=,
0?,
1A,
0?!
0g!
1C,
0E,
1G,
0>!
0f!
1I,
0K,
1M,
0=!
0e!
1O,
0Q,
1S,
0<!
0d!
1U,
0W,
1Y,
0;!
0c!
1[,
0],
1_,
0:!
0b!
1a,
0c,
1e,
09!
0a!
1g,
0i,
1k,
08!
0`!
1m,
0o,
1q,
07!
0s!
0r!
0q!
0p!
0v!
#50
0!!
08
06-
0}
#100
1!!
b10 #!
18
16-
1}
b0 :$
b1 :$
b10 :$
b11 :$
b100 :$
b101 :$
b110 :$
b111 :$
b1000 :$
b1001 :$
b1010 :$
b1011 :$
b1100 :$
b1101 :$
b1110 :$
b1111 :$
b10000 :$
b10001 :$
b10010 :$
b10011 :$
b10100 :$
b10101 :$
b10110 :$
b10111 :$
b11000 :$
b11001 :$
b11010 :$
b11011 :$
b11100 :$
b11101 :$
b11110 :$
b11111 :$
b100000 :$
b100001 :$
b100010 :$
b100011 :$
b100100 :$
b100101 :$
b100110 :$
b100111 :$
b101000 :$
b101001 :$
b101010 :$
b101011 :$
b101100 :$
b101101 :$
b101110 :$
b101111 :$
b110000 :$
b110001 :$
b110010 :$
b110011 :$
b110100 :$
b110101 :$
b110110 :$
b110111 :$
b111000 :$
b111001 :$
b111010 :$
b111011 :$
b111100 :$
b111101 :$
b111110 :$
b111111 :$
b1000000 :$
b1000001 :$
b1000010 :$
b1000011 :$
b1000100 :$
b1000101 :$
b1000110 :$
b1000111 :$
b1001000 :$
b1001001 :$
b1001010 :$
b1001011 :$
b1001100 :$
b1001101 :$
b1001110 :$
b1001111 :$
b1010000 :$
b1010001 :$
b1010010 :$
b1010011 :$
b1010100 :$
b1010101 :$
b1010110 :$
b1010111 :$
b1011000 :$
b1011001 :$
b1011010 :$
b1011011 :$
b1011100 :$
b1011101 :$
b1011110 :$
b1011111 :$
b1100000 :$
b1100001 :$
b1100010 :$
b1100011 :$
b1100100 :$
b1100101 :$
b1100110 :$
b1100111 :$
b1101000 :$
b1101001 :$
b1101010 :$
b1101011 :$
b1101100 :$
b1101101 :$
b1101110 :$
b1101111 :$
b1110000 :$
b1110001 :$
b1110010 :$
b1110011 :$
b1110100 :$
b1110101 :$
b1110110 :$
b1110111 :$
b1111000 :$
b1111001 :$
b1111010 :$
b1111011 :$
b1111100 :$
b1111101 :$
b1111110 :$
b1111111 :$
b10000000 :$
b10000001 :$
b10000010 :$
b10000011 :$
b10000100 :$
b10000101 :$
b10000110 :$
b10000111 :$
b10001000 :$
b10001001 :$
b10001010 :$
b10001011 :$
b10001100 :$
b10001101 :$
b10001110 :$
b10001111 :$
b10010000 :$
b10010001 :$
b10010010 :$
b10010011 :$
b10010100 :$
b10010101 :$
b10010110 :$
b10010111 :$
b10011000 :$
b10011001 :$
b10011010 :$
b10011011 :$
b10011100 :$
b10011101 :$
b10011110 :$
b10011111 :$
b10100000 :$
b10100001 :$
b10100010 :$
b10100011 :$
b10100100 :$
b10100101 :$
b10100110 :$
b10100111 :$
b10101000 :$
b10101001 :$
b10101010 :$
b10101011 :$
b10101100 :$
b10101101 :$
b10101110 :$
b10101111 :$
b10110000 :$
b10110001 :$
b10110010 :$
b10110011 :$
b10110100 :$
b10110101 :$
b10110110 :$
b10110111 :$
b10111000 :$
b10111001 :$
b10111010 :$
b10111011 :$
b10111100 :$
b10111101 :$
b10111110 :$
b10111111 :$
b11000000 :$
b11000001 :$
b11000010 :$
b11000011 :$
b11000100 :$
b11000101 :$
b11000110 :$
b11000111 :$
b11001000 :$
b11001001 :$
b11001010 :$
b11001011 :$
b11001100 :$
b11001101 :$
b11001110 :$
b11001111 :$
b11010000 :$
b11010001 :$
b11010010 :$
b11010011 :$
b11010100 :$
b11010101 :$
b11010110 :$
b11010111 :$
b11011000 :$
b11011001 :$
b11011010 :$
b11011011 :$
b11011100 :$
b11011101 :$
b11011110 :$
b11011111 :$
b11100000 :$
b11100001 :$
b11100010 :$
b11100011 :$
b11100100 :$
b11100101 :$
b11100110 :$
b11100111 :$
b11101000 :$
b11101001 :$
b11101010 :$
b11101011 :$
b11101100 :$
b11101101 :$
b11101110 :$
b11101111 :$
b11110000 :$
b11110001 :$
b11110010 :$
b11110011 :$
b11110100 :$
b11110101 :$
b11110110 :$
b11110111 :$
b11111000 :$
b11111001 :$
b11111010 :$
b11111011 :$
b11111100 :$
b11111101 :$
b11111110 :$
b11111111 :$
b100000000 :$
b0 =$
b1 =$
b10 =$
b11 =$
b100 =$
b101 =$
b110 =$
b111 =$
b1000 =$
b1001 =$
b1010 =$
b1011 =$
b1100 =$
b1101 =$
b1110 =$
b1111 =$
b10000 =$
b10001 =$
b10010 =$
b10011 =$
b10100 =$
b10101 =$
b10110 =$
b10111 =$
b11000 =$
b11001 =$
b11010 =$
b11011 =$
b11100 =$
b11101 =$
b11110 =$
b11111 =$
b100000 =$
b100001 =$
b100010 =$
b100011 =$
b100100 =$
b100101 =$
b100110 =$
b100111 =$
b101000 =$
b101001 =$
b101010 =$
b101011 =$
b101100 =$
b101101 =$
b101110 =$
b101111 =$
b110000 =$
b110001 =$
b110010 =$
b110011 =$
b110100 =$
b110101 =$
b110110 =$
b110111 =$
b111000 =$
b111001 =$
b111010 =$
b111011 =$
b111100 =$
b111101 =$
b111110 =$
b111111 =$
b1000000 =$
b1000001 =$
b1000010 =$
b1000011 =$
b1000100 =$
b1000101 =$
b1000110 =$
b1000111 =$
b1001000 =$
b1001001 =$
b1001010 =$
b1001011 =$
b1001100 =$
b1001101 =$
b1001110 =$
b1001111 =$
b1010000 =$
b1010001 =$
b1010010 =$
b1010011 =$
b1010100 =$
b1010101 =$
b1010110 =$
b1010111 =$
b1011000 =$
b1011001 =$
b1011010 =$
b1011011 =$
b1011100 =$
b1011101 =$
b1011110 =$
b1011111 =$
b1100000 =$
b1100001 =$
b1100010 =$
b1100011 =$
b1100100 =$
b1100101 =$
b1100110 =$
b1100111 =$
b1101000 =$
b1101001 =$
b1101010 =$
b1101011 =$
b1101100 =$
b1101101 =$
b1101110 =$
b1101111 =$
b1110000 =$
b1110001 =$
b1110010 =$
b1110011 =$
b1110100 =$
b1110101 =$
b1110110 =$
b1110111 =$
b1111000 =$
b1111001 =$
b1111010 =$
b1111011 =$
b1111100 =$
b1111101 =$
b1111110 =$
b1111111 =$
b10000000 =$
b10000001 =$
b10000010 =$
b10000011 =$
b10000100 =$
b10000101 =$
b10000110 =$
b10000111 =$
b10001000 =$
b10001001 =$
b10001010 =$
b10001011 =$
b10001100 =$
b10001101 =$
b10001110 =$
b10001111 =$
b10010000 =$
b10010001 =$
b10010010 =$
b10010011 =$
b10010100 =$
b10010101 =$
b10010110 =$
b10010111 =$
b10011000 =$
b10011001 =$
b10011010 =$
b10011011 =$
b10011100 =$
b10011101 =$
b10011110 =$
b10011111 =$
b10100000 =$
b10100001 =$
b10100010 =$
b10100011 =$
b10100100 =$
b10100101 =$
b10100110 =$
b10100111 =$
b10101000 =$
b10101001 =$
b10101010 =$
b10101011 =$
b10101100 =$
b10101101 =$
b10101110 =$
b10101111 =$
b10110000 =$
b10110001 =$
b10110010 =$
b10110011 =$
b10110100 =$
b10110101 =$
b10110110 =$
b10110111 =$
b10111000 =$
b10111001 =$
b10111010 =$
b10111011 =$
b10111100 =$
b10111101 =$
b10111110 =$
b10111111 =$
b11000000 =$
b11000001 =$
b11000010 =$
b11000011 =$
b11000100 =$
b11000101 =$
b11000110 =$
b11000111 =$
b11001000 =$
b11001001 =$
b11001010 =$
b11001011 =$
b11001100 =$
b11001101 =$
b11001110 =$
b11001111 =$
b11010000 =$
b11010001 =$
b11010010 =$
b11010011 =$
b11010100 =$
b11010101 =$
b11010110 =$
b11010111 =$
b11011000 =$
b11011001 =$
b11011010 =$
b11011011 =$
b11011100 =$
b11011101 =$
b11011110 =$
b11011111 =$
b11100000 =$
b11100001 =$
b11100010 =$
b11100011 =$
b11100100 =$
b11100101 =$
b11100110 =$
b11100111 =$
b11101000 =$
b11101001 =$
b11101010 =$
b11101011 =$
b11101100 =$
b11101101 =$
b11101110 =$
b11101111 =$
b11110000 =$
b11110001 =$
b11110010 =$
b11110011 =$
b11110100 =$
b11110101 =$
b11110110 =$
b11110111 =$
b11111000 =$
b11111001 =$
b11111010 =$
b11111011 =$
b11111100 =$
b11111101 =$
b11111110 =$
b11111111 =$
b100000000 =$
b0 @$
b1 @$
b10 @$
b11 @$
b100 @$
b101 @$
b110 @$
b111 @$
b1000 @$
b1001 @$
b1010 @$
b1011 @$
b1100 @$
b1101 @$
b1110 @$
b1111 @$
b10000 @$
b10001 @$
b10010 @$
b10011 @$
b10100 @$
b10101 @$
b10110 @$
b10111 @$
b11000 @$
b11001 @$
b11010 @$
b11011 @$
b11100 @$
b11101 @$
b11110 @$
b11111 @$
b100000 @$
b100001 @$
b100010 @$
b100011 @$
b100100 @$
b100101 @$
b100110 @$
b100111 @$
b101000 @$
b101001 @$
b101010 @$
b101011 @$
b101100 @$
b101101 @$
b101110 @$
b101111 @$
b110000 @$
b110001 @$
b110010 @$
b110011 @$
b110100 @$
b110101 @$
b110110 @$
b110111 @$
b111000 @$
b111001 @$
b111010 @$
b111011 @$
b111100 @$
b111101 @$
b111110 @$
b111111 @$
b1000000 @$
b1000001 @$
b1000010 @$
b1000011 @$
b1000100 @$
b1000101 @$
b1000110 @$
b1000111 @$
b1001000 @$
b1001001 @$
b1001010 @$
b1001011 @$
b1001100 @$
b1001101 @$
b1001110 @$
b1001111 @$
b1010000 @$
b1010001 @$
b1010010 @$
b1010011 @$
b1010100 @$
b1010101 @$
b1010110 @$
b1010111 @$
b1011000 @$
b1011001 @$
b1011010 @$
b1011011 @$
b1011100 @$
b1011101 @$
b1011110 @$
b1011111 @$
b1100000 @$
b1100001 @$
b1100010 @$
b1100011 @$
b1100100 @$
b1100101 @$
b1100110 @$
b1100111 @$
b1101000 @$
b1101001 @$
b1101010 @$
b1101011 @$
b1101100 @$
b1101101 @$
b1101110 @$
b1101111 @$
b1110000 @$
b1110001 @$
b1110010 @$
b1110011 @$
b1110100 @$
b1110101 @$
b1110110 @$
b1110111 @$
b1111000 @$
b1111001 @$
b1111010 @$
b1111011 @$
b1111100 @$
b1111101 @$
b1111110 @$
b1111111 @$
b10000000 @$
b10000001 @$
b10000010 @$
b10000011 @$
b10000100 @$
b10000101 @$
b10000110 @$
b10000111 @$
b10001000 @$
b10001001 @$
b10001010 @$
b10001011 @$
b10001100 @$
b10001101 @$
b10001110 @$
b10001111 @$
b10010000 @$
b10010001 @$
b10010010 @$
b10010011 @$
b10010100 @$
b10010101 @$
b10010110 @$
b10010111 @$
b10011000 @$
b10011001 @$
b10011010 @$
b10011011 @$
b10011100 @$
b10011101 @$
b10011110 @$
b10011111 @$
b10100000 @$
b10100001 @$
b10100010 @$
b10100011 @$
b10100100 @$
b10100101 @$
b10100110 @$
b10100111 @$
b10101000 @$
b10101001 @$
b10101010 @$
b10101011 @$
b10101100 @$
b10101101 @$
b10101110 @$
b10101111 @$
b10110000 @$
b10110001 @$
b10110010 @$
b10110011 @$
b10110100 @$
b10110101 @$
b10110110 @$
b10110111 @$
b10111000 @$
b10111001 @$
b10111010 @$
b10111011 @$
b10111100 @$
b10111101 @$
b10111110 @$
b10111111 @$
b11000000 @$
b11000001 @$
b11000010 @$
b11000011 @$
b11000100 @$
b11000101 @$
b11000110 @$
b11000111 @$
b11001000 @$
b11001001 @$
b11001010 @$
b11001011 @$
b11001100 @$
b11001101 @$
b11001110 @$
b11001111 @$
b11010000 @$
b11010001 @$
b11010010 @$
b11010011 @$
b11010100 @$
b11010101 @$
b11010110 @$
b11010111 @$
b11011000 @$
b11011001 @$
b11011010 @$
b11011011 @$
b11011100 @$
b11011101 @$
b11011110 @$
b11011111 @$
b11100000 @$
b11100001 @$
b11100010 @$
b11100011 @$
b11100100 @$
b11100101 @$
b11100110 @$
b11100111 @$
b11101000 @$
b11101001 @$
b11101010 @$
b11101011 @$
b11101100 @$
b11101101 @$
b11101110 @$
b11101111 @$
b11110000 @$
b11110001 @$
b11110010 @$
b11110011 @$
b11110100 @$
b11110101 @$
b11110110 @$
b11110111 @$
b11111000 @$
b11111001 @$
b11111010 @$
b11111011 @$
b11111100 @$
b11111101 @$
b11111110 @$
b11111111 @$
b100000000 @$
b0 C$
b1 C$
b10 C$
b11 C$
b100 C$
b101 C$
b110 C$
b111 C$
b1000 C$
b1001 C$
b1010 C$
b1011 C$
b1100 C$
b1101 C$
b1110 C$
b1111 C$
b10000 C$
b10001 C$
b10010 C$
b10011 C$
b10100 C$
b10101 C$
b10110 C$
b10111 C$
b11000 C$
b11001 C$
b11010 C$
b11011 C$
b11100 C$
b11101 C$
b11110 C$
b11111 C$
b100000 C$
b100001 C$
b100010 C$
b100011 C$
b100100 C$
b100101 C$
b100110 C$
b100111 C$
b101000 C$
b101001 C$
b101010 C$
b101011 C$
b101100 C$
b101101 C$
b101110 C$
b101111 C$
b110000 C$
b110001 C$
b110010 C$
b110011 C$
b110100 C$
b110101 C$
b110110 C$
b110111 C$
b111000 C$
b111001 C$
b111010 C$
b111011 C$
b111100 C$
b111101 C$
b111110 C$
b111111 C$
b1000000 C$
b1000001 C$
b1000010 C$
b1000011 C$
b1000100 C$
b1000101 C$
b1000110 C$
b1000111 C$
b1001000 C$
b1001001 C$
b1001010 C$
b1001011 C$
b1001100 C$
b1001101 C$
b1001110 C$
b1001111 C$
b1010000 C$
b1010001 C$
b1010010 C$
b1010011 C$
b1010100 C$
b1010101 C$
b1010110 C$
b1010111 C$
b1011000 C$
b1011001 C$
b1011010 C$
b1011011 C$
b1011100 C$
b1011101 C$
b1011110 C$
b1011111 C$
b1100000 C$
b1100001 C$
b1100010 C$
b1100011 C$
b1100100 C$
b1100101 C$
b1100110 C$
b1100111 C$
b1101000 C$
b1101001 C$
b1101010 C$
b1101011 C$
b1101100 C$
b1101101 C$
b1101110 C$
b1101111 C$
b1110000 C$
b1110001 C$
b1110010 C$
b1110011 C$
b1110100 C$
b1110101 C$
b1110110 C$
b1110111 C$
b1111000 C$
b1111001 C$
b1111010 C$
b1111011 C$
b1111100 C$
b1111101 C$
b1111110 C$
b1111111 C$
b10000000 C$
b10000001 C$
b10000010 C$
b10000011 C$
b10000100 C$
b10000101 C$
b10000110 C$
b10000111 C$
b10001000 C$
b10001001 C$
b10001010 C$
b10001011 C$
b10001100 C$
b10001101 C$
b10001110 C$
b10001111 C$
b10010000 C$
b10010001 C$
b10010010 C$
b10010011 C$
b10010100 C$
b10010101 C$
b10010110 C$
b10010111 C$
b10011000 C$
b10011001 C$
b10011010 C$
b10011011 C$
b10011100 C$
b10011101 C$
b10011110 C$
b10011111 C$
b10100000 C$
b10100001 C$
b10100010 C$
b10100011 C$
b10100100 C$
b10100101 C$
b10100110 C$
b10100111 C$
b10101000 C$
b10101001 C$
b10101010 C$
b10101011 C$
b10101100 C$
b10101101 C$
b10101110 C$
b10101111 C$
b10110000 C$
b10110001 C$
b10110010 C$
b10110011 C$
b10110100 C$
b10110101 C$
b10110110 C$
b10110111 C$
b10111000 C$
b10111001 C$
b10111010 C$
b10111011 C$
b10111100 C$
b10111101 C$
b10111110 C$
b10111111 C$
b11000000 C$
b11000001 C$
b11000010 C$
b11000011 C$
b11000100 C$
b11000101 C$
b11000110 C$
b11000111 C$
b11001000 C$
b11001001 C$
b11001010 C$
b11001011 C$
b11001100 C$
b11001101 C$
b11001110 C$
b11001111 C$
b11010000 C$
b11010001 C$
b11010010 C$
b11010011 C$
b11010100 C$
b11010101 C$
b11010110 C$
b11010111 C$
b11011000 C$
b11011001 C$
b11011010 C$
b11011011 C$
b11011100 C$
b11011101 C$
b11011110 C$
b11011111 C$
b11100000 C$
b11100001 C$
b11100010 C$
b11100011 C$
b11100100 C$
b11100101 C$
b11100110 C$
b11100111 C$
b11101000 C$
b11101001 C$
b11101010 C$
b11101011 C$
b11101100 C$
b11101101 C$
b11101110 C$
b11101111 C$
b11110000 C$
b11110001 C$
b11110010 C$
b11110011 C$
b11110100 C$
b11110101 C$
b11110110 C$
b11110111 C$
b11111000 C$
b11111001 C$
b11111010 C$
b11111011 C$
b11111100 C$
b11111101 C$
b11111110 C$
b11111111 C$
b100000000 C$
b0 F$
b1 F$
b10 F$
b11 F$
b100 F$
b101 F$
b110 F$
b111 F$
b1000 F$
b1001 F$
b1010 F$
b1011 F$
b1100 F$
b1101 F$
b1110 F$
b1111 F$
b10000 F$
b10001 F$
b10010 F$
b10011 F$
b10100 F$
b10101 F$
b10110 F$
b10111 F$
b11000 F$
b11001 F$
b11010 F$
b11011 F$
b11100 F$
b11101 F$
b11110 F$
b11111 F$
b100000 F$
b100001 F$
b100010 F$
b100011 F$
b100100 F$
b100101 F$
b100110 F$
b100111 F$
b101000 F$
b101001 F$
b101010 F$
b101011 F$
b101100 F$
b101101 F$
b101110 F$
b101111 F$
b110000 F$
b110001 F$
b110010 F$
b110011 F$
b110100 F$
b110101 F$
b110110 F$
b110111 F$
b111000 F$
b111001 F$
b111010 F$
b111011 F$
b111100 F$
b111101 F$
b111110 F$
b111111 F$
b1000000 F$
b1000001 F$
b1000010 F$
b1000011 F$
b1000100 F$
b1000101 F$
b1000110 F$
b1000111 F$
b1001000 F$
b1001001 F$
b1001010 F$
b1001011 F$
b1001100 F$
b1001101 F$
b1001110 F$
b1001111 F$
b1010000 F$
b1010001 F$
b1010010 F$
b1010011 F$
b1010100 F$
b1010101 F$
b1010110 F$
b1010111 F$
b1011000 F$
b1011001 F$
b1011010 F$
b1011011 F$
b1011100 F$
b1011101 F$
b1011110 F$
b1011111 F$
b1100000 F$
b1100001 F$
b1100010 F$
b1100011 F$
b1100100 F$
b1100101 F$
b1100110 F$
b1100111 F$
b1101000 F$
b1101001 F$
b1101010 F$
b1101011 F$
b1101100 F$
b1101101 F$
b1101110 F$
b1101111 F$
b1110000 F$
b1110001 F$
b1110010 F$
b1110011 F$
b1110100 F$
b1110101 F$
b1110110 F$
b1110111 F$
b1111000 F$
b1111001 F$
b1111010 F$
b1111011 F$
b1111100 F$
b1111101 F$
b1111110 F$
b1111111 F$
b10000000 F$
b10000001 F$
b10000010 F$
b10000011 F$
b10000100 F$
b10000101 F$
b10000110 F$
b10000111 F$
b10001000 F$
b10001001 F$
b10001010 F$
b10001011 F$
b10001100 F$
b10001101 F$
b10001110 F$
b10001111 F$
b10010000 F$
b10010001 F$
b10010010 F$
b10010011 F$
b10010100 F$
b10010101 F$
b10010110 F$
b10010111 F$
b10011000 F$
b10011001 F$
b10011010 F$
b10011011 F$
b10011100 F$
b10011101 F$
b10011110 F$
b10011111 F$
b10100000 F$
b10100001 F$
b10100010 F$
b10100011 F$
b10100100 F$
b10100101 F$
b10100110 F$
b10100111 F$
b10101000 F$
b10101001 F$
b10101010 F$
b10101011 F$
b10101100 F$
b10101101 F$
b10101110 F$
b10101111 F$
b10110000 F$
b10110001 F$
b10110010 F$
b10110011 F$
b10110100 F$
b10110101 F$
b10110110 F$
b10110111 F$
b10111000 F$
b10111001 F$
b10111010 F$
b10111011 F$
b10111100 F$
b10111101 F$
b10111110 F$
b10111111 F$
b11000000 F$
b11000001 F$
b11000010 F$
b11000011 F$
b11000100 F$
b11000101 F$
b11000110 F$
b11000111 F$
b11001000 F$
b11001001 F$
b11001010 F$
b11001011 F$
b11001100 F$
b11001101 F$
b11001110 F$
b11001111 F$
b11010000 F$
b11010001 F$
b11010010 F$
b11010011 F$
b11010100 F$
b11010101 F$
b11010110 F$
b11010111 F$
b11011000 F$
b11011001 F$
b11011010 F$
b11011011 F$
b11011100 F$
b11011101 F$
b11011110 F$
b11011111 F$
b11100000 F$
b11100001 F$
b11100010 F$
b11100011 F$
b11100100 F$
b11100101 F$
b11100110 F$
b11100111 F$
b11101000 F$
b11101001 F$
b11101010 F$
b11101011 F$
b11101100 F$
b11101101 F$
b11101110 F$
b11101111 F$
b11110000 F$
b11110001 F$
b11110010 F$
b11110011 F$
b11110100 F$
b11110101 F$
b11110110 F$
b11110111 F$
b11111000 F$
b11111001 F$
b11111010 F$
b11111011 F$
b11111100 F$
b11111101 F$
b11111110 F$
b11111111 F$
b100000000 F$
b0 I$
b1 I$
b10 I$
b11 I$
b100 I$
b101 I$
b110 I$
b111 I$
b1000 I$
b1001 I$
b1010 I$
b1011 I$
b1100 I$
b1101 I$
b1110 I$
b1111 I$
b10000 I$
b10001 I$
b10010 I$
b10011 I$
b10100 I$
b10101 I$
b10110 I$
b10111 I$
b11000 I$
b11001 I$
b11010 I$
b11011 I$
b11100 I$
b11101 I$
b11110 I$
b11111 I$
b100000 I$
b100001 I$
b100010 I$
b100011 I$
b100100 I$
b100101 I$
b100110 I$
b100111 I$
b101000 I$
b101001 I$
b101010 I$
b101011 I$
b101100 I$
b101101 I$
b101110 I$
b101111 I$
b110000 I$
b110001 I$
b110010 I$
b110011 I$
b110100 I$
b110101 I$
b110110 I$
b110111 I$
b111000 I$
b111001 I$
b111010 I$
b111011 I$
b111100 I$
b111101 I$
b111110 I$
b111111 I$
b1000000 I$
b1000001 I$
b1000010 I$
b1000011 I$
b1000100 I$
b1000101 I$
b1000110 I$
b1000111 I$
b1001000 I$
b1001001 I$
b1001010 I$
b1001011 I$
b1001100 I$
b1001101 I$
b1001110 I$
b1001111 I$
b1010000 I$
b1010001 I$
b1010010 I$
b1010011 I$
b1010100 I$
b1010101 I$
b1010110 I$
b1010111 I$
b1011000 I$
b1011001 I$
b1011010 I$
b1011011 I$
b1011100 I$
b1011101 I$
b1011110 I$
b1011111 I$
b1100000 I$
b1100001 I$
b1100010 I$
b1100011 I$
b1100100 I$
b1100101 I$
b1100110 I$
b1100111 I$
b1101000 I$
b1101001 I$
b1101010 I$
b1101011 I$
b1101100 I$
b1101101 I$
b1101110 I$
b1101111 I$
b1110000 I$
b1110001 I$
b1110010 I$
b1110011 I$
b1110100 I$
b1110101 I$
b1110110 I$
b1110111 I$
b1111000 I$
b1111001 I$
b1111010 I$
b1111011 I$
b1111100 I$
b1111101 I$
b1111110 I$
b1111111 I$
b10000000 I$
b10000001 I$
b10000010 I$
b10000011 I$
b10000100 I$
b10000101 I$
b10000110 I$
b10000111 I$
b10001000 I$
b10001001 I$
b10001010 I$
b10001011 I$
b10001100 I$
b10001101 I$
b10001110 I$
b10001111 I$
b10010000 I$
b10010001 I$
b10010010 I$
b10010011 I$
b10010100 I$
b10010101 I$
b10010110 I$
b10010111 I$
b10011000 I$
b10011001 I$
b10011010 I$
b10011011 I$
b10011100 I$
b10011101 I$
b10011110 I$
b10011111 I$
b10100000 I$
b10100001 I$
b10100010 I$
b10100011 I$
b10100100 I$
b10100101 I$
b10100110 I$
b10100111 I$
b10101000 I$
b10101001 I$
b10101010 I$
b10101011 I$
b10101100 I$
b10101101 I$
b10101110 I$
b10101111 I$
b10110000 I$
b10110001 I$
b10110010 I$
b10110011 I$
b10110100 I$
b10110101 I$
b10110110 I$
b10110111 I$
b10111000 I$
b10111001 I$
b10111010 I$
b10111011 I$
b10111100 I$
b10111101 I$
b10111110 I$
b10111111 I$
b11000000 I$
b11000001 I$
b11000010 I$
b11000011 I$
b11000100 I$
b11000101 I$
b11000110 I$
b11000111 I$
b11001000 I$
b11001001 I$
b11001010 I$
b11001011 I$
b11001100 I$
b11001101 I$
b11001110 I$
b11001111 I$
b11010000 I$
b11010001 I$
b11010010 I$
b11010011 I$
b11010100 I$
b11010101 I$
b11010110 I$
b11010111 I$
b11011000 I$
b11011001 I$
b11011010 I$
b11011011 I$
b11011100 I$
b11011101 I$
b11011110 I$
b11011111 I$
b11100000 I$
b11100001 I$
b11100010 I$
b11100011 I$
b11100100 I$
b11100101 I$
b11100110 I$
b11100111 I$
b11101000 I$
b11101001 I$
b11101010 I$
b11101011 I$
b11101100 I$
b11101101 I$
b11101110 I$
b11101111 I$
b11110000 I$
b11110001 I$
b11110010 I$
b11110011 I$
b11110100 I$
b11110101 I$
b11110110 I$
b11110111 I$
b11111000 I$
b11111001 I$
b11111010 I$
b11111011 I$
b11111100 I$
b11111101 I$
b11111110 I$
b11111111 I$
b100000000 I$
b0 K$
b1 K$
b10 K$
b11 K$
b100 K$
b101 K$
b110 K$
b111 K$
b1000 K$
b1001 K$
b1010 K$
b1011 K$
b1100 K$
b1101 K$
b1110 K$
b1111 K$
b10000 K$
b10001 K$
b10010 K$
b10011 K$
b10100 K$
b10101 K$
b10110 K$
b10111 K$
b11000 K$
b11001 K$
b11010 K$
b11011 K$
b11100 K$
b11101 K$
b11110 K$
b11111 K$
b100000 K$
b100001 K$
b100010 K$
b100011 K$
b100100 K$
b100101 K$
b100110 K$
b100111 K$
b101000 K$
b101001 K$
b101010 K$
b101011 K$
b101100 K$
b101101 K$
b101110 K$
b101111 K$
b110000 K$
b110001 K$
b110010 K$
b110011 K$
b110100 K$
b110101 K$
b110110 K$
b110111 K$
b111000 K$
b111001 K$
b111010 K$
b111011 K$
b111100 K$
b111101 K$
b111110 K$
b111111 K$
b1000000 K$
b1000001 K$
b1000010 K$
b1000011 K$
b1000100 K$
b1000101 K$
b1000110 K$
b1000111 K$
b1001000 K$
b1001001 K$
b1001010 K$
b1001011 K$
b1001100 K$
b1001101 K$
b1001110 K$
b1001111 K$
b1010000 K$
b1010001 K$
b1010010 K$
b1010011 K$
b1010100 K$
b1010101 K$
b1010110 K$
b1010111 K$
b1011000 K$
b1011001 K$
b1011010 K$
b1011011 K$
b1011100 K$
b1011101 K$
b1011110 K$
b1011111 K$
b1100000 K$
b1100001 K$
b1100010 K$
b1100011 K$
b1100100 K$
b1100101 K$
b1100110 K$
b1100111 K$
b1101000 K$
b1101001 K$
b1101010 K$
b1101011 K$
b1101100 K$
b1101101 K$
b1101110 K$
b1101111 K$
b1110000 K$
b1110001 K$
b1110010 K$
b1110011 K$
b1110100 K$
b1110101 K$
b1110110 K$
b1110111 K$
b1111000 K$
b1111001 K$
b1111010 K$
b1111011 K$
b1111100 K$
b1111101 K$
b1111110 K$
b1111111 K$
b10000000 K$
b10000001 K$
b10000010 K$
b10000011 K$
b10000100 K$
b10000101 K$
b10000110 K$
b10000111 K$
b10001000 K$
b10001001 K$
b10001010 K$
b10001011 K$
b10001100 K$
b10001101 K$
b10001110 K$
b10001111 K$
b10010000 K$
b10010001 K$
b10010010 K$
b10010011 K$
b10010100 K$
b10010101 K$
b10010110 K$
b10010111 K$
b10011000 K$
b10011001 K$
b10011010 K$
b10011011 K$
b10011100 K$
b10011101 K$
b10011110 K$
b10011111 K$
b10100000 K$
b10100001 K$
b10100010 K$
b10100011 K$
b10100100 K$
b10100101 K$
b10100110 K$
b10100111 K$
b10101000 K$
b10101001 K$
b10101010 K$
b10101011 K$
b10101100 K$
b10101101 K$
b10101110 K$
b10101111 K$
b10110000 K$
b10110001 K$
b10110010 K$
b10110011 K$
b10110100 K$
b10110101 K$
b10110110 K$
b10110111 K$
b10111000 K$
b10111001 K$
b10111010 K$
b10111011 K$
b10111100 K$
b10111101 K$
b10111110 K$
b10111111 K$
b11000000 K$
b11000001 K$
b11000010 K$
b11000011 K$
b11000100 K$
b11000101 K$
b11000110 K$
b11000111 K$
b11001000 K$
b11001001 K$
b11001010 K$
b11001011 K$
b11001100 K$
b11001101 K$
b11001110 K$
b11001111 K$
b11010000 K$
b11010001 K$
b11010010 K$
b11010011 K$
b11010100 K$
b11010101 K$
b11010110 K$
b11010111 K$
b11011000 K$
b11011001 K$
b11011010 K$
b11011011 K$
b11011100 K$
b11011101 K$
b11011110 K$
b11011111 K$
b11100000 K$
b11100001 K$
b11100010 K$
b11100011 K$
b11100100 K$
b11100101 K$
b11100110 K$
b11100111 K$
b11101000 K$
b11101001 K$
b11101010 K$
b11101011 K$
b11101100 K$
b11101101 K$
b11101110 K$
b11101111 K$
b11110000 K$
b11110001 K$
b11110010 K$
b11110011 K$
b11110100 K$
b11110101 K$
b11110110 K$
b11110111 K$
b11111000 K$
b11111001 K$
b11111010 K$
b11111011 K$
b11111100 K$
b11111101 K$
b11111110 K$
b11111111 K$
b100000000 K$
b0 \%
b1 \%
b10 \%
b11 \%
b100 \%
b101 \%
b110 \%
b111 \%
b1000 \%
b1001 \%
b1010 \%
b1011 \%
b1100 \%
b1101 \%
b1110 \%
b1111 \%
b10000 \%
b10001 \%
b10010 \%
b10011 \%
b10100 \%
b10101 \%
b10110 \%
b10111 \%
b11000 \%
b11001 \%
b11010 \%
b11011 \%
b11100 \%
b11101 \%
b11110 \%
b11111 \%
b100000 \%
b100001 \%
b100010 \%
b100011 \%
b100100 \%
b100101 \%
b100110 \%
b100111 \%
b101000 \%
b101001 \%
b101010 \%
b101011 \%
b101100 \%
b101101 \%
b101110 \%
b101111 \%
b110000 \%
b110001 \%
b110010 \%
b110011 \%
b110100 \%
b110101 \%
b110110 \%
b110111 \%
b111000 \%
b111001 \%
b111010 \%
b111011 \%
b111100 \%
b111101 \%
b111110 \%
b111111 \%
b1000000 \%
b1000001 \%
b1000010 \%
b1000011 \%
b1000100 \%
b1000101 \%
b1000110 \%
b1000111 \%
b1001000 \%
b1001001 \%
b1001010 \%
b1001011 \%
b1001100 \%
b1001101 \%
b1001110 \%
b1001111 \%
b1010000 \%
b1010001 \%
b1010010 \%
b1010011 \%
b1010100 \%
b1010101 \%
b1010110 \%
b1010111 \%
b1011000 \%
b1011001 \%
b1011010 \%
b1011011 \%
b1011100 \%
b1011101 \%
b1011110 \%
b1011111 \%
b1100000 \%
b1100001 \%
b1100010 \%
b1100011 \%
b1100100 \%
b1100101 \%
b1100110 \%
b1100111 \%
b1101000 \%
b1101001 \%
b1101010 \%
b1101011 \%
b1101100 \%
b1101101 \%
b1101110 \%
b1101111 \%
b1110000 \%
b1110001 \%
b1110010 \%
b1110011 \%
b1110100 \%
b1110101 \%
b1110110 \%
b1110111 \%
b1111000 \%
b1111001 \%
b1111010 \%
b1111011 \%
b1111100 \%
b1111101 \%
b1111110 \%
b1111111 \%
b10000000 \%
b10000001 \%
b10000010 \%
b10000011 \%
b10000100 \%
b10000101 \%
b10000110 \%
b10000111 \%
b10001000 \%
b10001001 \%
b10001010 \%
b10001011 \%
b10001100 \%
b10001101 \%
b10001110 \%
b10001111 \%
b10010000 \%
b10010001 \%
b10010010 \%
b10010011 \%
b10010100 \%
b10010101 \%
b10010110 \%
b10010111 \%
b10011000 \%
b10011001 \%
b10011010 \%
b10011011 \%
b10011100 \%
b10011101 \%
b10011110 \%
b10011111 \%
b10100000 \%
b10100001 \%
b10100010 \%
b10100011 \%
b10100100 \%
b10100101 \%
b10100110 \%
b10100111 \%
b10101000 \%
b10101001 \%
b10101010 \%
b10101011 \%
b10101100 \%
b10101101 \%
b10101110 \%
b10101111 \%
b10110000 \%
b10110001 \%
b10110010 \%
b10110011 \%
b10110100 \%
b10110101 \%
b10110110 \%
b10110111 \%
b10111000 \%
b10111001 \%
b10111010 \%
b10111011 \%
b10111100 \%
b10111101 \%
b10111110 \%
b10111111 \%
b11000000 \%
b11000001 \%
b11000010 \%
b11000011 \%
b11000100 \%
b11000101 \%
b11000110 \%
b11000111 \%
b11001000 \%
b11001001 \%
b11001010 \%
b11001011 \%
b11001100 \%
b11001101 \%
b11001110 \%
b11001111 \%
b11010000 \%
b11010001 \%
b11010010 \%
b11010011 \%
b11010100 \%
b11010101 \%
b11010110 \%
b11010111 \%
b11011000 \%
b11011001 \%
b11011010 \%
b11011011 \%
b11011100 \%
b11011101 \%
b11011110 \%
b11011111 \%
b11100000 \%
b11100001 \%
b11100010 \%
b11100011 \%
b11100100 \%
b11100101 \%
b11100110 \%
b11100111 \%
b11101000 \%
b11101001 \%
b11101010 \%
b11101011 \%
b11101100 \%
b11101101 \%
b11101110 \%
b11101111 \%
b11110000 \%
b11110001 \%
b11110010 \%
b11110011 \%
b11110100 \%
b11110101 \%
b11110110 \%
b11110111 \%
b11111000 \%
b11111001 \%
b11111010 \%
b11111011 \%
b11111100 \%
b11111101 \%
b11111110 \%
b11111111 \%
b100000000 \%
b0 _%
b1 _%
b10 _%
b11 _%
b100 _%
b101 _%
b110 _%
b111 _%
b1000 _%
b1001 _%
b1010 _%
b1011 _%
b1100 _%
b1101 _%
b1110 _%
b1111 _%
b10000 _%
b10001 _%
b10010 _%
b10011 _%
b10100 _%
b10101 _%
b10110 _%
b10111 _%
b11000 _%
b11001 _%
b11010 _%
b11011 _%
b11100 _%
b11101 _%
b11110 _%
b11111 _%
b100000 _%
b100001 _%
b100010 _%
b100011 _%
b100100 _%
b100101 _%
b100110 _%
b100111 _%
b101000 _%
b101001 _%
b101010 _%
b101011 _%
b101100 _%
b101101 _%
b101110 _%
b101111 _%
b110000 _%
b110001 _%
b110010 _%
b110011 _%
b110100 _%
b110101 _%
b110110 _%
b110111 _%
b111000 _%
b111001 _%
b111010 _%
b111011 _%
b111100 _%
b111101 _%
b111110 _%
b111111 _%
b1000000 _%
b1000001 _%
b1000010 _%
b1000011 _%
b1000100 _%
b1000101 _%
b1000110 _%
b1000111 _%
b1001000 _%
b1001001 _%
b1001010 _%
b1001011 _%
b1001100 _%
b1001101 _%
b1001110 _%
b1001111 _%
b1010000 _%
b1010001 _%
b1010010 _%
b1010011 _%
b1010100 _%
b1010101 _%
b1010110 _%
b1010111 _%
b1011000 _%
b1011001 _%
b1011010 _%
b1011011 _%
b1011100 _%
b1011101 _%
b1011110 _%
b1011111 _%
b1100000 _%
b1100001 _%
b1100010 _%
b1100011 _%
b1100100 _%
b1100101 _%
b1100110 _%
b1100111 _%
b1101000 _%
b1101001 _%
b1101010 _%
b1101011 _%
b1101100 _%
b1101101 _%
b1101110 _%
b1101111 _%
b1110000 _%
b1110001 _%
b1110010 _%
b1110011 _%
b1110100 _%
b1110101 _%
b1110110 _%
b1110111 _%
b1111000 _%
b1111001 _%
b1111010 _%
b1111011 _%
b1111100 _%
b1111101 _%
b1111110 _%
b1111111 _%
b10000000 _%
b10000001 _%
b10000010 _%
b10000011 _%
b10000100 _%
b10000101 _%
b10000110 _%
b10000111 _%
b10001000 _%
b10001001 _%
b10001010 _%
b10001011 _%
b10001100 _%
b10001101 _%
b10001110 _%
b10001111 _%
b10010000 _%
b10010001 _%
b10010010 _%
b10010011 _%
b10010100 _%
b10010101 _%
b10010110 _%
b10010111 _%
b10011000 _%
b10011001 _%
b10011010 _%
b10011011 _%
b10011100 _%
b10011101 _%
b10011110 _%
b10011111 _%
b10100000 _%
b10100001 _%
b10100010 _%
b10100011 _%
b10100100 _%
b10100101 _%
b10100110 _%
b10100111 _%
b10101000 _%
b10101001 _%
b10101010 _%
b10101011 _%
b10101100 _%
b10101101 _%
b10101110 _%
b10101111 _%
b10110000 _%
b10110001 _%
b10110010 _%
b10110011 _%
b10110100 _%
b10110101 _%
b10110110 _%
b10110111 _%
b10111000 _%
b10111001 _%
b10111010 _%
b10111011 _%
b10111100 _%
b10111101 _%
b10111110 _%
b10111111 _%
b11000000 _%
b11000001 _%
b11000010 _%
b11000011 _%
b11000100 _%
b11000101 _%
b11000110 _%
b11000111 _%
b11001000 _%
b11001001 _%
b11001010 _%
b11001011 _%
b11001100 _%
b11001101 _%
b11001110 _%
b11001111 _%
b11010000 _%
b11010001 _%
b11010010 _%
b11010011 _%
b11010100 _%
b11010101 _%
b11010110 _%
b11010111 _%
b11011000 _%
b11011001 _%
b11011010 _%
b11011011 _%
b11011100 _%
b11011101 _%
b11011110 _%
b11011111 _%
b11100000 _%
b11100001 _%
b11100010 _%
b11100011 _%
b11100100 _%
b11100101 _%
b11100110 _%
b11100111 _%
b11101000 _%
b11101001 _%
b11101010 _%
b11101011 _%
b11101100 _%
b11101101 _%
b11101110 _%
b11101111 _%
b11110000 _%
b11110001 _%
b11110010 _%
b11110011 _%
b11110100 _%
b11110101 _%
b11110110 _%
b11110111 _%
b11111000 _%
b11111001 _%
b11111010 _%
b11111011 _%
b11111100 _%
b11111101 _%
b11111110 _%
b11111111 _%
b100000000 _%
b0 b%
b1 b%
b10 b%
b11 b%
b100 b%
b101 b%
b110 b%
b111 b%
b1000 b%
b1001 b%
b1010 b%
b1011 b%
b1100 b%
b1101 b%
b1110 b%
b1111 b%
b10000 b%
b10001 b%
b10010 b%
b10011 b%
b10100 b%
b10101 b%
b10110 b%
b10111 b%
b11000 b%
b11001 b%
b11010 b%
b11011 b%
b11100 b%
b11101 b%
b11110 b%
b11111 b%
b100000 b%
b100001 b%
b100010 b%
b100011 b%
b100100 b%
b100101 b%
b100110 b%
b100111 b%
b101000 b%
b101001 b%
b101010 b%
b101011 b%
b101100 b%
b101101 b%
b101110 b%
b101111 b%
b110000 b%
b110001 b%
b110010 b%
b110011 b%
b110100 b%
b110101 b%
b110110 b%
b110111 b%
b111000 b%
b111001 b%
b111010 b%
b111011 b%
b111100 b%
b111101 b%
b111110 b%
b111111 b%
b1000000 b%
b1000001 b%
b1000010 b%
b1000011 b%
b1000100 b%
b1000101 b%
b1000110 b%
b1000111 b%
b1001000 b%
b1001001 b%
b1001010 b%
b1001011 b%
b1001100 b%
b1001101 b%
b1001110 b%
b1001111 b%
b1010000 b%
b1010001 b%
b1010010 b%
b1010011 b%
b1010100 b%
b1010101 b%
b1010110 b%
b1010111 b%
b1011000 b%
b1011001 b%
b1011010 b%
b1011011 b%
b1011100 b%
b1011101 b%
b1011110 b%
b1011111 b%
b1100000 b%
b1100001 b%
b1100010 b%
b1100011 b%
b1100100 b%
b1100101 b%
b1100110 b%
b1100111 b%
b1101000 b%
b1101001 b%
b1101010 b%
b1101011 b%
b1101100 b%
b1101101 b%
b1101110 b%
b1101111 b%
b1110000 b%
b1110001 b%
b1110010 b%
b1110011 b%
b1110100 b%
b1110101 b%
b1110110 b%
b1110111 b%
b1111000 b%
b1111001 b%
b1111010 b%
b1111011 b%
b1111100 b%
b1111101 b%
b1111110 b%
b1111111 b%
b10000000 b%
b10000001 b%
b10000010 b%
b10000011 b%
b10000100 b%
b10000101 b%
b10000110 b%
b10000111 b%
b10001000 b%
b10001001 b%
b10001010 b%
b10001011 b%
b10001100 b%
b10001101 b%
b10001110 b%
b10001111 b%
b10010000 b%
b10010001 b%
b10010010 b%
b10010011 b%
b10010100 b%
b10010101 b%
b10010110 b%
b10010111 b%
b10011000 b%
b10011001 b%
b10011010 b%
b10011011 b%
b10011100 b%
b10011101 b%
b10011110 b%
b10011111 b%
b10100000 b%
b10100001 b%
b10100010 b%
b10100011 b%
b10100100 b%
b10100101 b%
b10100110 b%
b10100111 b%
b10101000 b%
b10101001 b%
b10101010 b%
b10101011 b%
b10101100 b%
b10101101 b%
b10101110 b%
b10101111 b%
b10110000 b%
b10110001 b%
b10110010 b%
b10110011 b%
b10110100 b%
b10110101 b%
b10110110 b%
b10110111 b%
b10111000 b%
b10111001 b%
b10111010 b%
b10111011 b%
b10111100 b%
b10111101 b%
b10111110 b%
b10111111 b%
b11000000 b%
b11000001 b%
b11000010 b%
b11000011 b%
b11000100 b%
b11000101 b%
b11000110 b%
b11000111 b%
b11001000 b%
b11001001 b%
b11001010 b%
b11001011 b%
b11001100 b%
b11001101 b%
b11001110 b%
b11001111 b%
b11010000 b%
b11010001 b%
b11010010 b%
b11010011 b%
b11010100 b%
b11010101 b%
b11010110 b%
b11010111 b%
b11011000 b%
b11011001 b%
b11011010 b%
b11011011 b%
b11011100 b%
b11011101 b%
b11011110 b%
b11011111 b%
b11100000 b%
b11100001 b%
b11100010 b%
b11100011 b%
b11100100 b%
b11100101 b%
b11100110 b%
b11100111 b%
b11101000 b%
b11101001 b%
b11101010 b%
b11101011 b%
b11101100 b%
b11101101 b%
b11101110 b%
b11101111 b%
b11110000 b%
b11110001 b%
b11110010 b%
b11110011 b%
b11110100 b%
b11110101 b%
b11110110 b%
b11110111 b%
b11111000 b%
b11111001 b%
b11111010 b%
b11111011 b%
b11111100 b%
b11111101 b%
b11111110 b%
b11111111 b%
b100000000 b%
b0 e%
b1 e%
b10 e%
b11 e%
b100 e%
b101 e%
b110 e%
b111 e%
b1000 e%
b1001 e%
b1010 e%
b1011 e%
b1100 e%
b1101 e%
b1110 e%
b1111 e%
b10000 e%
b10001 e%
b10010 e%
b10011 e%
b10100 e%
b10101 e%
b10110 e%
b10111 e%
b11000 e%
b11001 e%
b11010 e%
b11011 e%
b11100 e%
b11101 e%
b11110 e%
b11111 e%
b100000 e%
b100001 e%
b100010 e%
b100011 e%
b100100 e%
b100101 e%
b100110 e%
b100111 e%
b101000 e%
b101001 e%
b101010 e%
b101011 e%
b101100 e%
b101101 e%
b101110 e%
b101111 e%
b110000 e%
b110001 e%
b110010 e%
b110011 e%
b110100 e%
b110101 e%
b110110 e%
b110111 e%
b111000 e%
b111001 e%
b111010 e%
b111011 e%
b111100 e%
b111101 e%
b111110 e%
b111111 e%
b1000000 e%
b1000001 e%
b1000010 e%
b1000011 e%
b1000100 e%
b1000101 e%
b1000110 e%
b1000111 e%
b1001000 e%
b1001001 e%
b1001010 e%
b1001011 e%
b1001100 e%
b1001101 e%
b1001110 e%
b1001111 e%
b1010000 e%
b1010001 e%
b1010010 e%
b1010011 e%
b1010100 e%
b1010101 e%
b1010110 e%
b1010111 e%
b1011000 e%
b1011001 e%
b1011010 e%
b1011011 e%
b1011100 e%
b1011101 e%
b1011110 e%
b1011111 e%
b1100000 e%
b1100001 e%
b1100010 e%
b1100011 e%
b1100100 e%
b1100101 e%
b1100110 e%
b1100111 e%
b1101000 e%
b1101001 e%
b1101010 e%
b1101011 e%
b1101100 e%
b1101101 e%
b1101110 e%
b1101111 e%
b1110000 e%
b1110001 e%
b1110010 e%
b1110011 e%
b1110100 e%
b1110101 e%
b1110110 e%
b1110111 e%
b1111000 e%
b1111001 e%
b1111010 e%
b1111011 e%
b1111100 e%
b1111101 e%
b1111110 e%
b1111111 e%
b10000000 e%
b10000001 e%
b10000010 e%
b10000011 e%
b10000100 e%
b10000101 e%
b10000110 e%
b10000111 e%
b10001000 e%
b10001001 e%
b10001010 e%
b10001011 e%
b10001100 e%
b10001101 e%
b10001110 e%
b10001111 e%
b10010000 e%
b10010001 e%
b10010010 e%
b10010011 e%
b10010100 e%
b10010101 e%
b10010110 e%
b10010111 e%
b10011000 e%
b10011001 e%
b10011010 e%
b10011011 e%
b10011100 e%
b10011101 e%
b10011110 e%
b10011111 e%
b10100000 e%
b10100001 e%
b10100010 e%
b10100011 e%
b10100100 e%
b10100101 e%
b10100110 e%
b10100111 e%
b10101000 e%
b10101001 e%
b10101010 e%
b10101011 e%
b10101100 e%
b10101101 e%
b10101110 e%
b10101111 e%
b10110000 e%
b10110001 e%
b10110010 e%
b10110011 e%
b10110100 e%
b10110101 e%
b10110110 e%
b10110111 e%
b10111000 e%
b10111001 e%
b10111010 e%
b10111011 e%
b10111100 e%
b10111101 e%
b10111110 e%
b10111111 e%
b11000000 e%
b11000001 e%
b11000010 e%
b11000011 e%
b11000100 e%
b11000101 e%
b11000110 e%
b11000111 e%
b11001000 e%
b11001001 e%
b11001010 e%
b11001011 e%
b11001100 e%
b11001101 e%
b11001110 e%
b11001111 e%
b11010000 e%
b11010001 e%
b11010010 e%
b11010011 e%
b11010100 e%
b11010101 e%
b11010110 e%
b11010111 e%
b11011000 e%
b11011001 e%
b11011010 e%
b11011011 e%
b11011100 e%
b11011101 e%
b11011110 e%
b11011111 e%
b11100000 e%
b11100001 e%
b11100010 e%
b11100011 e%
b11100100 e%
b11100101 e%
b11100110 e%
b11100111 e%
b11101000 e%
b11101001 e%
b11101010 e%
b11101011 e%
b11101100 e%
b11101101 e%
b11101110 e%
b11101111 e%
b11110000 e%
b11110001 e%
b11110010 e%
b11110011 e%
b11110100 e%
b11110101 e%
b11110110 e%
b11110111 e%
b11111000 e%
b11111001 e%
b11111010 e%
b11111011 e%
b11111100 e%
b11111101 e%
b11111110 e%
b11111111 e%
b100000000 e%
b0 h%
b1 h%
b10 h%
b11 h%
b100 h%
b101 h%
b110 h%
b111 h%
b1000 h%
b1001 h%
b1010 h%
b1011 h%
b1100 h%
b1101 h%
b1110 h%
b1111 h%
b10000 h%
b10001 h%
b10010 h%
b10011 h%
b10100 h%
b10101 h%
b10110 h%
b10111 h%
b11000 h%
b11001 h%
b11010 h%
b11011 h%
b11100 h%
b11101 h%
b11110 h%
b11111 h%
b100000 h%
b100001 h%
b100010 h%
b100011 h%
b100100 h%
b100101 h%
b100110 h%
b100111 h%
b101000 h%
b101001 h%
b101010 h%
b101011 h%
b101100 h%
b101101 h%
b101110 h%
b101111 h%
b110000 h%
b110001 h%
b110010 h%
b110011 h%
b110100 h%
b110101 h%
b110110 h%
b110111 h%
b111000 h%
b111001 h%
b111010 h%
b111011 h%
b111100 h%
b111101 h%
b111110 h%
b111111 h%
b1000000 h%
b1000001 h%
b1000010 h%
b1000011 h%
b1000100 h%
b1000101 h%
b1000110 h%
b1000111 h%
b1001000 h%
b1001001 h%
b1001010 h%
b1001011 h%
b1001100 h%
b1001101 h%
b1001110 h%
b1001111 h%
b1010000 h%
b1010001 h%
b1010010 h%
b1010011 h%
b1010100 h%
b1010101 h%
b1010110 h%
b1010111 h%
b1011000 h%
b1011001 h%
b1011010 h%
b1011011 h%
b1011100 h%
b1011101 h%
b1011110 h%
b1011111 h%
b1100000 h%
b1100001 h%
b1100010 h%
b1100011 h%
b1100100 h%
b1100101 h%
b1100110 h%
b1100111 h%
b1101000 h%
b1101001 h%
b1101010 h%
b1101011 h%
b1101100 h%
b1101101 h%
b1101110 h%
b1101111 h%
b1110000 h%
b1110001 h%
b1110010 h%
b1110011 h%
b1110100 h%
b1110101 h%
b1110110 h%
b1110111 h%
b1111000 h%
b1111001 h%
b1111010 h%
b1111011 h%
b1111100 h%
b1111101 h%
b1111110 h%
b1111111 h%
b10000000 h%
b10000001 h%
b10000010 h%
b10000011 h%
b10000100 h%
b10000101 h%
b10000110 h%
b10000111 h%
b10001000 h%
b10001001 h%
b10001010 h%
b10001011 h%
b10001100 h%
b10001101 h%
b10001110 h%
b10001111 h%
b10010000 h%
b10010001 h%
b10010010 h%
b10010011 h%
b10010100 h%
b10010101 h%
b10010110 h%
b10010111 h%
b10011000 h%
b10011001 h%
b10011010 h%
b10011011 h%
b10011100 h%
b10011101 h%
b10011110 h%
b10011111 h%
b10100000 h%
b10100001 h%
b10100010 h%
b10100011 h%
b10100100 h%
b10100101 h%
b10100110 h%
b10100111 h%
b10101000 h%
b10101001 h%
b10101010 h%
b10101011 h%
b10101100 h%
b10101101 h%
b10101110 h%
b10101111 h%
b10110000 h%
b10110001 h%
b10110010 h%
b10110011 h%
b10110100 h%
b10110101 h%
b10110110 h%
b10110111 h%
b10111000 h%
b10111001 h%
b10111010 h%
b10111011 h%
b10111100 h%
b10111101 h%
b10111110 h%
b10111111 h%
b11000000 h%
b11000001 h%
b11000010 h%
b11000011 h%
b11000100 h%
b11000101 h%
b11000110 h%
b11000111 h%
b11001000 h%
b11001001 h%
b11001010 h%
b11001011 h%
b11001100 h%
b11001101 h%
b11001110 h%
b11001111 h%
b11010000 h%
b11010001 h%
b11010010 h%
b11010011 h%
b11010100 h%
b11010101 h%
b11010110 h%
b11010111 h%
b11011000 h%
b11011001 h%
b11011010 h%
b11011011 h%
b11011100 h%
b11011101 h%
b11011110 h%
b11011111 h%
b11100000 h%
b11100001 h%
b11100010 h%
b11100011 h%
b11100100 h%
b11100101 h%
b11100110 h%
b11100111 h%
b11101000 h%
b11101001 h%
b11101010 h%
b11101011 h%
b11101100 h%
b11101101 h%
b11101110 h%
b11101111 h%
b11110000 h%
b11110001 h%
b11110010 h%
b11110011 h%
b11110100 h%
b11110101 h%
b11110110 h%
b11110111 h%
b11111000 h%
b11111001 h%
b11111010 h%
b11111011 h%
b11111100 h%
b11111101 h%
b11111110 h%
b11111111 h%
b100000000 h%
b0 k%
b1 k%
b10 k%
b11 k%
b100 k%
b101 k%
b110 k%
b111 k%
b1000 k%
b1001 k%
b1010 k%
b1011 k%
b1100 k%
b1101 k%
b1110 k%
b1111 k%
b10000 k%
b10001 k%
b10010 k%
b10011 k%
b10100 k%
b10101 k%
b10110 k%
b10111 k%
b11000 k%
b11001 k%
b11010 k%
b11011 k%
b11100 k%
b11101 k%
b11110 k%
b11111 k%
b100000 k%
b100001 k%
b100010 k%
b100011 k%
b100100 k%
b100101 k%
b100110 k%
b100111 k%
b101000 k%
b101001 k%
b101010 k%
b101011 k%
b101100 k%
b101101 k%
b101110 k%
b101111 k%
b110000 k%
b110001 k%
b110010 k%
b110011 k%
b110100 k%
b110101 k%
b110110 k%
b110111 k%
b111000 k%
b111001 k%
b111010 k%
b111011 k%
b111100 k%
b111101 k%
b111110 k%
b111111 k%
b1000000 k%
b1000001 k%
b1000010 k%
b1000011 k%
b1000100 k%
b1000101 k%
b1000110 k%
b1000111 k%
b1001000 k%
b1001001 k%
b1001010 k%
b1001011 k%
b1001100 k%
b1001101 k%
b1001110 k%
b1001111 k%
b1010000 k%
b1010001 k%
b1010010 k%
b1010011 k%
b1010100 k%
b1010101 k%
b1010110 k%
b1010111 k%
b1011000 k%
b1011001 k%
b1011010 k%
b1011011 k%
b1011100 k%
b1011101 k%
b1011110 k%
b1011111 k%
b1100000 k%
b1100001 k%
b1100010 k%
b1100011 k%
b1100100 k%
b1100101 k%
b1100110 k%
b1100111 k%
b1101000 k%
b1101001 k%
b1101010 k%
b1101011 k%
b1101100 k%
b1101101 k%
b1101110 k%
b1101111 k%
b1110000 k%
b1110001 k%
b1110010 k%
b1110011 k%
b1110100 k%
b1110101 k%
b1110110 k%
b1110111 k%
b1111000 k%
b1111001 k%
b1111010 k%
b1111011 k%
b1111100 k%
b1111101 k%
b1111110 k%
b1111111 k%
b10000000 k%
b10000001 k%
b10000010 k%
b10000011 k%
b10000100 k%
b10000101 k%
b10000110 k%
b10000111 k%
b10001000 k%
b10001001 k%
b10001010 k%
b10001011 k%
b10001100 k%
b10001101 k%
b10001110 k%
b10001111 k%
b10010000 k%
b10010001 k%
b10010010 k%
b10010011 k%
b10010100 k%
b10010101 k%
b10010110 k%
b10010111 k%
b10011000 k%
b10011001 k%
b10011010 k%
b10011011 k%
b10011100 k%
b10011101 k%
b10011110 k%
b10011111 k%
b10100000 k%
b10100001 k%
b10100010 k%
b10100011 k%
b10100100 k%
b10100101 k%
b10100110 k%
b10100111 k%
b10101000 k%
b10101001 k%
b10101010 k%
b10101011 k%
b10101100 k%
b10101101 k%
b10101110 k%
b10101111 k%
b10110000 k%
b10110001 k%
b10110010 k%
b10110011 k%
b10110100 k%
b10110101 k%
b10110110 k%
b10110111 k%
b10111000 k%
b10111001 k%
b10111010 k%
b10111011 k%
b10111100 k%
b10111101 k%
b10111110 k%
b10111111 k%
b11000000 k%
b11000001 k%
b11000010 k%
b11000011 k%
b11000100 k%
b11000101 k%
b11000110 k%
b11000111 k%
b11001000 k%
b11001001 k%
b11001010 k%
b11001011 k%
b11001100 k%
b11001101 k%
b11001110 k%
b11001111 k%
b11010000 k%
b11010001 k%
b11010010 k%
b11010011 k%
b11010100 k%
b11010101 k%
b11010110 k%
b11010111 k%
b11011000 k%
b11011001 k%
b11011010 k%
b11011011 k%
b11011100 k%
b11011101 k%
b11011110 k%
b11011111 k%
b11100000 k%
b11100001 k%
b11100010 k%
b11100011 k%
b11100100 k%
b11100101 k%
b11100110 k%
b11100111 k%
b11101000 k%
b11101001 k%
b11101010 k%
b11101011 k%
b11101100 k%
b11101101 k%
b11101110 k%
b11101111 k%
b11110000 k%
b11110001 k%
b11110010 k%
b11110011 k%
b11110100 k%
b11110101 k%
b11110110 k%
b11110111 k%
b11111000 k%
b11111001 k%
b11111010 k%
b11111011 k%
b11111100 k%
b11111101 k%
b11111110 k%
b11111111 k%
b100000000 k%
b0 m%
b1 m%
b10 m%
b11 m%
b100 m%
b101 m%
b110 m%
b111 m%
b1000 m%
b1001 m%
b1010 m%
b1011 m%
b1100 m%
b1101 m%
b1110 m%
b1111 m%
b10000 m%
b10001 m%
b10010 m%
b10011 m%
b10100 m%
b10101 m%
b10110 m%
b10111 m%
b11000 m%
b11001 m%
b11010 m%
b11011 m%
b11100 m%
b11101 m%
b11110 m%
b11111 m%
b100000 m%
b100001 m%
b100010 m%
b100011 m%
b100100 m%
b100101 m%
b100110 m%
b100111 m%
b101000 m%
b101001 m%
b101010 m%
b101011 m%
b101100 m%
b101101 m%
b101110 m%
b101111 m%
b110000 m%
b110001 m%
b110010 m%
b110011 m%
b110100 m%
b110101 m%
b110110 m%
b110111 m%
b111000 m%
b111001 m%
b111010 m%
b111011 m%
b111100 m%
b111101 m%
b111110 m%
b111111 m%
b1000000 m%
b1000001 m%
b1000010 m%
b1000011 m%
b1000100 m%
b1000101 m%
b1000110 m%
b1000111 m%
b1001000 m%
b1001001 m%
b1001010 m%
b1001011 m%
b1001100 m%
b1001101 m%
b1001110 m%
b1001111 m%
b1010000 m%
b1010001 m%
b1010010 m%
b1010011 m%
b1010100 m%
b1010101 m%
b1010110 m%
b1010111 m%
b1011000 m%
b1011001 m%
b1011010 m%
b1011011 m%
b1011100 m%
b1011101 m%
b1011110 m%
b1011111 m%
b1100000 m%
b1100001 m%
b1100010 m%
b1100011 m%
b1100100 m%
b1100101 m%
b1100110 m%
b1100111 m%
b1101000 m%
b1101001 m%
b1101010 m%
b1101011 m%
b1101100 m%
b1101101 m%
b1101110 m%
b1101111 m%
b1110000 m%
b1110001 m%
b1110010 m%
b1110011 m%
b1110100 m%
b1110101 m%
b1110110 m%
b1110111 m%
b1111000 m%
b1111001 m%
b1111010 m%
b1111011 m%
b1111100 m%
b1111101 m%
b1111110 m%
b1111111 m%
b10000000 m%
b10000001 m%
b10000010 m%
b10000011 m%
b10000100 m%
b10000101 m%
b10000110 m%
b10000111 m%
b10001000 m%
b10001001 m%
b10001010 m%
b10001011 m%
b10001100 m%
b10001101 m%
b10001110 m%
b10001111 m%
b10010000 m%
b10010001 m%
b10010010 m%
b10010011 m%
b10010100 m%
b10010101 m%
b10010110 m%
b10010111 m%
b10011000 m%
b10011001 m%
b10011010 m%
b10011011 m%
b10011100 m%
b10011101 m%
b10011110 m%
b10011111 m%
b10100000 m%
b10100001 m%
b10100010 m%
b10100011 m%
b10100100 m%
b10100101 m%
b10100110 m%
b10100111 m%
b10101000 m%
b10101001 m%
b10101010 m%
b10101011 m%
b10101100 m%
b10101101 m%
b10101110 m%
b10101111 m%
b10110000 m%
b10110001 m%
b10110010 m%
b10110011 m%
b10110100 m%
b10110101 m%
b10110110 m%
b10110111 m%
b10111000 m%
b10111001 m%
b10111010 m%
b10111011 m%
b10111100 m%
b10111101 m%
b10111110 m%
b10111111 m%
b11000000 m%
b11000001 m%
b11000010 m%
b11000011 m%
b11000100 m%
b11000101 m%
b11000110 m%
b11000111 m%
b11001000 m%
b11001001 m%
b11001010 m%
b11001011 m%
b11001100 m%
b11001101 m%
b11001110 m%
b11001111 m%
b11010000 m%
b11010001 m%
b11010010 m%
b11010011 m%
b11010100 m%
b11010101 m%
b11010110 m%
b11010111 m%
b11011000 m%
b11011001 m%
b11011010 m%
b11011011 m%
b11011100 m%
b11011101 m%
b11011110 m%
b11011111 m%
b11100000 m%
b11100001 m%
b11100010 m%
b11100011 m%
b11100100 m%
b11100101 m%
b11100110 m%
b11100111 m%
b11101000 m%
b11101001 m%
b11101010 m%
b11101011 m%
b11101100 m%
b11101101 m%
b11101110 m%
b11101111 m%
b11110000 m%
b11110001 m%
b11110010 m%
b11110011 m%
b11110100 m%
b11110101 m%
b11110110 m%
b11110111 m%
b11111000 m%
b11111001 m%
b11111010 m%
b11111011 m%
b11111100 m%
b11111101 m%
b11111110 m%
b11111111 m%
b100000000 m%
#150
0!!
08
06-
0}
#200
1!!
b11 #!
18
16-
1}
b0 :$
b1 :$
b10 :$
b11 :$
b100 :$
b101 :$
b110 :$
b111 :$
b1000 :$
b1001 :$
b1010 :$
b1011 :$
b1100 :$
b1101 :$
b1110 :$
b1111 :$
b10000 :$
b10001 :$
b10010 :$
b10011 :$
b10100 :$
b10101 :$
b10110 :$
b10111 :$
b11000 :$
b11001 :$
b11010 :$
b11011 :$
b11100 :$
b11101 :$
b11110 :$
b11111 :$
b100000 :$
b100001 :$
b100010 :$
b100011 :$
b100100 :$
b100101 :$
b100110 :$
b100111 :$
b101000 :$
b101001 :$
b101010 :$
b101011 :$
b101100 :$
b101101 :$
b101110 :$
b101111 :$
b110000 :$
b110001 :$
b110010 :$
b110011 :$
b110100 :$
b110101 :$
b110110 :$
b110111 :$
b111000 :$
b111001 :$
b111010 :$
b111011 :$
b111100 :$
b111101 :$
b111110 :$
b111111 :$
b1000000 :$
b1000001 :$
b1000010 :$
b1000011 :$
b1000100 :$
b1000101 :$
b1000110 :$
b1000111 :$
b1001000 :$
b1001001 :$
b1001010 :$
b1001011 :$
b1001100 :$
b1001101 :$
b1001110 :$
b1001111 :$
b1010000 :$
b1010001 :$
b1010010 :$
b1010011 :$
b1010100 :$
b1010101 :$
b1010110 :$
b1010111 :$
b1011000 :$
b1011001 :$
b1011010 :$
b1011011 :$
b1011100 :$
b1011101 :$
b1011110 :$
b1011111 :$
b1100000 :$
b1100001 :$
b1100010 :$
b1100011 :$
b1100100 :$
b1100101 :$
b1100110 :$
b1100111 :$
b1101000 :$
b1101001 :$
b1101010 :$
b1101011 :$
b1101100 :$
b1101101 :$
b1101110 :$
b1101111 :$
b1110000 :$
b1110001 :$
b1110010 :$
b1110011 :$
b1110100 :$
b1110101 :$
b1110110 :$
b1110111 :$
b1111000 :$
b1111001 :$
b1111010 :$
b1111011 :$
b1111100 :$
b1111101 :$
b1111110 :$
b1111111 :$
b10000000 :$
b10000001 :$
b10000010 :$
b10000011 :$
b10000100 :$
b10000101 :$
b10000110 :$
b10000111 :$
b10001000 :$
b10001001 :$
b10001010 :$
b10001011 :$
b10001100 :$
b10001101 :$
b10001110 :$
b10001111 :$
b10010000 :$
b10010001 :$
b10010010 :$
b10010011 :$
b10010100 :$
b10010101 :$
b10010110 :$
b10010111 :$
b10011000 :$
b10011001 :$
b10011010 :$
b10011011 :$
b10011100 :$
b10011101 :$
b10011110 :$
b10011111 :$
b10100000 :$
b10100001 :$
b10100010 :$
b10100011 :$
b10100100 :$
b10100101 :$
b10100110 :$
b10100111 :$
b10101000 :$
b10101001 :$
b10101010 :$
b10101011 :$
b10101100 :$
b10101101 :$
b10101110 :$
b10101111 :$
b10110000 :$
b10110001 :$
b10110010 :$
b10110011 :$
b10110100 :$
b10110101 :$
b10110110 :$
b10110111 :$
b10111000 :$
b10111001 :$
b10111010 :$
b10111011 :$
b10111100 :$
b10111101 :$
b10111110 :$
b10111111 :$
b11000000 :$
b11000001 :$
b11000010 :$
b11000011 :$
b11000100 :$
b11000101 :$
b11000110 :$
b11000111 :$
b11001000 :$
b11001001 :$
b11001010 :$
b11001011 :$
b11001100 :$
b11001101 :$
b11001110 :$
b11001111 :$
b11010000 :$
b11010001 :$
b11010010 :$
b11010011 :$
b11010100 :$
b11010101 :$
b11010110 :$
b11010111 :$
b11011000 :$
b11011001 :$
b11011010 :$
b11011011 :$
b11011100 :$
b11011101 :$
b11011110 :$
b11011111 :$
b11100000 :$
b11100001 :$
b11100010 :$
b11100011 :$
b11100100 :$
b11100101 :$
b11100110 :$
b11100111 :$
b11101000 :$
b11101001 :$
b11101010 :$
b11101011 :$
b11101100 :$
b11101101 :$
b11101110 :$
b11101111 :$
b11110000 :$
b11110001 :$
b11110010 :$
b11110011 :$
b11110100 :$
b11110101 :$
b11110110 :$
b11110111 :$
b11111000 :$
b11111001 :$
b11111010 :$
b11111011 :$
b11111100 :$
b11111101 :$
b11111110 :$
b11111111 :$
b100000000 :$
b0 =$
b1 =$
b10 =$
b11 =$
b100 =$
b101 =$
b110 =$
b111 =$
b1000 =$
b1001 =$
b1010 =$
b1011 =$
b1100 =$
b1101 =$
b1110 =$
b1111 =$
b10000 =$
b10001 =$
b10010 =$
b10011 =$
b10100 =$
b10101 =$
b10110 =$
b10111 =$
b11000 =$
b11001 =$
b11010 =$
b11011 =$
b11100 =$
b11101 =$
b11110 =$
b11111 =$
b100000 =$
b100001 =$
b100010 =$
b100011 =$
b100100 =$
b100101 =$
b100110 =$
b100111 =$
b101000 =$
b101001 =$
b101010 =$
b101011 =$
b101100 =$
b101101 =$
b101110 =$
b101111 =$
b110000 =$
b110001 =$
b110010 =$
b110011 =$
b110100 =$
b110101 =$
b110110 =$
b110111 =$
b111000 =$
b111001 =$
b111010 =$
b111011 =$
b111100 =$
b111101 =$
b111110 =$
b111111 =$
b1000000 =$
b1000001 =$
b1000010 =$
b1000011 =$
b1000100 =$
b1000101 =$
b1000110 =$
b1000111 =$
b1001000 =$
b1001001 =$
b1001010 =$
b1001011 =$
b1001100 =$
b1001101 =$
b1001110 =$
b1001111 =$
b1010000 =$
b1010001 =$
b1010010 =$
b1010011 =$
b1010100 =$
b1010101 =$
b1010110 =$
b1010111 =$
b1011000 =$
b1011001 =$
b1011010 =$
b1011011 =$
b1011100 =$
b1011101 =$
b1011110 =$
b1011111 =$
b1100000 =$
b1100001 =$
b1100010 =$
b1100011 =$
b1100100 =$
b1100101 =$
b1100110 =$
b1100111 =$
b1101000 =$
b1101001 =$
b1101010 =$
b1101011 =$
b1101100 =$
b1101101 =$
b1101110 =$
b1101111 =$
b1110000 =$
b1110001 =$
b1110010 =$
b1110011 =$
b1110100 =$
b1110101 =$
b1110110 =$
b1110111 =$
b1111000 =$
b1111001 =$
b1111010 =$
b1111011 =$
b1111100 =$
b1111101 =$
b1111110 =$
b1111111 =$
b10000000 =$
b10000001 =$
b10000010 =$
b10000011 =$
b10000100 =$
b10000101 =$
b10000110 =$
b10000111 =$
b10001000 =$
b10001001 =$
b10001010 =$
b10001011 =$
b10001100 =$
b10001101 =$
b10001110 =$
b10001111 =$
b10010000 =$
b10010001 =$
b10010010 =$
b10010011 =$
b10010100 =$
b10010101 =$
b10010110 =$
b10010111 =$
b10011000 =$
b10011001 =$
b10011010 =$
b10011011 =$
b10011100 =$
b10011101 =$
b10011110 =$
b10011111 =$
b10100000 =$
b10100001 =$
b10100010 =$
b10100011 =$
b10100100 =$
b10100101 =$
b10100110 =$
b10100111 =$
b10101000 =$
b10101001 =$
b10101010 =$
b10101011 =$
b10101100 =$
b10101101 =$
b10101110 =$
b10101111 =$
b10110000 =$
b10110001 =$
b10110010 =$
b10110011 =$
b10110100 =$
b10110101 =$
b10110110 =$
b10110111 =$
b10111000 =$
b10111001 =$
b10111010 =$
b10111011 =$
b10111100 =$
b10111101 =$
b10111110 =$
b10111111 =$
b11000000 =$
b11000001 =$
b11000010 =$
b11000011 =$
b11000100 =$
b11000101 =$
b11000110 =$
b11000111 =$
b11001000 =$
b11001001 =$
b11001010 =$
b11001011 =$
b11001100 =$
b11001101 =$
b11001110 =$
b11001111 =$
b11010000 =$
b11010001 =$
b11010010 =$
b11010011 =$
b11010100 =$
b11010101 =$
b11010110 =$
b11010111 =$
b11011000 =$
b11011001 =$
b11011010 =$
b11011011 =$
b11011100 =$
b11011101 =$
b11011110 =$
b11011111 =$
b11100000 =$
b11100001 =$
b11100010 =$
b11100011 =$
b11100100 =$
b11100101 =$
b11100110 =$
b11100111 =$
b11101000 =$
b11101001 =$
b11101010 =$
b11101011 =$
b11101100 =$
b11101101 =$
b11101110 =$
b11101111 =$
b11110000 =$
b11110001 =$
b11110010 =$
b11110011 =$
b11110100 =$
b11110101 =$
b11110110 =$
b11110111 =$
b11111000 =$
b11111001 =$
b11111010 =$
b11111011 =$
b11111100 =$
b11111101 =$
b11111110 =$
b11111111 =$
b100000000 =$
b0 @$
b1 @$
b10 @$
b11 @$
b100 @$
b101 @$
b110 @$
b111 @$
b1000 @$
b1001 @$
b1010 @$
b1011 @$
b1100 @$
b1101 @$
b1110 @$
b1111 @$
b10000 @$
b10001 @$
b10010 @$
b10011 @$
b10100 @$
b10101 @$
b10110 @$
b10111 @$
b11000 @$
b11001 @$
b11010 @$
b11011 @$
b11100 @$
b11101 @$
b11110 @$
b11111 @$
b100000 @$
b100001 @$
b100010 @$
b100011 @$
b100100 @$
b100101 @$
b100110 @$
b100111 @$
b101000 @$
b101001 @$
b101010 @$
b101011 @$
b101100 @$
b101101 @$
b101110 @$
b101111 @$
b110000 @$
b110001 @$
b110010 @$
b110011 @$
b110100 @$
b110101 @$
b110110 @$
b110111 @$
b111000 @$
b111001 @$
b111010 @$
b111011 @$
b111100 @$
b111101 @$
b111110 @$
b111111 @$
b1000000 @$
b1000001 @$
b1000010 @$
b1000011 @$
b1000100 @$
b1000101 @$
b1000110 @$
b1000111 @$
b1001000 @$
b1001001 @$
b1001010 @$
b1001011 @$
b1001100 @$
b1001101 @$
b1001110 @$
b1001111 @$
b1010000 @$
b1010001 @$
b1010010 @$
b1010011 @$
b1010100 @$
b1010101 @$
b1010110 @$
b1010111 @$
b1011000 @$
b1011001 @$
b1011010 @$
b1011011 @$
b1011100 @$
b1011101 @$
b1011110 @$
b1011111 @$
b1100000 @$
b1100001 @$
b1100010 @$
b1100011 @$
b1100100 @$
b1100101 @$
b1100110 @$
b1100111 @$
b1101000 @$
b1101001 @$
b1101010 @$
b1101011 @$
b1101100 @$
b1101101 @$
b1101110 @$
b1101111 @$
b1110000 @$
b1110001 @$
b1110010 @$
b1110011 @$
b1110100 @$
b1110101 @$
b1110110 @$
b1110111 @$
b1111000 @$
b1111001 @$
b1111010 @$
b1111011 @$
b1111100 @$
b1111101 @$
b1111110 @$
b1111111 @$
b10000000 @$
b10000001 @$
b10000010 @$
b10000011 @$
b10000100 @$
b10000101 @$
b10000110 @$
b10000111 @$
b10001000 @$
b10001001 @$
b10001010 @$
b10001011 @$
b10001100 @$
b10001101 @$
b10001110 @$
b10001111 @$
b10010000 @$
b10010001 @$
b10010010 @$
b10010011 @$
b10010100 @$
b10010101 @$
b10010110 @$
b10010111 @$
b10011000 @$
b10011001 @$
b10011010 @$
b10011011 @$
b10011100 @$
b10011101 @$
b10011110 @$
b10011111 @$
b10100000 @$
b10100001 @$
b10100010 @$
b10100011 @$
b10100100 @$
b10100101 @$
b10100110 @$
b10100111 @$
b10101000 @$
b10101001 @$
b10101010 @$
b10101011 @$
b10101100 @$
b10101101 @$
b10101110 @$
b10101111 @$
b10110000 @$
b10110001 @$
b10110010 @$
b10110011 @$
b10110100 @$
b10110101 @$
b10110110 @$
b10110111 @$
b10111000 @$
b10111001 @$
b10111010 @$
b10111011 @$
b10111100 @$
b10111101 @$
b10111110 @$
b10111111 @$
b11000000 @$
b11000001 @$
b11000010 @$
b11000011 @$
b11000100 @$
b11000101 @$
b11000110 @$
b11000111 @$
b11001000 @$
b11001001 @$
b11001010 @$
b11001011 @$
b11001100 @$
b11001101 @$
b11001110 @$
b11001111 @$
b11010000 @$
b11010001 @$
b11010010 @$
b11010011 @$
b11010100 @$
b11010101 @$
b11010110 @$
b11010111 @$
b11011000 @$
b11011001 @$
b11011010 @$
b11011011 @$
b11011100 @$
b11011101 @$
b11011110 @$
b11011111 @$
b11100000 @$
b11100001 @$
b11100010 @$
b11100011 @$
b11100100 @$
b11100101 @$
b11100110 @$
b11100111 @$
b11101000 @$
b11101001 @$
b11101010 @$
b11101011 @$
b11101100 @$
b11101101 @$
b11101110 @$
b11101111 @$
b11110000 @$
b11110001 @$
b11110010 @$
b11110011 @$
b11110100 @$
b11110101 @$
b11110110 @$
b11110111 @$
b11111000 @$
b11111001 @$
b11111010 @$
b11111011 @$
b11111100 @$
b11111101 @$
b11111110 @$
b11111111 @$
b100000000 @$
b0 C$
b1 C$
b10 C$
b11 C$
b100 C$
b101 C$
b110 C$
b111 C$
b1000 C$
b1001 C$
b1010 C$
b1011 C$
b1100 C$
b1101 C$
b1110 C$
b1111 C$
b10000 C$
b10001 C$
b10010 C$
b10011 C$
b10100 C$
b10101 C$
b10110 C$
b10111 C$
b11000 C$
b11001 C$
b11010 C$
b11011 C$
b11100 C$
b11101 C$
b11110 C$
b11111 C$
b100000 C$
b100001 C$
b100010 C$
b100011 C$
b100100 C$
b100101 C$
b100110 C$
b100111 C$
b101000 C$
b101001 C$
b101010 C$
b101011 C$
b101100 C$
b101101 C$
b101110 C$
b101111 C$
b110000 C$
b110001 C$
b110010 C$
b110011 C$
b110100 C$
b110101 C$
b110110 C$
b110111 C$
b111000 C$
b111001 C$
b111010 C$
b111011 C$
b111100 C$
b111101 C$
b111110 C$
b111111 C$
b1000000 C$
b1000001 C$
b1000010 C$
b1000011 C$
b1000100 C$
b1000101 C$
b1000110 C$
b1000111 C$
b1001000 C$
b1001001 C$
b1001010 C$
b1001011 C$
b1001100 C$
b1001101 C$
b1001110 C$
b1001111 C$
b1010000 C$
b1010001 C$
b1010010 C$
b1010011 C$
b1010100 C$
b1010101 C$
b1010110 C$
b1010111 C$
b1011000 C$
b1011001 C$
b1011010 C$
b1011011 C$
b1011100 C$
b1011101 C$
b1011110 C$
b1011111 C$
b1100000 C$
b1100001 C$
b1100010 C$
b1100011 C$
b1100100 C$
b1100101 C$
b1100110 C$
b1100111 C$
b1101000 C$
b1101001 C$
b1101010 C$
b1101011 C$
b1101100 C$
b1101101 C$
b1101110 C$
b1101111 C$
b1110000 C$
b1110001 C$
b1110010 C$
b1110011 C$
b1110100 C$
b1110101 C$
b1110110 C$
b1110111 C$
b1111000 C$
b1111001 C$
b1111010 C$
b1111011 C$
b1111100 C$
b1111101 C$
b1111110 C$
b1111111 C$
b10000000 C$
b10000001 C$
b10000010 C$
b10000011 C$
b10000100 C$
b10000101 C$
b10000110 C$
b10000111 C$
b10001000 C$
b10001001 C$
b10001010 C$
b10001011 C$
b10001100 C$
b10001101 C$
b10001110 C$
b10001111 C$
b10010000 C$
b10010001 C$
b10010010 C$
b10010011 C$
b10010100 C$
b10010101 C$
b10010110 C$
b10010111 C$
b10011000 C$
b10011001 C$
b10011010 C$
b10011011 C$
b10011100 C$
b10011101 C$
b10011110 C$
b10011111 C$
b10100000 C$
b10100001 C$
b10100010 C$
b10100011 C$
b10100100 C$
b10100101 C$
b10100110 C$
b10100111 C$
b10101000 C$
b10101001 C$
b10101010 C$
b10101011 C$
b10101100 C$
b10101101 C$
b10101110 C$
b10101111 C$
b10110000 C$
b10110001 C$
b10110010 C$
b10110011 C$
b10110100 C$
b10110101 C$
b10110110 C$
b10110111 C$
b10111000 C$
b10111001 C$
b10111010 C$
b10111011 C$
b10111100 C$
b10111101 C$
b10111110 C$
b10111111 C$
b11000000 C$
b11000001 C$
b11000010 C$
b11000011 C$
b11000100 C$
b11000101 C$
b11000110 C$
b11000111 C$
b11001000 C$
b11001001 C$
b11001010 C$
b11001011 C$
b11001100 C$
b11001101 C$
b11001110 C$
b11001111 C$
b11010000 C$
b11010001 C$
b11010010 C$
b11010011 C$
b11010100 C$
b11010101 C$
b11010110 C$
b11010111 C$
b11011000 C$
b11011001 C$
b11011010 C$
b11011011 C$
b11011100 C$
b11011101 C$
b11011110 C$
b11011111 C$
b11100000 C$
b11100001 C$
b11100010 C$
b11100011 C$
b11100100 C$
b11100101 C$
b11100110 C$
b11100111 C$
b11101000 C$
b11101001 C$
b11101010 C$
b11101011 C$
b11101100 C$
b11101101 C$
b11101110 C$
b11101111 C$
b11110000 C$
b11110001 C$
b11110010 C$
b11110011 C$
b11110100 C$
b11110101 C$
b11110110 C$
b11110111 C$
b11111000 C$
b11111001 C$
b11111010 C$
b11111011 C$
b11111100 C$
b11111101 C$
b11111110 C$
b11111111 C$
b100000000 C$
b0 F$
b1 F$
b10 F$
b11 F$
b100 F$
b101 F$
b110 F$
b111 F$
b1000 F$
b1001 F$
b1010 F$
b1011 F$
b1100 F$
b1101 F$
b1110 F$
b1111 F$
b10000 F$
b10001 F$
b10010 F$
b10011 F$
b10100 F$
b10101 F$
b10110 F$
b10111 F$
b11000 F$
b11001 F$
b11010 F$
b11011 F$
b11100 F$
b11101 F$
b11110 F$
b11111 F$
b100000 F$
b100001 F$
b100010 F$
b100011 F$
b100100 F$
b100101 F$
b100110 F$
b100111 F$
b101000 F$
b101001 F$
b101010 F$
b101011 F$
b101100 F$
b101101 F$
b101110 F$
b101111 F$
b110000 F$
b110001 F$
b110010 F$
b110011 F$
b110100 F$
b110101 F$
b110110 F$
b110111 F$
b111000 F$
b111001 F$
b111010 F$
b111011 F$
b111100 F$
b111101 F$
b111110 F$
b111111 F$
b1000000 F$
b1000001 F$
b1000010 F$
b1000011 F$
b1000100 F$
b1000101 F$
b1000110 F$
b1000111 F$
b1001000 F$
b1001001 F$
b1001010 F$
b1001011 F$
b1001100 F$
b1001101 F$
b1001110 F$
b1001111 F$
b1010000 F$
b1010001 F$
b1010010 F$
b1010011 F$
b1010100 F$
b1010101 F$
b1010110 F$
b1010111 F$
b1011000 F$
b1011001 F$
b1011010 F$
b1011011 F$
b1011100 F$
b1011101 F$
b1011110 F$
b1011111 F$
b1100000 F$
b1100001 F$
b1100010 F$
b1100011 F$
b1100100 F$
b1100101 F$
b1100110 F$
b1100111 F$
b1101000 F$
b1101001 F$
b1101010 F$
b1101011 F$
b1101100 F$
b1101101 F$
b1101110 F$
b1101111 F$
b1110000 F$
b1110001 F$
b1110010 F$
b1110011 F$
b1110100 F$
b1110101 F$
b1110110 F$
b1110111 F$
b1111000 F$
b1111001 F$
b1111010 F$
b1111011 F$
b1111100 F$
b1111101 F$
b1111110 F$
b1111111 F$
b10000000 F$
b10000001 F$
b10000010 F$
b10000011 F$
b10000100 F$
b10000101 F$
b10000110 F$
b10000111 F$
b10001000 F$
b10001001 F$
b10001010 F$
b10001011 F$
b10001100 F$
b10001101 F$
b10001110 F$
b10001111 F$
b10010000 F$
b10010001 F$
b10010010 F$
b10010011 F$
b10010100 F$
b10010101 F$
b10010110 F$
b10010111 F$
b10011000 F$
b10011001 F$
b10011010 F$
b10011011 F$
b10011100 F$
b10011101 F$
b10011110 F$
b10011111 F$
b10100000 F$
b10100001 F$
b10100010 F$
b10100011 F$
b10100100 F$
b10100101 F$
b10100110 F$
b10100111 F$
b10101000 F$
b10101001 F$
b10101010 F$
b10101011 F$
b10101100 F$
b10101101 F$
b10101110 F$
b10101111 F$
b10110000 F$
b10110001 F$
b10110010 F$
b10110011 F$
b10110100 F$
b10110101 F$
b10110110 F$
b10110111 F$
b10111000 F$
b10111001 F$
b10111010 F$
b10111011 F$
b10111100 F$
b10111101 F$
b10111110 F$
b10111111 F$
b11000000 F$
b11000001 F$
b11000010 F$
b11000011 F$
b11000100 F$
b11000101 F$
b11000110 F$
b11000111 F$
b11001000 F$
b11001001 F$
b11001010 F$
b11001011 F$
b11001100 F$
b11001101 F$
b11001110 F$
b11001111 F$
b11010000 F$
b11010001 F$
b11010010 F$
b11010011 F$
b11010100 F$
b11010101 F$
b11010110 F$
b11010111 F$
b11011000 F$
b11011001 F$
b11011010 F$
b11011011 F$
b11011100 F$
b11011101 F$
b11011110 F$
b11011111 F$
b11100000 F$
b11100001 F$
b11100010 F$
b11100011 F$
b11100100 F$
b11100101 F$
b11100110 F$
b11100111 F$
b11101000 F$
b11101001 F$
b11101010 F$
b11101011 F$
b11101100 F$
b11101101 F$
b11101110 F$
b11101111 F$
b11110000 F$
b11110001 F$
b11110010 F$
b11110011 F$
b11110100 F$
b11110101 F$
b11110110 F$
b11110111 F$
b11111000 F$
b11111001 F$
b11111010 F$
b11111011 F$
b11111100 F$
b11111101 F$
b11111110 F$
b11111111 F$
b100000000 F$
b0 I$
b1 I$
b10 I$
b11 I$
b100 I$
b101 I$
b110 I$
b111 I$
b1000 I$
b1001 I$
b1010 I$
b1011 I$
b1100 I$
b1101 I$
b1110 I$
b1111 I$
b10000 I$
b10001 I$
b10010 I$
b10011 I$
b10100 I$
b10101 I$
b10110 I$
b10111 I$
b11000 I$
b11001 I$
b11010 I$
b11011 I$
b11100 I$
b11101 I$
b11110 I$
b11111 I$
b100000 I$
b100001 I$
b100010 I$
b100011 I$
b100100 I$
b100101 I$
b100110 I$
b100111 I$
b101000 I$
b101001 I$
b101010 I$
b101011 I$
b101100 I$
b101101 I$
b101110 I$
b101111 I$
b110000 I$
b110001 I$
b110010 I$
b110011 I$
b110100 I$
b110101 I$
b110110 I$
b110111 I$
b111000 I$
b111001 I$
b111010 I$
b111011 I$
b111100 I$
b111101 I$
b111110 I$
b111111 I$
b1000000 I$
b1000001 I$
b1000010 I$
b1000011 I$
b1000100 I$
b1000101 I$
b1000110 I$
b1000111 I$
b1001000 I$
b1001001 I$
b1001010 I$
b1001011 I$
b1001100 I$
b1001101 I$
b1001110 I$
b1001111 I$
b1010000 I$
b1010001 I$
b1010010 I$
b1010011 I$
b1010100 I$
b1010101 I$
b1010110 I$
b1010111 I$
b1011000 I$
b1011001 I$
b1011010 I$
b1011011 I$
b1011100 I$
b1011101 I$
b1011110 I$
b1011111 I$
b1100000 I$
b1100001 I$
b1100010 I$
b1100011 I$
b1100100 I$
b1100101 I$
b1100110 I$
b1100111 I$
b1101000 I$
b1101001 I$
b1101010 I$
b1101011 I$
b1101100 I$
b1101101 I$
b1101110 I$
b1101111 I$
b1110000 I$
b1110001 I$
b1110010 I$
b1110011 I$
b1110100 I$
b1110101 I$
b1110110 I$
b1110111 I$
b1111000 I$
b1111001 I$
b1111010 I$
b1111011 I$
b1111100 I$
b1111101 I$
b1111110 I$
b1111111 I$
b10000000 I$
b10000001 I$
b10000010 I$
b10000011 I$
b10000100 I$
b10000101 I$
b10000110 I$
b10000111 I$
b10001000 I$
b10001001 I$
b10001010 I$
b10001011 I$
b10001100 I$
b10001101 I$
b10001110 I$
b10001111 I$
b10010000 I$
b10010001 I$
b10010010 I$
b10010011 I$
b10010100 I$
b10010101 I$
b10010110 I$
b10010111 I$
b10011000 I$
b10011001 I$
b10011010 I$
b10011011 I$
b10011100 I$
b10011101 I$
b10011110 I$
b10011111 I$
b10100000 I$
b10100001 I$
b10100010 I$
b10100011 I$
b10100100 I$
b10100101 I$
b10100110 I$
b10100111 I$
b10101000 I$
b10101001 I$
b10101010 I$
b10101011 I$
b10101100 I$
b10101101 I$
b10101110 I$
b10101111 I$
b10110000 I$
b10110001 I$
b10110010 I$
b10110011 I$
b10110100 I$
b10110101 I$
b10110110 I$
b10110111 I$
b10111000 I$
b10111001 I$
b10111010 I$
b10111011 I$
b10111100 I$
b10111101 I$
b10111110 I$
b10111111 I$
b11000000 I$
b11000001 I$
b11000010 I$
b11000011 I$
b11000100 I$
b11000101 I$
b11000110 I$
b11000111 I$
b11001000 I$
b11001001 I$
b11001010 I$
b11001011 I$
b11001100 I$
b11001101 I$
b11001110 I$
b11001111 I$
b11010000 I$
b11010001 I$
b11010010 I$
b11010011 I$
b11010100 I$
b11010101 I$
b11010110 I$
b11010111 I$
b11011000 I$
b11011001 I$
b11011010 I$
b11011011 I$
b11011100 I$
b11011101 I$
b11011110 I$
b11011111 I$
b11100000 I$
b11100001 I$
b11100010 I$
b11100011 I$
b11100100 I$
b11100101 I$
b11100110 I$
b11100111 I$
b11101000 I$
b11101001 I$
b11101010 I$
b11101011 I$
b11101100 I$
b11101101 I$
b11101110 I$
b11101111 I$
b11110000 I$
b11110001 I$
b11110010 I$
b11110011 I$
b11110100 I$
b11110101 I$
b11110110 I$
b11110111 I$
b11111000 I$
b11111001 I$
b11111010 I$
b11111011 I$
b11111100 I$
b11111101 I$
b11111110 I$
b11111111 I$
b100000000 I$
b0 K$
b1 K$
b10 K$
b11 K$
b100 K$
b101 K$
b110 K$
b111 K$
b1000 K$
b1001 K$
b1010 K$
b1011 K$
b1100 K$
b1101 K$
b1110 K$
b1111 K$
b10000 K$
b10001 K$
b10010 K$
b10011 K$
b10100 K$
b10101 K$
b10110 K$
b10111 K$
b11000 K$
b11001 K$
b11010 K$
b11011 K$
b11100 K$
b11101 K$
b11110 K$
b11111 K$
b100000 K$
b100001 K$
b100010 K$
b100011 K$
b100100 K$
b100101 K$
b100110 K$
b100111 K$
b101000 K$
b101001 K$
b101010 K$
b101011 K$
b101100 K$
b101101 K$
b101110 K$
b101111 K$
b110000 K$
b110001 K$
b110010 K$
b110011 K$
b110100 K$
b110101 K$
b110110 K$
b110111 K$
b111000 K$
b111001 K$
b111010 K$
b111011 K$
b111100 K$
b111101 K$
b111110 K$
b111111 K$
b1000000 K$
b1000001 K$
b1000010 K$
b1000011 K$
b1000100 K$
b1000101 K$
b1000110 K$
b1000111 K$
b1001000 K$
b1001001 K$
b1001010 K$
b1001011 K$
b1001100 K$
b1001101 K$
b1001110 K$
b1001111 K$
b1010000 K$
b1010001 K$
b1010010 K$
b1010011 K$
b1010100 K$
b1010101 K$
b1010110 K$
b1010111 K$
b1011000 K$
b1011001 K$
b1011010 K$
b1011011 K$
b1011100 K$
b1011101 K$
b1011110 K$
b1011111 K$
b1100000 K$
b1100001 K$
b1100010 K$
b1100011 K$
b1100100 K$
b1100101 K$
b1100110 K$
b1100111 K$
b1101000 K$
b1101001 K$
b1101010 K$
b1101011 K$
b1101100 K$
b1101101 K$
b1101110 K$
b1101111 K$
b1110000 K$
b1110001 K$
b1110010 K$
b1110011 K$
b1110100 K$
b1110101 K$
b1110110 K$
b1110111 K$
b1111000 K$
b1111001 K$
b1111010 K$
b1111011 K$
b1111100 K$
b1111101 K$
b1111110 K$
b1111111 K$
b10000000 K$
b10000001 K$
b10000010 K$
b10000011 K$
b10000100 K$
b10000101 K$
b10000110 K$
b10000111 K$
b10001000 K$
b10001001 K$
b10001010 K$
b10001011 K$
b10001100 K$
b10001101 K$
b10001110 K$
b10001111 K$
b10010000 K$
b10010001 K$
b10010010 K$
b10010011 K$
b10010100 K$
b10010101 K$
b10010110 K$
b10010111 K$
b10011000 K$
b10011001 K$
b10011010 K$
b10011011 K$
b10011100 K$
b10011101 K$
b10011110 K$
b10011111 K$
b10100000 K$
b10100001 K$
b10100010 K$
b10100011 K$
b10100100 K$
b10100101 K$
b10100110 K$
b10100111 K$
b10101000 K$
b10101001 K$
b10101010 K$
b10101011 K$
b10101100 K$
b10101101 K$
b10101110 K$
b10101111 K$
b10110000 K$
b10110001 K$
b10110010 K$
b10110011 K$
b10110100 K$
b10110101 K$
b10110110 K$
b10110111 K$
b10111000 K$
b10111001 K$
b10111010 K$
b10111011 K$
b10111100 K$
b10111101 K$
b10111110 K$
b10111111 K$
b11000000 K$
b11000001 K$
b11000010 K$
b11000011 K$
b11000100 K$
b11000101 K$
b11000110 K$
b11000111 K$
b11001000 K$
b11001001 K$
b11001010 K$
b11001011 K$
b11001100 K$
b11001101 K$
b11001110 K$
b11001111 K$
b11010000 K$
b11010001 K$
b11010010 K$
b11010011 K$
b11010100 K$
b11010101 K$
b11010110 K$
b11010111 K$
b11011000 K$
b11011001 K$
b11011010 K$
b11011011 K$
b11011100 K$
b11011101 K$
b11011110 K$
b11011111 K$
b11100000 K$
b11100001 K$
b11100010 K$
b11100011 K$
b11100100 K$
b11100101 K$
b11100110 K$
b11100111 K$
b11101000 K$
b11101001 K$
b11101010 K$
b11101011 K$
b11101100 K$
b11101101 K$
b11101110 K$
b11101111 K$
b11110000 K$
b11110001 K$
b11110010 K$
b11110011 K$
b11110100 K$
b11110101 K$
b11110110 K$
b11110111 K$
b11111000 K$
b11111001 K$
b11111010 K$
b11111011 K$
b11111100 K$
b11111101 K$
b11111110 K$
b11111111 K$
b100000000 K$
b0 \%
b1 \%
b10 \%
b11 \%
b100 \%
b101 \%
b110 \%
b111 \%
b1000 \%
b1001 \%
b1010 \%
b1011 \%
b1100 \%
b1101 \%
b1110 \%
b1111 \%
b10000 \%
b10001 \%
b10010 \%
b10011 \%
b10100 \%
b10101 \%
b10110 \%
b10111 \%
b11000 \%
b11001 \%
b11010 \%
b11011 \%
b11100 \%
b11101 \%
b11110 \%
b11111 \%
b100000 \%
b100001 \%
b100010 \%
b100011 \%
b100100 \%
b100101 \%
b100110 \%
b100111 \%
b101000 \%
b101001 \%
b101010 \%
b101011 \%
b101100 \%
b101101 \%
b101110 \%
b101111 \%
b110000 \%
b110001 \%
b110010 \%
b110011 \%
b110100 \%
b110101 \%
b110110 \%
b110111 \%
b111000 \%
b111001 \%
b111010 \%
b111011 \%
b111100 \%
b111101 \%
b111110 \%
b111111 \%
b1000000 \%
b1000001 \%
b1000010 \%
b1000011 \%
b1000100 \%
b1000101 \%
b1000110 \%
b1000111 \%
b1001000 \%
b1001001 \%
b1001010 \%
b1001011 \%
b1001100 \%
b1001101 \%
b1001110 \%
b1001111 \%
b1010000 \%
b1010001 \%
b1010010 \%
b1010011 \%
b1010100 \%
b1010101 \%
b1010110 \%
b1010111 \%
b1011000 \%
b1011001 \%
b1011010 \%
b1011011 \%
b1011100 \%
b1011101 \%
b1011110 \%
b1011111 \%
b1100000 \%
b1100001 \%
b1100010 \%
b1100011 \%
b1100100 \%
b1100101 \%
b1100110 \%
b1100111 \%
b1101000 \%
b1101001 \%
b1101010 \%
b1101011 \%
b1101100 \%
b1101101 \%
b1101110 \%
b1101111 \%
b1110000 \%
b1110001 \%
b1110010 \%
b1110011 \%
b1110100 \%
b1110101 \%
b1110110 \%
b1110111 \%
b1111000 \%
b1111001 \%
b1111010 \%
b1111011 \%
b1111100 \%
b1111101 \%
b1111110 \%
b1111111 \%
b10000000 \%
b10000001 \%
b10000010 \%
b10000011 \%
b10000100 \%
b10000101 \%
b10000110 \%
b10000111 \%
b10001000 \%
b10001001 \%
b10001010 \%
b10001011 \%
b10001100 \%
b10001101 \%
b10001110 \%
b10001111 \%
b10010000 \%
b10010001 \%
b10010010 \%
b10010011 \%
b10010100 \%
b10010101 \%
b10010110 \%
b10010111 \%
b10011000 \%
b10011001 \%
b10011010 \%
b10011011 \%
b10011100 \%
b10011101 \%
b10011110 \%
b10011111 \%
b10100000 \%
b10100001 \%
b10100010 \%
b10100011 \%
b10100100 \%
b10100101 \%
b10100110 \%
b10100111 \%
b10101000 \%
b10101001 \%
b10101010 \%
b10101011 \%
b10101100 \%
b10101101 \%
b10101110 \%
b10101111 \%
b10110000 \%
b10110001 \%
b10110010 \%
b10110011 \%
b10110100 \%
b10110101 \%
b10110110 \%
b10110111 \%
b10111000 \%
b10111001 \%
b10111010 \%
b10111011 \%
b10111100 \%
b10111101 \%
b10111110 \%
b10111111 \%
b11000000 \%
b11000001 \%
b11000010 \%
b11000011 \%
b11000100 \%
b11000101 \%
b11000110 \%
b11000111 \%
b11001000 \%
b11001001 \%
b11001010 \%
b11001011 \%
b11001100 \%
b11001101 \%
b11001110 \%
b11001111 \%
b11010000 \%
b11010001 \%
b11010010 \%
b11010011 \%
b11010100 \%
b11010101 \%
b11010110 \%
b11010111 \%
b11011000 \%
b11011001 \%
b11011010 \%
b11011011 \%
b11011100 \%
b11011101 \%
b11011110 \%
b11011111 \%
b11100000 \%
b11100001 \%
b11100010 \%
b11100011 \%
b11100100 \%
b11100101 \%
b11100110 \%
b11100111 \%
b11101000 \%
b11101001 \%
b11101010 \%
b11101011 \%
b11101100 \%
b11101101 \%
b11101110 \%
b11101111 \%
b11110000 \%
b11110001 \%
b11110010 \%
b11110011 \%
b11110100 \%
b11110101 \%
b11110110 \%
b11110111 \%
b11111000 \%
b11111001 \%
b11111010 \%
b11111011 \%
b11111100 \%
b11111101 \%
b11111110 \%
b11111111 \%
b100000000 \%
b0 _%
b1 _%
b10 _%
b11 _%
b100 _%
b101 _%
b110 _%
b111 _%
b1000 _%
b1001 _%
b1010 _%
b1011 _%
b1100 _%
b1101 _%
b1110 _%
b1111 _%
b10000 _%
b10001 _%
b10010 _%
b10011 _%
b10100 _%
b10101 _%
b10110 _%
b10111 _%
b11000 _%
b11001 _%
b11010 _%
b11011 _%
b11100 _%
b11101 _%
b11110 _%
b11111 _%
b100000 _%
b100001 _%
b100010 _%
b100011 _%
b100100 _%
b100101 _%
b100110 _%
b100111 _%
b101000 _%
b101001 _%
b101010 _%
b101011 _%
b101100 _%
b101101 _%
b101110 _%
b101111 _%
b110000 _%
b110001 _%
b110010 _%
b110011 _%
b110100 _%
b110101 _%
b110110 _%
b110111 _%
b111000 _%
b111001 _%
b111010 _%
b111011 _%
b111100 _%
b111101 _%
b111110 _%
b111111 _%
b1000000 _%
b1000001 _%
b1000010 _%
b1000011 _%
b1000100 _%
b1000101 _%
b1000110 _%
b1000111 _%
b1001000 _%
b1001001 _%
b1001010 _%
b1001011 _%
b1001100 _%
b1001101 _%
b1001110 _%
b1001111 _%
b1010000 _%
b1010001 _%
b1010010 _%
b1010011 _%
b1010100 _%
b1010101 _%
b1010110 _%
b1010111 _%
b1011000 _%
b1011001 _%
b1011010 _%
b1011011 _%
b1011100 _%
b1011101 _%
b1011110 _%
b1011111 _%
b1100000 _%
b1100001 _%
b1100010 _%
b1100011 _%
b1100100 _%
b1100101 _%
b1100110 _%
b1100111 _%
b1101000 _%
b1101001 _%
b1101010 _%
b1101011 _%
b1101100 _%
b1101101 _%
b1101110 _%
b1101111 _%
b1110000 _%
b1110001 _%
b1110010 _%
b1110011 _%
b1110100 _%
b1110101 _%
b1110110 _%
b1110111 _%
b1111000 _%
b1111001 _%
b1111010 _%
b1111011 _%
b1111100 _%
b1111101 _%
b1111110 _%
b1111111 _%
b10000000 _%
b10000001 _%
b10000010 _%
b10000011 _%
b10000100 _%
b10000101 _%
b10000110 _%
b10000111 _%
b10001000 _%
b10001001 _%
b10001010 _%
b10001011 _%
b10001100 _%
b10001101 _%
b10001110 _%
b10001111 _%
b10010000 _%
b10010001 _%
b10010010 _%
b10010011 _%
b10010100 _%
b10010101 _%
b10010110 _%
b10010111 _%
b10011000 _%
b10011001 _%
b10011010 _%
b10011011 _%
b10011100 _%
b10011101 _%
b10011110 _%
b10011111 _%
b10100000 _%
b10100001 _%
b10100010 _%
b10100011 _%
b10100100 _%
b10100101 _%
b10100110 _%
b10100111 _%
b10101000 _%
b10101001 _%
b10101010 _%
b10101011 _%
b10101100 _%
b10101101 _%
b10101110 _%
b10101111 _%
b10110000 _%
b10110001 _%
b10110010 _%
b10110011 _%
b10110100 _%
b10110101 _%
b10110110 _%
b10110111 _%
b10111000 _%
b10111001 _%
b10111010 _%
b10111011 _%
b10111100 _%
b10111101 _%
b10111110 _%
b10111111 _%
b11000000 _%
b11000001 _%
b11000010 _%
b11000011 _%
b11000100 _%
b11000101 _%
b11000110 _%
b11000111 _%
b11001000 _%
b11001001 _%
b11001010 _%
b11001011 _%
b11001100 _%
b11001101 _%
b11001110 _%
b11001111 _%
b11010000 _%
b11010001 _%
b11010010 _%
b11010011 _%
b11010100 _%
b11010101 _%
b11010110 _%
b11010111 _%
b11011000 _%
b11011001 _%
b11011010 _%
b11011011 _%
b11011100 _%
b11011101 _%
b11011110 _%
b11011111 _%
b11100000 _%
b11100001 _%
b11100010 _%
b11100011 _%
b11100100 _%
b11100101 _%
b11100110 _%
b11100111 _%
b11101000 _%
b11101001 _%
b11101010 _%
b11101011 _%
b11101100 _%
b11101101 _%
b11101110 _%
b11101111 _%
b11110000 _%
b11110001 _%
b11110010 _%
b11110011 _%
b11110100 _%
b11110101 _%
b11110110 _%
b11110111 _%
b11111000 _%
b11111001 _%
b11111010 _%
b11111011 _%
b11111100 _%
b11111101 _%
b11111110 _%
b11111111 _%
b100000000 _%
b0 b%
b1 b%
b10 b%
b11 b%
b100 b%
b101 b%
b110 b%
b111 b%
b1000 b%
b1001 b%
b1010 b%
b1011 b%
b1100 b%
b1101 b%
b1110 b%
b1111 b%
b10000 b%
b10001 b%
b10010 b%
b10011 b%
b10100 b%
b10101 b%
b10110 b%
b10111 b%
b11000 b%
b11001 b%
b11010 b%
b11011 b%
b11100 b%
b11101 b%
b11110 b%
b11111 b%
b100000 b%
b100001 b%
b100010 b%
b100011 b%
b100100 b%
b100101 b%
b100110 b%
b100111 b%
b101000 b%
b101001 b%
b101010 b%
b101011 b%
b101100 b%
b101101 b%
b101110 b%
b101111 b%
b110000 b%
b110001 b%
b110010 b%
b110011 b%
b110100 b%
b110101 b%
b110110 b%
b110111 b%
b111000 b%
b111001 b%
b111010 b%
b111011 b%
b111100 b%
b111101 b%
b111110 b%
b111111 b%
b1000000 b%
b1000001 b%
b1000010 b%
b1000011 b%
b1000100 b%
b1000101 b%
b1000110 b%
b1000111 b%
b1001000 b%
b1001001 b%
b1001010 b%
b1001011 b%
b1001100 b%
b1001101 b%
b1001110 b%
b1001111 b%
b1010000 b%
b1010001 b%
b1010010 b%
b1010011 b%
b1010100 b%
b1010101 b%
b1010110 b%
b1010111 b%
b1011000 b%
b1011001 b%
b1011010 b%
b1011011 b%
b1011100 b%
b1011101 b%
b1011110 b%
b1011111 b%
b1100000 b%
b1100001 b%
b1100010 b%
b1100011 b%
b1100100 b%
b1100101 b%
b1100110 b%
b1100111 b%
b1101000 b%
b1101001 b%
b1101010 b%
b1101011 b%
b1101100 b%
b1101101 b%
b1101110 b%
b1101111 b%
b1110000 b%
b1110001 b%
b1110010 b%
b1110011 b%
b1110100 b%
b1110101 b%
b1110110 b%
b1110111 b%
b1111000 b%
b1111001 b%
b1111010 b%
b1111011 b%
b1111100 b%
b1111101 b%
b1111110 b%
b1111111 b%
b10000000 b%
b10000001 b%
b10000010 b%
b10000011 b%
b10000100 b%
b10000101 b%
b10000110 b%
b10000111 b%
b10001000 b%
b10001001 b%
b10001010 b%
b10001011 b%
b10001100 b%
b10001101 b%
b10001110 b%
b10001111 b%
b10010000 b%
b10010001 b%
b10010010 b%
b10010011 b%
b10010100 b%
b10010101 b%
b10010110 b%
b10010111 b%
b10011000 b%
b10011001 b%
b10011010 b%
b10011011 b%
b10011100 b%
b10011101 b%
b10011110 b%
b10011111 b%
b10100000 b%
b10100001 b%
b10100010 b%
b10100011 b%
b10100100 b%
b10100101 b%
b10100110 b%
b10100111 b%
b10101000 b%
b10101001 b%
b10101010 b%
b10101011 b%
b10101100 b%
b10101101 b%
b10101110 b%
b10101111 b%
b10110000 b%
b10110001 b%
b10110010 b%
b10110011 b%
b10110100 b%
b10110101 b%
b10110110 b%
b10110111 b%
b10111000 b%
b10111001 b%
b10111010 b%
b10111011 b%
b10111100 b%
b10111101 b%
b10111110 b%
b10111111 b%
b11000000 b%
b11000001 b%
b11000010 b%
b11000011 b%
b11000100 b%
b11000101 b%
b11000110 b%
b11000111 b%
b11001000 b%
b11001001 b%
b11001010 b%
b11001011 b%
b11001100 b%
b11001101 b%
b11001110 b%
b11001111 b%
b11010000 b%
b11010001 b%
b11010010 b%
b11010011 b%
b11010100 b%
b11010101 b%
b11010110 b%
b11010111 b%
b11011000 b%
b11011001 b%
b11011010 b%
b11011011 b%
b11011100 b%
b11011101 b%
b11011110 b%
b11011111 b%
b11100000 b%
b11100001 b%
b11100010 b%
b11100011 b%
b11100100 b%
b11100101 b%
b11100110 b%
b11100111 b%
b11101000 b%
b11101001 b%
b11101010 b%
b11101011 b%
b11101100 b%
b11101101 b%
b11101110 b%
b11101111 b%
b11110000 b%
b11110001 b%
b11110010 b%
b11110011 b%
b11110100 b%
b11110101 b%
b11110110 b%
b11110111 b%
b11111000 b%
b11111001 b%
b11111010 b%
b11111011 b%
b11111100 b%
b11111101 b%
b11111110 b%
b11111111 b%
b100000000 b%
b0 e%
b1 e%
b10 e%
b11 e%
b100 e%
b101 e%
b110 e%
b111 e%
b1000 e%
b1001 e%
b1010 e%
b1011 e%
b1100 e%
b1101 e%
b1110 e%
b1111 e%
b10000 e%
b10001 e%
b10010 e%
b10011 e%
b10100 e%
b10101 e%
b10110 e%
b10111 e%
b11000 e%
b11001 e%
b11010 e%
b11011 e%
b11100 e%
b11101 e%
b11110 e%
b11111 e%
b100000 e%
b100001 e%
b100010 e%
b100011 e%
b100100 e%
b100101 e%
b100110 e%
b100111 e%
b101000 e%
b101001 e%
b101010 e%
b101011 e%
b101100 e%
b101101 e%
b101110 e%
b101111 e%
b110000 e%
b110001 e%
b110010 e%
b110011 e%
b110100 e%
b110101 e%
b110110 e%
b110111 e%
b111000 e%
b111001 e%
b111010 e%
b111011 e%
b111100 e%
b111101 e%
b111110 e%
b111111 e%
b1000000 e%
b1000001 e%
b1000010 e%
b1000011 e%
b1000100 e%
b1000101 e%
b1000110 e%
b1000111 e%
b1001000 e%
b1001001 e%
b1001010 e%
b1001011 e%
b1001100 e%
b1001101 e%
b1001110 e%
b1001111 e%
b1010000 e%
b1010001 e%
b1010010 e%
b1010011 e%
b1010100 e%
b1010101 e%
b1010110 e%
b1010111 e%
b1011000 e%
b1011001 e%
b1011010 e%
b1011011 e%
b1011100 e%
b1011101 e%
b1011110 e%
b1011111 e%
b1100000 e%
b1100001 e%
b1100010 e%
b1100011 e%
b1100100 e%
b1100101 e%
b1100110 e%
b1100111 e%
b1101000 e%
b1101001 e%
b1101010 e%
b1101011 e%
b1101100 e%
b1101101 e%
b1101110 e%
b1101111 e%
b1110000 e%
b1110001 e%
b1110010 e%
b1110011 e%
b1110100 e%
b1110101 e%
b1110110 e%
b1110111 e%
b1111000 e%
b1111001 e%
b1111010 e%
b1111011 e%
b1111100 e%
b1111101 e%
b1111110 e%
b1111111 e%
b10000000 e%
b10000001 e%
b10000010 e%
b10000011 e%
b10000100 e%
b10000101 e%
b10000110 e%
b10000111 e%
b10001000 e%
b10001001 e%
b10001010 e%
b10001011 e%
b10001100 e%
b10001101 e%
b10001110 e%
b10001111 e%
b10010000 e%
b10010001 e%
b10010010 e%
b10010011 e%
b10010100 e%
b10010101 e%
b10010110 e%
b10010111 e%
b10011000 e%
b10011001 e%
b10011010 e%
b10011011 e%
b10011100 e%
b10011101 e%
b10011110 e%
b10011111 e%
b10100000 e%
b10100001 e%
b10100010 e%
b10100011 e%
b10100100 e%
b10100101 e%
b10100110 e%
b10100111 e%
b10101000 e%
b10101001 e%
b10101010 e%
b10101011 e%
b10101100 e%
b10101101 e%
b10101110 e%
b10101111 e%
b10110000 e%
b10110001 e%
b10110010 e%
b10110011 e%
b10110100 e%
b10110101 e%
b10110110 e%
b10110111 e%
b10111000 e%
b10111001 e%
b10111010 e%
b10111011 e%
b10111100 e%
b10111101 e%
b10111110 e%
b10111111 e%
b11000000 e%
b11000001 e%
b11000010 e%
b11000011 e%
b11000100 e%
b11000101 e%
b11000110 e%
b11000111 e%
b11001000 e%
b11001001 e%
b11001010 e%
b11001011 e%
b11001100 e%
b11001101 e%
b11001110 e%
b11001111 e%
b11010000 e%
b11010001 e%
b11010010 e%
b11010011 e%
b11010100 e%
b11010101 e%
b11010110 e%
b11010111 e%
b11011000 e%
b11011001 e%
b11011010 e%
b11011011 e%
b11011100 e%
b11011101 e%
b11011110 e%
b11011111 e%
b11100000 e%
b11100001 e%
b11100010 e%
b11100011 e%
b11100100 e%
b11100101 e%
b11100110 e%
b11100111 e%
b11101000 e%
b11101001 e%
b11101010 e%
b11101011 e%
b11101100 e%
b11101101 e%
b11101110 e%
b11101111 e%
b11110000 e%
b11110001 e%
b11110010 e%
b11110011 e%
b11110100 e%
b11110101 e%
b11110110 e%
b11110111 e%
b11111000 e%
b11111001 e%
b11111010 e%
b11111011 e%
b11111100 e%
b11111101 e%
b11111110 e%
b11111111 e%
b100000000 e%
b0 h%
b1 h%
b10 h%
b11 h%
b100 h%
b101 h%
b110 h%
b111 h%
b1000 h%
b1001 h%
b1010 h%
b1011 h%
b1100 h%
b1101 h%
b1110 h%
b1111 h%
b10000 h%
b10001 h%
b10010 h%
b10011 h%
b10100 h%
b10101 h%
b10110 h%
b10111 h%
b11000 h%
b11001 h%
b11010 h%
b11011 h%
b11100 h%
b11101 h%
b11110 h%
b11111 h%
b100000 h%
b100001 h%
b100010 h%
b100011 h%
b100100 h%
b100101 h%
b100110 h%
b100111 h%
b101000 h%
b101001 h%
b101010 h%
b101011 h%
b101100 h%
b101101 h%
b101110 h%
b101111 h%
b110000 h%
b110001 h%
b110010 h%
b110011 h%
b110100 h%
b110101 h%
b110110 h%
b110111 h%
b111000 h%
b111001 h%
b111010 h%
b111011 h%
b111100 h%
b111101 h%
b111110 h%
b111111 h%
b1000000 h%
b1000001 h%
b1000010 h%
b1000011 h%
b1000100 h%
b1000101 h%
b1000110 h%
b1000111 h%
b1001000 h%
b1001001 h%
b1001010 h%
b1001011 h%
b1001100 h%
b1001101 h%
b1001110 h%
b1001111 h%
b1010000 h%
b1010001 h%
b1010010 h%
b1010011 h%
b1010100 h%
b1010101 h%
b1010110 h%
b1010111 h%
b1011000 h%
b1011001 h%
b1011010 h%
b1011011 h%
b1011100 h%
b1011101 h%
b1011110 h%
b1011111 h%
b1100000 h%
b1100001 h%
b1100010 h%
b1100011 h%
b1100100 h%
b1100101 h%
b1100110 h%
b1100111 h%
b1101000 h%
b1101001 h%
b1101010 h%
b1101011 h%
b1101100 h%
b1101101 h%
b1101110 h%
b1101111 h%
b1110000 h%
b1110001 h%
b1110010 h%
b1110011 h%
b1110100 h%
b1110101 h%
b1110110 h%
b1110111 h%
b1111000 h%
b1111001 h%
b1111010 h%
b1111011 h%
b1111100 h%
b1111101 h%
b1111110 h%
b1111111 h%
b10000000 h%
b10000001 h%
b10000010 h%
b10000011 h%
b10000100 h%
b10000101 h%
b10000110 h%
b10000111 h%
b10001000 h%
b10001001 h%
b10001010 h%
b10001011 h%
b10001100 h%
b10001101 h%
b10001110 h%
b10001111 h%
b10010000 h%
b10010001 h%
b10010010 h%
b10010011 h%
b10010100 h%
b10010101 h%
b10010110 h%
b10010111 h%
b10011000 h%
b10011001 h%
b10011010 h%
b10011011 h%
b10011100 h%
b10011101 h%
b10011110 h%
b10011111 h%
b10100000 h%
b10100001 h%
b10100010 h%
b10100011 h%
b10100100 h%
b10100101 h%
b10100110 h%
b10100111 h%
b10101000 h%
b10101001 h%
b10101010 h%
b10101011 h%
b10101100 h%
b10101101 h%
b10101110 h%
b10101111 h%
b10110000 h%
b10110001 h%
b10110010 h%
b10110011 h%
b10110100 h%
b10110101 h%
b10110110 h%
b10110111 h%
b10111000 h%
b10111001 h%
b10111010 h%
b10111011 h%
b10111100 h%
b10111101 h%
b10111110 h%
b10111111 h%
b11000000 h%
b11000001 h%
b11000010 h%
b11000011 h%
b11000100 h%
b11000101 h%
b11000110 h%
b11000111 h%
b11001000 h%
b11001001 h%
b11001010 h%
b11001011 h%
b11001100 h%
b11001101 h%
b11001110 h%
b11001111 h%
b11010000 h%
b11010001 h%
b11010010 h%
b11010011 h%
b11010100 h%
b11010101 h%
b11010110 h%
b11010111 h%
b11011000 h%
b11011001 h%
b11011010 h%
b11011011 h%
b11011100 h%
b11011101 h%
b11011110 h%
b11011111 h%
b11100000 h%
b11100001 h%
b11100010 h%
b11100011 h%
b11100100 h%
b11100101 h%
b11100110 h%
b11100111 h%
b11101000 h%
b11101001 h%
b11101010 h%
b11101011 h%
b11101100 h%
b11101101 h%
b11101110 h%
b11101111 h%
b11110000 h%
b11110001 h%
b11110010 h%
b11110011 h%
b11110100 h%
b11110101 h%
b11110110 h%
b11110111 h%
b11111000 h%
b11111001 h%
b11111010 h%
b11111011 h%
b11111100 h%
b11111101 h%
b11111110 h%
b11111111 h%
b100000000 h%
b0 k%
b1 k%
b10 k%
b11 k%
b100 k%
b101 k%
b110 k%
b111 k%
b1000 k%
b1001 k%
b1010 k%
b1011 k%
b1100 k%
b1101 k%
b1110 k%
b1111 k%
b10000 k%
b10001 k%
b10010 k%
b10011 k%
b10100 k%
b10101 k%
b10110 k%
b10111 k%
b11000 k%
b11001 k%
b11010 k%
b11011 k%
b11100 k%
b11101 k%
b11110 k%
b11111 k%
b100000 k%
b100001 k%
b100010 k%
b100011 k%
b100100 k%
b100101 k%
b100110 k%
b100111 k%
b101000 k%
b101001 k%
b101010 k%
b101011 k%
b101100 k%
b101101 k%
b101110 k%
b101111 k%
b110000 k%
b110001 k%
b110010 k%
b110011 k%
b110100 k%
b110101 k%
b110110 k%
b110111 k%
b111000 k%
b111001 k%
b111010 k%
b111011 k%
b111100 k%
b111101 k%
b111110 k%
b111111 k%
b1000000 k%
b1000001 k%
b1000010 k%
b1000011 k%
b1000100 k%
b1000101 k%
b1000110 k%
b1000111 k%
b1001000 k%
b1001001 k%
b1001010 k%
b1001011 k%
b1001100 k%
b1001101 k%
b1001110 k%
b1001111 k%
b1010000 k%
b1010001 k%
b1010010 k%
b1010011 k%
b1010100 k%
b1010101 k%
b1010110 k%
b1010111 k%
b1011000 k%
b1011001 k%
b1011010 k%
b1011011 k%
b1011100 k%
b1011101 k%
b1011110 k%
b1011111 k%
b1100000 k%
b1100001 k%
b1100010 k%
b1100011 k%
b1100100 k%
b1100101 k%
b1100110 k%
b1100111 k%
b1101000 k%
b1101001 k%
b1101010 k%
b1101011 k%
b1101100 k%
b1101101 k%
b1101110 k%
b1101111 k%
b1110000 k%
b1110001 k%
b1110010 k%
b1110011 k%
b1110100 k%
b1110101 k%
b1110110 k%
b1110111 k%
b1111000 k%
b1111001 k%
b1111010 k%
b1111011 k%
b1111100 k%
b1111101 k%
b1111110 k%
b1111111 k%
b10000000 k%
b10000001 k%
b10000010 k%
b10000011 k%
b10000100 k%
b10000101 k%
b10000110 k%
b10000111 k%
b10001000 k%
b10001001 k%
b10001010 k%
b10001011 k%
b10001100 k%
b10001101 k%
b10001110 k%
b10001111 k%
b10010000 k%
b10010001 k%
b10010010 k%
b10010011 k%
b10010100 k%
b10010101 k%
b10010110 k%
b10010111 k%
b10011000 k%
b10011001 k%
b10011010 k%
b10011011 k%
b10011100 k%
b10011101 k%
b10011110 k%
b10011111 k%
b10100000 k%
b10100001 k%
b10100010 k%
b10100011 k%
b10100100 k%
b10100101 k%
b10100110 k%
b10100111 k%
b10101000 k%
b10101001 k%
b10101010 k%
b10101011 k%
b10101100 k%
b10101101 k%
b10101110 k%
b10101111 k%
b10110000 k%
b10110001 k%
b10110010 k%
b10110011 k%
b10110100 k%
b10110101 k%
b10110110 k%
b10110111 k%
b10111000 k%
b10111001 k%
b10111010 k%
b10111011 k%
b10111100 k%
b10111101 k%
b10111110 k%
b10111111 k%
b11000000 k%
b11000001 k%
b11000010 k%
b11000011 k%
b11000100 k%
b11000101 k%
b11000110 k%
b11000111 k%
b11001000 k%
b11001001 k%
b11001010 k%
b11001011 k%
b11001100 k%
b11001101 k%
b11001110 k%
b11001111 k%
b11010000 k%
b11010001 k%
b11010010 k%
b11010011 k%
b11010100 k%
b11010101 k%
b11010110 k%
b11010111 k%
b11011000 k%
b11011001 k%
b11011010 k%
b11011011 k%
b11011100 k%
b11011101 k%
b11011110 k%
b11011111 k%
b11100000 k%
b11100001 k%
b11100010 k%
b11100011 k%
b11100100 k%
b11100101 k%
b11100110 k%
b11100111 k%
b11101000 k%
b11101001 k%
b11101010 k%
b11101011 k%
b11101100 k%
b11101101 k%
b11101110 k%
b11101111 k%
b11110000 k%
b11110001 k%
b11110010 k%
b11110011 k%
b11110100 k%
b11110101 k%
b11110110 k%
b11110111 k%
b11111000 k%
b11111001 k%
b11111010 k%
b11111011 k%
b11111100 k%
b11111101 k%
b11111110 k%
b11111111 k%
b100000000 k%
b0 m%
b1 m%
b10 m%
b11 m%
b100 m%
b101 m%
b110 m%
b111 m%
b1000 m%
b1001 m%
b1010 m%
b1011 m%
b1100 m%
b1101 m%
b1110 m%
b1111 m%
b10000 m%
b10001 m%
b10010 m%
b10011 m%
b10100 m%
b10101 m%
b10110 m%
b10111 m%
b11000 m%
b11001 m%
b11010 m%
b11011 m%
b11100 m%
b11101 m%
b11110 m%
b11111 m%
b100000 m%
b100001 m%
b100010 m%
b100011 m%
b100100 m%
b100101 m%
b100110 m%
b100111 m%
b101000 m%
b101001 m%
b101010 m%
b101011 m%
b101100 m%
b101101 m%
b101110 m%
b101111 m%
b110000 m%
b110001 m%
b110010 m%
b110011 m%
b110100 m%
b110101 m%
b110110 m%
b110111 m%
b111000 m%
b111001 m%
b111010 m%
b111011 m%
b111100 m%
b111101 m%
b111110 m%
b111111 m%
b1000000 m%
b1000001 m%
b1000010 m%
b1000011 m%
b1000100 m%
b1000101 m%
b1000110 m%
b1000111 m%
b1001000 m%
b1001001 m%
b1001010 m%
b1001011 m%
b1001100 m%
b1001101 m%
b1001110 m%
b1001111 m%
b1010000 m%
b1010001 m%
b1010010 m%
b1010011 m%
b1010100 m%
b1010101 m%
b1010110 m%
b1010111 m%
b1011000 m%
b1011001 m%
b1011010 m%
b1011011 m%
b1011100 m%
b1011101 m%
b1011110 m%
b1011111 m%
b1100000 m%
b1100001 m%
b1100010 m%
b1100011 m%
b1100100 m%
b1100101 m%
b1100110 m%
b1100111 m%
b1101000 m%
b1101001 m%
b1101010 m%
b1101011 m%
b1101100 m%
b1101101 m%
b1101110 m%
b1101111 m%
b1110000 m%
b1110001 m%
b1110010 m%
b1110011 m%
b1110100 m%
b1110101 m%
b1110110 m%
b1110111 m%
b1111000 m%
b1111001 m%
b1111010 m%
b1111011 m%
b1111100 m%
b1111101 m%
b1111110 m%
b1111111 m%
b10000000 m%
b10000001 m%
b10000010 m%
b10000011 m%
b10000100 m%
b10000101 m%
b10000110 m%
b10000111 m%
b10001000 m%
b10001001 m%
b10001010 m%
b10001011 m%
b10001100 m%
b10001101 m%
b10001110 m%
b10001111 m%
b10010000 m%
b10010001 m%
b10010010 m%
b10010011 m%
b10010100 m%
b10010101 m%
b10010110 m%
b10010111 m%
b10011000 m%
b10011001 m%
b10011010 m%
b10011011 m%
b10011100 m%
b10011101 m%
b10011110 m%
b10011111 m%
b10100000 m%
b10100001 m%
b10100010 m%
b10100011 m%
b10100100 m%
b10100101 m%
b10100110 m%
b10100111 m%
b10101000 m%
b10101001 m%
b10101010 m%
b10101011 m%
b10101100 m%
b10101101 m%
b10101110 m%
b10101111 m%
b10110000 m%
b10110001 m%
b10110010 m%
b10110011 m%
b10110100 m%
b10110101 m%
b10110110 m%
b10110111 m%
b10111000 m%
b10111001 m%
b10111010 m%
b10111011 m%
b10111100 m%
b10111101 m%
b10111110 m%
b10111111 m%
b11000000 m%
b11000001 m%
b11000010 m%
b11000011 m%
b11000100 m%
b11000101 m%
b11000110 m%
b11000111 m%
b11001000 m%
b11001001 m%
b11001010 m%
b11001011 m%
b11001100 m%
b11001101 m%
b11001110 m%
b11001111 m%
b11010000 m%
b11010001 m%
b11010010 m%
b11010011 m%
b11010100 m%
b11010101 m%
b11010110 m%
b11010111 m%
b11011000 m%
b11011001 m%
b11011010 m%
b11011011 m%
b11011100 m%
b11011101 m%
b11011110 m%
b11011111 m%
b11100000 m%
b11100001 m%
b11100010 m%
b11100011 m%
b11100100 m%
b11100101 m%
b11100110 m%
b11100111 m%
b11101000 m%
b11101001 m%
b11101010 m%
b11101011 m%
b11101100 m%
b11101101 m%
b11101110 m%
b11101111 m%
b11110000 m%
b11110001 m%
b11110010 m%
b11110011 m%
b11110100 m%
b11110101 m%
b11110110 m%
b11110111 m%
b11111000 m%
b11111001 m%
b11111010 m%
b11111011 m%
b11111100 m%
b11111101 m%
b11111110 m%
b11111111 m%
b100000000 m%
#201
0"!
09
07-
0~
#250
0!!
08
06-
0}
#287
16
b101011110 3
b1100 4
b100 W
b11 S
b1 O
1z
15-
1K
1g
1f
1e
1d
1b
1`
1"-
1!-
1~,
1},
1{,
1y,
1v
1u
11-
10-
1\!
1[!
1Y!
1W!
1'"
1&"
1$"
1""
13!
12!
10!
1.!
1h+
1i+
b1 b+
1,"
0l,
0f,
0`,
0Z,
0T,
0N,
0H,
0B,
0<,
06,
00,
0*,
0&,
1(,
0),
1C!
0$,
0~+
1",
0#,
1D!
0|+
0v+
0p+
1W%
15$
1-"
1J!
1$#
x|"
1^!
1]!
1)"
1("
1~"
1,$
1v"
1!#
1N%
1w"
1q"
15!
14!
0P&
0Q&
0R&
1S&
#300
1!!
b100 #!
18
16-
1}
1)#
1V'
1U'
1S'
1Q'
1i(
1h(
1f(
1d(
1|)
1{)
1y)
1w)
11+
10+
1.+
1,+
1o+
#301
1N!
1O*
1Q*
1S*
1T*
1<)
1>)
1@)
1A)
1)(
1+(
1-(
1.(
1t&
1v&
1x&
1y&
1##
0$#
1(#
0'#
x~"
x,$
xv"
0!#
0N%
0w"
xq"
1g+
b111 b+
1j+
1k+
1+"
1I!
1H!
10"
12
11"
x1$
x2$
1$#
#350
0!!
08
06-
0}
#400
1!!
b101 #!
18
16-
1}
1n+
1m+
#401
1L!
1M!
0h+
0i+
1e+
b1000 b+
b0 c+
0k+
0,"
1l,
1f,
1`,
1Z,
1T,
1N,
1H,
1B,
1<,
16,
10,
1*,
1&,
0(,
1),
0C!
1$,
1~+
0",
1#,
0D!
1|+
1v+
1p+
0W%
05$
x4$
x3$
0-"
1/"
0J!
0I!
0H!
1G!
0u!
0t!
01"
1T&
1h*
0|"
0^!
0]!
x)"
x("
x5!
x4!
1P&
0S&
0~"
0,$
0v"
04$
03$
01$
02$
0q"
0T&
0h*
1W&
1/'
#450
0!!
08
06-
0}
#500
1!!
b110 #!
18
16-
1}
1H'
1Y+
0o+
0n+
0m+
1l+
#501
1K!
0L!
0M!
0N!
1_&
11'
1G'
1X&
1&!
1|
1B'
1='
1;'
19'
15'
13'
1s!
1v!
0W&
0/'
0X&
0&!
0|
1O!
b1001 b+
b1 c+
1J!
1u!
1^!
0P&
1Q&
1V&
1B(
0O!
#550
0!!
08
06-
0}
#600
1!!
b111 #!
18
16-
1}
0H'
1v'
1q'
1o'
1m'
1i'
1g'
1w'
1[(
0Y+
1X+
1]+
1o+
#601
1N!
1c&
1^&
0_&
1D(
1Z(
1C'
1n%
1p%
1t%
1v%
1x%
1}%
01'
1Y&
1&!
1|
0B'
0='
0;'
09'
05'
03'
1o!
0q+
1s+
0u+
1F!
1j!
01,
13,
05,
1A!
1h!
0=,
1?,
0A,
1?!
1f!
0I,
1K,
0M,
1=!
1b!
0a,
1c,
0e,
19!
1`!
0m,
1o,
0q,
17!
1U(
1S(
1P(
1N(
1M(
1L(
1K(
1J(
1F(
1r!
0V&
0B(
0Y&
0&!
0|
1O!
1i+
b1010 b+
b10 c+
b0 f+
1-"
0J!
1I!
0u!
1t!
0x!
0w!
0)"
0("
0^!
1]!
x|"
x~"
x,$
xv"
x4$
x3$
0Q&
1R&
05!
04!
1U&
1U)
x.$
x2$
xq"
0O!
#650
0!!
08
06-
0}
#700
1!!
b1000 #!
18
16-
1}
0v'
0q'
0o'
0m'
0i'
0g'
0w'
1y'
0[(
1+)
1))
1&)
1$)
1#)
1")
1!)
1~(
1z(
1,)
1n)
0X+
1W+
0]+
1\+
1a+
0o+
1n+
#701
1M!
0N!
1g&
1b&
0c&
1]&
0^&
1W)
1m)
1V(
1~%
1$&
1%&
1&&
1'&
1(&
1*&
1-&
1/&
0D(
1E'
0C'
0n%
0p%
0t%
0v%
0x%
0}%
1Z&
1&!
1|
0U(
0S(
0P(
0N(
0M(
0L(
0K(
0J(
0F(
1m!
0}+
1!,
0#,
1D!
1g!
0C,
1E,
0G,
1>!
1e!
0O,
1Q,
0S,
1<!
1d!
0U,
1W,
0Y,
1;!
0b!
1a,
0c,
1e,
09!
1h)
1g)
1e)
1^)
1\)
1[)
1q!
0U&
0U)
0Z&
0&!
0|
1O!
b1011 b+
b11 c+
b1 f+
1J!
1u!
1x!
1)"
1^!
0R&
1S&
15!
0.$
x/$
1T&
1h*
0O!
#750
0!!
08
06-
0}
#800
1!!
b1001 #!
18
16-
1}
0y'
0+)
0))
0&)
0$)
0#)
0")
0!)
0~(
0z(
0,)
1.)
0n)
1>*
1=*
1;*
14*
12*
11*
1?*
1#+
0W+
1V+
0\+
1[+
0a+
1`+
1o+
#801
1N!
1f&
0g&
1a&
0b&
1\&
0]&
1j*
1"+
1i)
12&
13&
15&
1<&
1>&
1?&
0W)
1X(
0V(
0~%
0$&
0%&
0&&
0'&
0(&
0*&
0-&
0/&
0E'
0G'
1[&
1&!
1|
0h)
0g)
0e)
0^)
0\)
0[)
1n!
0w+
1y+
0{+
1E!
0m!
1}+
0!,
1#,
0D!
1l!
0%,
1',
0),
1C!
0j!
11,
03,
15,
0A!
0h!
1=,
0?,
1A,
0?!
0g!
1C,
0E,
1G,
0>!
0f!
1I,
0K,
1M,
0=!
0d!
1U,
0W,
1Y,
0;!
1c!
0[,
1],
0_,
1:!
1b!
0a,
1c,
0e,
19!
0`!
1m,
0o,
1q,
07!
1z*
1y*
1x*
1w*
1u*
1s*
1r*
1o*
1n*
1m*
1l*
0s!
1p!
0T&
0h*
0[&
0&!
0|
1O!
0e+
b1100 b+
bx c+
b10 f+
0/"
0J!
0I!
1H!
xu!
xt!
0x!
1w!
0)"
1("
x^!
x]!
0O!
xP&
xQ&
xR&
xS&
05!
14!
x0$
0/$
#850
0!!
08
06-
0}
#900
1!!
b1010 #!
18
16-
1}
0.)
0>*
0=*
0;*
04*
02*
01*
0?*
1A*
0#+
1P+
1O+
1N+
1M+
1K+
1I+
1H+
1E+
1D+
1C+
1B+
1R+
0V+
0[+
1Z+
0`+
1_+
0o+
0n+
1m+
#901
1L!
0M!
0N!
1e&
0f&
1`&
0a&
0\&
1|*
1@&
1A&
1B&
1C&
1F&
1G&
1I&
1K&
1L&
1M&
1N&
0j*
1k)
0i)
02&
03&
05&
0<&
0>&
0?&
0X(
0Z(
0z*
0y*
0x*
0w*
0u*
0s*
0r*
0o*
0n*
0m*
0l*
0o!
1q+
0s+
1u+
0F!
1m!
0}+
1!,
0#,
1D!
1k!
0+,
1-,
0/,
1B!
1i!
07,
19,
0;,
1@!
1g!
0C,
1E,
0G,
1>!
1f!
0I,
1K,
0M,
1=!
0e!
1O,
0Q,
1S,
0<!
1a!
0g,
1i,
0k,
18!
1`!
0m,
1o,
0q,
17!
0r!
b1110 b+
b11 f+
1I!
1x!
1)"
15!
00$
x1$
#950
0!!
08
06-
0}
#1000
1!!
b1011 #!
18
16-
1}
0A*
0P+
0O+
0N+
0M+
0K+
0I+
0H+
0E+
0D+
0C+
0B+
0R+
1T+
0Z+
0_+
1^+
1n+
#1001
1M!
1d&
0e&
0`&
1~*
0|*
0@&
0A&
0B&
0C&
0F&
0G&
0I&
0K&
0L&
0M&
0N&
0k)
0m)
0n!
1w+
0y+
1{+
0E!
0m!
1}+
0!,
1#,
0D!
0l!
1%,
0',
1),
0C!
0k!
1+,
0-,
1/,
0B!
0i!
17,
09,
1;,
0@!
0g!
1C,
0E,
1G,
0>!
0f!
1I,
0K,
1M,
0=!
0c!
1[,
0],
1_,
0:!
0b!
1a,
0c,
1e,
09!
0a!
1g,
0i,
1k,
08!
0`!
1m,
0o,
1q,
07!
0q!
1h+
b0 b+
bx f+
1,"
0l,
0f,
0`,
0Z,
0T,
0N,
0H,
0B,
0<,
06,
00,
0*,
0&,
1(,
0),
1C!
0$,
0~+
1",
0#,
1D!
0|+
0v+
0p+
1W%
15$
04$
03$
0I!
0H!
0G!
xx!
xw!
1^!
1]!
0P&
0Q&
0R&
1S&
#1050
0!!
08
06-
0}
#1100
1!!
b1100 #!
18
16-
1}
0T+
0^+
0n+
0m+
0l+
#1101
0K!
0L!
0M!
0d&
0~*
0"+
0p!
0v!
1~"
1,$
1v"
1!#
1N%
1w"
1S%
1T%
11$
12$
1q"
0g+
b1 b+
0j+
0+"
1J!
00"
02
01$
02$
0S%
0T%
0$#
#1150
0!!
08
06-
0}
#1187
0R
b1 P
06
15
b100101011110 3
b1111011 4
b1100 S
b10 O
0z
05-
0K
1y
14-
1K
1]
1v,
1x
0r+
1t+
0u+
1F!
1w
0x+
1z+
0{+
1E!
0v
1~+
0",
1#,
0D!
1t
0,,
1.,
0/,
1B!
1s
02,
14,
05,
1A!
1r
08,
1:,
0;,
1@!
13-
12-
01-
1/-
1.-
1--
b1101101000110101 8-
1T!
1}!
1J
0I
1H
0G
1F
1E
0D
0C
0B
1A
0@
1?
1>
0=
1<
1;
1+!
0-$
0v"
0O%
0w"
0q"
b10 b+
0J!
1I!
#1200
1!!
b1101 #!
18
16-
1}
0)#
1N'
1a(
1t)
1)+
1n+
#1201
1M!
1L*
19)
1&(
1q&
0##
1$#
0(#
1'#
x~"
x,$
0!#
0N%
b111 b+
1j+
1k+
1J!
1H!
10"
12
11"
0$#
#1250
0!!
08
06-
0}
#1300
1!!
b1110 #!
18
16-
1}
1o+
1m+
#1301
1L!
1N!
0h+
1g+
0i+
1e+
b1000 b+
b0 c+
0k+
0,"
1l,
1f,
1`,
1Z,
1T,
1N,
1H,
1B,
1<,
18,
0:,
1;,
0@!
16,
12,
04,
15,
0A!
10,
1,,
0.,
1/,
0B!
1*,
1&,
0(,
1),
0C!
1$,
1|+
1x+
0z+
1{+
0E!
1v+
1r+
0t+
1u+
0F!
1p+
0W%
05$
1+"
x4$
x3$
0-"
1/"
0J!
0I!
0H!
1G!
0u!
0t!
01"
1T&
1h*
x1$
x2$
0|"
0^!
0]!
x)"
x("
x5!
x4!
1P&
0S&
0~"
0,$
04$
03$
01$
02$
0T&
0h*
1W&
1/'
#1350
0!!
08
06-
0}
#1400
1!!
b1111 #!
18
16-
1}
1H'
1Y+
0o+
0n+
0m+
1l+
#1401
1K!
0L!
0M!
0N!
1_&
11'
1G'
1X&
1&!
1|
1A'
1?'
1>'
19'
17'
14'
13'
1s!
1v!
0W&
0/'
0X&
0&!
0|
1O!
b1001 b+
b1 c+
1J!
1u!
1^!
0P&
1Q&
1V&
1B(
0O!
#1450
0!!
08
06-
0}
#1500
1!!
b10000 #!
18
16-
1}
0H'
1u'
1s'
1r'
1m'
1k'
1h'
1g'
1w'
1[(
0Y+
1X+
1]+
1o+
#1501
1N!
1c&
1^&
0_&
1D(
1Z(
1C'
1n%
1o%
1r%
1t%
1y%
1z%
1|%
01'
1Y&
1&!
1|
0A'
0?'
0>'
09'
07'
04'
03'
1n!
0w+
1y+
0{+
1E!
1l!
0%,
1',
0),
1C!
1k!
0+,
1-,
0/,
1B!
1f!
0I,
1K,
0M,
1=!
1d!
0U,
1W,
0Y,
1;!
1a!
0g,
1i,
0k,
18!
1`!
0m,
1o,
0q,
17!
1S(
1R(
1L(
1J(
1I(
1F(
1r!
0V&
0B(
0Y&
0&!
0|
1O!
1i+
b1010 b+
b10 c+
b0 f+
1-"
0J!
1I!
0u!
1t!
0x!
0w!
0)"
0("
0^!
1]!
x|"
x~"
x,$
x4$
x3$
0Q&
1R&
05!
04!
1U&
1U)
x.$
x2$
0O!
#1550
0!!
08
06-
0}
#1600
1!!
b10001 #!
18
16-
1}
0u'
0s'
0r'
0m'
0k'
0h'
0g'
0w'
1y'
0[(
1))
1()
1")
1~(
1}(
1z(
1,)
1n)
0X+
1W+
0]+
1\+
1a+
0o+
1n+
#1601
1M!
0N!
1g&
1b&
0c&
1]&
0^&
1W)
1m)
1V(
1~%
1#&
1$&
1&&
1,&
1-&
0D(
1E'
0C'
0n%
0o%
0r%
0t%
0y%
0z%
0|%
1Z&
1&!
1|
0S(
0R(
0L(
0J(
0I(
0F(
0n!
1w+
0y+
1{+
0E!
1m!
0}+
1!,
0#,
1D!
0k!
1+,
0-,
1/,
0B!
1c!
0[,
1],
0_,
1:!
0a!
1g,
0i,
1k,
08!
1h)
1g)
1f)
1e)
1b)
1a)
1`)
1])
1\)
1[)
1Z)
1q!
0U&
0U)
0Z&
0&!
0|
1O!
b1011 b+
b11 c+
b1 f+
1J!
1u!
1x!
1)"
1^!
0R&
1S&
15!
0.$
x/$
1T&
1h*
0O!
#1650
0!!
08
06-
0}
#1700
1!!
b10010 #!
18
16-
1}
0y'
0))
0()
0")
0~(
0}(
0z(
0,)
1.)
0n)
1>*
1=*
1<*
1;*
18*
17*
16*
13*
12*
11*
10*
1?*
1#+
0W+
1V+
0\+
1[+
0a+
1`+
1o+
#1701
1N!
1f&
0g&
1a&
0b&
1\&
0]&
1j*
1"+
1i)
11&
12&
13&
14&
17&
18&
19&
1<&
1=&
1>&
1?&
0W)
1X(
0V(
0~%
0#&
0$&
0&&
0,&
0-&
0E'
0G'
1[&
1&!
1|
0h)
0g)
0f)
0e)
0b)
0a)
0`)
0])
0\)
0[)
0Z)
1o!
0q+
1s+
0u+
1F!
1n!
0w+
1y+
0{+
1E!
1i!
07,
19,
0;,
1@!
1h!
0=,
1?,
0A,
1?!
1g!
0C,
1E,
0G,
1>!
0f!
1I,
0K,
1M,
0=!
1b!
0a,
1c,
0e,
19!
1a!
0g,
1i,
0k,
18!
0`!
1m,
0o,
1q,
07!
1{*
1y*
1w*
1v*
1r*
1p*
1o*
1m*
1l*
0s!
1p!
0T&
0h*
0[&
0&!
0|
1O!
0e+
b1100 b+
bx c+
b10 f+
0/"
0J!
0I!
1H!
xu!
xt!
0x!
1w!
0)"
1("
x^!
x]!
0O!
xP&
xQ&
xR&
xS&
05!
14!
x0$
0/$
#1750
0!!
08
06-
0}
#1800
1!!
b10011 #!
18
16-
1}
0.)
0>*
0=*
0<*
0;*
08*
07*
06*
03*
02*
01*
00*
0?*
1A*
0#+
1Q+
1O+
1M+
1L+
1H+
1F+
1E+
1C+
1B+
1R+
0V+
0[+
1Z+
0`+
1_+
0o+
0n+
1m+
#1801
1L!
0M!
0N!
1e&
0f&
1`&
0a&
0\&
1|*
1@&
1A&
1C&
1D&
1F&
1J&
1K&
1M&
1O&
0j*
1k)
0i)
01&
02&
03&
04&
07&
08&
09&
0<&
0=&
0>&
0?&
0X(
0Z(
0{*
0y*
0w*
0v*
0r*
0p*
0o*
0m*
0l*
0n!
1w+
0y+
1{+
0E!
0l!
1%,
0',
1),
0C!
1k!
0+,
1-,
0/,
1B!
1j!
01,
13,
05,
1A!
0i!
17,
09,
1;,
0@!
0h!
1=,
0?,
1A,
0?!
0g!
1C,
0E,
1G,
0>!
1f!
0I,
1K,
0M,
1=!
0b!
1a,
0c,
1e,
09!
1`!
0m,
1o,
0q,
17!
0r!
b1111 b+
b11 f+
1J!
1I!
1x!
1)"
15!
00$
x1$
#1850
0!!
08
06-
0}
#1900
1!!
b10100 #!
18
16-
1}
0A*
0Q+
0O+
0M+
0L+
0H+
0F+
0E+
0C+
0B+
0R+
1T+
0Z+
0_+
1^+
1o+
1n+
#1901
1M!
1N!
1d&
0e&
0`&
1~*
0|*
0@&
0A&
0C&
0D&
0F&
0J&
0K&
0M&
0O&
0k)
0m)
0o!
1q+
0s+
1u+
0F!
0m!
1}+
0!,
1#,
0D!
0k!
1+,
0-,
1/,
0B!
0j!
11,
03,
15,
0A!
0f!
1I,
0K,
1M,
0=!
0d!
1U,
0W,
1Y,
0;!
0c!
1[,
0],
1_,
0:!
0a!
1g,
0i,
1k,
08!
0`!
1m,
0o,
1q,
07!
0q!
1h+
0g+
b0 b+
bx f+
1,"
0l,
0f,
0`,
0Z,
0T,
0N,
0H,
0B,
0<,
08,
1:,
0;,
1@!
06,
02,
14,
05,
1A!
00,
0,,
1.,
0/,
1B!
0*,
0&,
1(,
0),
1C!
0$,
0|+
0x+
1z+
0{+
1E!
0v+
0r+
1t+
0u+
1F!
0p+
1W%
15$
04$
03$
0+"
0J!
0I!
0H!
0G!
xx!
xw!
01$
02$
1^!
1]!
0P&
0Q&
0R&
1S&
#1950
0!!
08
06-
0}
#2000
1!!
b10101 #!
18
16-
1}
0T+
0^+
0o+
0n+
0m+
0l+
#2001
0K!
0L!
0M!
0N!
0d&
0~*
0"+
0p!
0v!
1~"
1,$
1!#
1N%
b10 b+
0j+
1I!
00"
02
1$#
#2050
0!!
08
06-
0}
#2087
b10 P
b11111111111111111111111111111111 W
