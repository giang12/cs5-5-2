Model Technology ModelSim SE vlog 5.8b Compiler 2004.01 Jan 26 2004
-- Compiling module alu
-- Compiling module and16
-- Compiling module and2_16bit
-- Compiling module and2
-- Compiling module and3
-- Compiling module branch_cond_test
-- Compiling module btr_mod
-- Compiling module cache
-- Compiling module cla_16bit
-- Compiling module clkrst
-- Compiling module clu_16bit
-- Compiling module clu_4bit
-- Compiling module cond_set_old
-- Compiling module cond_set
-- Compiling module control
-- Compiling module decoder3_8
-- Compiling module decode
-- Compiling module dff_16bit
-- Compiling module dff_8bit_tb
-- Compiling module dff_8bit
-- Compiling module dff
-- Compiling module dst_reg_parser
-- Compiling module execution
-- Compiling module ext_mod11_16
-- Compiling module ext_mod5_16
-- Compiling module ext_mod8_16
-- Compiling module fetch
-- Compiling module final_memory
-- Compiling module forward_unit
-- Compiling module four_bank_mem
-- Compiling module fulladder_16bit
-- Compiling module fulladder
-- Compiling module hazard_detect
-- Compiling module inner_module
-- Compiling module inverter_16bit
-- Compiling module lsb_module
-- Compiling module match_both
-- Compiling module memc
-- Compiling module memory2c_align
-- Compiling module memory2c
-- Compiling module memory
-- Compiling module mem_system_hier
-- Compiling module mem_system_perfbench
-- Compiling module mem_system_randbench
-- Compiling module mem_system_ref
-- Compiling module mem_system
-- Compiling module memv
-- Compiling module msb_module
-- Compiling module mux2_1_16bit
-- Compiling module mux2_1_32bit
-- Compiling module mux2_1_8bit
-- Compiling module mux2_1
-- Compiling module mux4_1_16bit
-- Compiling module mux4_1_4bit
-- Compiling module mux4_1
-- Compiling module mux8_1_16bit
-- Compiling module nand2
-- Compiling module nor2
-- Compiling module not1_16bit
-- Compiling module not1
-- Compiling module or16
-- Compiling module or2_16bit
-- Compiling module or2
-- Compiling module or3
-- Compiling module pc_ctr
-- Compiling module proc_hier_bench
-- Compiling module proc_hier_pbench
-- Compiling module proc_hier
-- Compiling module proc
-- Compiling module reg_16bit
-- Compiling module reg_64bit
-- Compiling module regEXMem
-- Compiling module regIDEX
-- Compiling module regIFID
-- Compiling module regMemWB
-- Compiling module rf_bypass
-- Compiling module rf
-- Compiling module sf_left8bit
-- Compiling module sh_1
-- Compiling module sh_2
-- Compiling module sh_4
-- Compiling module sh_8
-- Compiling module shifter
-- Compiling module special_control
-- Compiling module stallmem
-- Compiling module statelogic
-- Compiling module statereg
-- Compiling module writeback
-- Compiling module xor2_16bit
-- Compiling module xor2_3bit
-- Compiling module xor2
-- Compiling module zero_detect

Top level modules:
	and16
	cond_set_old
	dff_8bit_tb
	memory2c_align
	memory2c
	mem_system_perfbench
	mem_system_randbench
	pc_ctr
	proc_hier_bench
	proc_hier_pbench
	reg_64bit
	stallmem
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4205 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2505 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4205 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4605 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4205 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 7005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4205 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 6005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 5005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3705 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3305 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 6905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 13805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 13805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 30005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# hmm....more than 100000 cycles of simulation...error?
# 
# ** Note: $finish    : clkrst.v(41)
#    Time: 10 ms  Iteration: 0  Instance: /proc_hier_pbench/DUT/c0
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 14905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 4605 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3405 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3605 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 3105 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2005 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 2905 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
Created the following files
loadfile_0.img
loadfile_1.img
loadfile_2.img
loadfile_3.img
loadfile_all.img
loadfile.lst
Reading /afs/cs.wisc.edu/s/mentor-2004/common/modeltech-5.8b/tcl/vsim/pref.tcl 

# 5.8b

# vsim -lib __work -c proc_hier_pbench 
# //  ModelSim SE 5.8b Jan 01 2004 Linux 2.6.32-573.7.1.el6.x86_64
# //
# //  Copyright Model Technology, a Mentor Graphics Corporation company, 2004
# //                         All Rights Reserved.
# //                   UNPUBLISHED, LICENSED SOFTWARE.
# //         CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
# //        PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS.
# //
# Loading __work.proc_hier_pbench
# Loading __work.proc_hier
# Loading __work.clkrst
# Loading __work.proc
# Loading __work.fetch
# Loading __work.mux2_1_16bit
# Loading __work.mux2_1
# Loading __work.not1
# Loading __work.nand2
# Loading __work.nor2
# Loading __work.reg_16bit
# Loading __work.dff
# Loading __work.mem_system
# Loading __work.cache
# Loading __work.memc
# Loading __work.memv
# Loading __work.four_bank_mem
# Loading __work.final_memory
# Loading __work.statelogic
# Loading __work.statereg
# Loading __work.cla_16bit
# Loading __work.fulladder_16bit
# Loading __work.fulladder
# Loading __work.xor2
# Loading __work.and2
# Loading __work.clu_16bit
# Loading __work.clu_4bit
# Loading __work.or2
# Loading __work.regIFID
# Loading __work.dff_16bit
# Loading __work.dff_8bit
# Loading __work.mux2_1_8bit
# Loading __work.decode
# Loading __work.match_both
# Loading __work.hazard_detect
# Loading __work.mux2_1_32bit
# Loading __work.special_control
# Loading __work.control
# Loading __work.dst_reg_parser
# Loading __work.rf_bypass
# Loading __work.rf
# Loading __work.decoder3_8
# Loading __work.and3
# Loading __work.mux8_1_16bit
# Loading __work.mux4_1_16bit
# Loading __work.mux4_1
# Loading __work.xor2_3bit
# Loading __work.or3
# Loading __work.mux4_1_4bit
# Loading __work.ext_mod8_16
# Loading __work.ext_mod11_16
# Loading __work.ext_mod5_16
# Loading __work.regIDEX
# Loading __work.execution
# Loading __work.forward_unit
# Loading __work.sf_left8bit
# Loading __work.alu
# Loading __work.inverter_16bit
# Loading __work.not1_16bit
# Loading __work.shifter
# Loading __work.sh_1
# Loading __work.msb_module
# Loading __work.inner_module
# Loading __work.lsb_module
# Loading __work.sh_2
# Loading __work.sh_4
# Loading __work.sh_8
# Loading __work.and2_16bit
# Loading __work.or2_16bit
# Loading __work.xor2_16bit
# Loading __work.zero_detect
# Loading __work.btr_mod
# Loading __work.cond_set
# Loading __work.branch_cond_test
# Loading __work.or16
# Loading __work.regEXMem
# Loading __work.memory
# Loading __work.regMemWB
# Loading __work.writeback
VSIM 1> run -all
# Hello world...simulation starting
# See verilogsim.log and verilogsim.ptrace for output
# ** Note: $finish    : proc_hier_pbench.v(115)
#    Time: 1805 ns  Iteration: 0  Instance: /proc_hier_pbench
